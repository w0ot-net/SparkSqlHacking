package org.apache.hadoop.hive.metastore.hbase;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolMessageEnum;
import com.google.protobuf.RepeatedFieldBuilder;
import com.google.protobuf.SingleFieldBuilder;
import com.google.protobuf.UnknownFieldSet;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.protobuf.Descriptors.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class HbaseMetastoreProto {
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_fieldAccessorTable;
   private static Descriptors.Descriptor internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor;
   private static GeneratedMessage.FieldAccessorTable internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_fieldAccessorTable;
   private static Descriptors.FileDescriptor descriptor;

   private HbaseMetastoreProto() {
   }

   public static void registerAllExtensions(ExtensionRegistry registry) {
   }

   public static Descriptors.FileDescriptor getDescriptor() {
      return descriptor;
   }

   static {
      String[] descriptorData = new String[]{"\n\u001bhbase_metastore_proto.proto\u0012&org.apache.hadoop.hive.metastore.hbase\"h\n\tAggrStats\u0012\u0013\n\u000bparts_found\u0018\u0001 \u0002(\u0003\u0012F\n\tcol_stats\u0018\u0002 \u0003(\u000b23.org.apache.hadoop.hive.metastore.hbase.ColumnStats\"ô\u0001\n\u0014AggrStatsBloomFilter\u0012\u000f\n\u0007db_name\u0018\u0001 \u0002(\f\u0012\u0012\n\ntable_name\u0018\u0002 \u0002(\f\u0012^\n\fbloom_filter\u0018\u0003 \u0002(\u000b2H.org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter\u0012\u0015\n\raggregated_at\u0018\u0004 \u0002(\u0003\u001a@\n\u000bBloomFilter\u0012\u0010\n\bnum_bits\u0018\u0001 \u0002(\u0005\u0012\u0011\n\tnum_fun", "cs\u0018\u0002 \u0002(\u0005\u0012\f\n\u0004bits\u0018\u0003 \u0003(\u0003\"ï\u0001\n\u001aAggrStatsInvalidatorFilter\u0012_\n\rto_invalidate\u0018\u0001 \u0003(\u000b2H.org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry\u0012\u0011\n\trun_every\u0018\u0002 \u0002(\u0003\u0012\u001c\n\u0014max_cache_entry_life\u0018\u0003 \u0002(\u0003\u001a?\n\u0005Entry\u0012\u000f\n\u0007db_name\u0018\u0001 \u0002(\f\u0012\u0012\n\ntable_name\u0018\u0002 \u0002(\f\u0012\u0011\n\tpart_name\u0018\u0003 \u0002(\f\"ò\b\n\u000bColumnStats\u0012\u0015\n\rlast_analyzed\u0018\u0001 \u0001(\u0003\u0012\u0013\n\u000bcolumn_type\u0018\u0002 \u0002(\t\u0012\u0011\n\tnum_nulls\u0018\u0003 \u0001(\u0003\u0012\u001b\n\u0013num_distinct_values\u0018\u0004 \u0001(\u0003\u0012T\n\nbool_stats\u0018\u0005 \u0001(\u000b2@.org.a", "pache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats\u0012Q\n\nlong_stats\u0018\u0006 \u0001(\u000b2=.org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats\u0012U\n\fdouble_stats\u0018\u0007 \u0001(\u000b2?.org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats\u0012U\n\fstring_stats\u0018\b \u0001(\u000b2?.org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats\u0012U\n\fbinary_stats\u0018\t \u0001(\u000b2?.org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringSta", "ts\u0012W\n\rdecimal_stats\u0018\n \u0001(\u000b2@.org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats\u0012\u0013\n\u000bcolumn_name\u0018\u000b \u0001(\t\u0012\u0013\n\u000bbit_vectors\u0018\f \u0001(\t\u001a5\n\fBooleanStats\u0012\u0011\n\tnum_trues\u0018\u0001 \u0001(\u0003\u0012\u0012\n\nnum_falses\u0018\u0002 \u0001(\u0003\u001a2\n\tLongStats\u0012\u0011\n\tlow_value\u0018\u0001 \u0001(\u0012\u0012\u0012\n\nhigh_value\u0018\u0002 \u0001(\u0012\u001a4\n\u000bDoubleStats\u0012\u0011\n\tlow_value\u0018\u0001 \u0001(\u0001\u0012\u0012\n\nhigh_value\u0018\u0002 \u0001(\u0001\u001a=\n\u000bStringStats\u0012\u0016\n\u000emax_col_length\u0018\u0001 \u0001(\u0003\u0012\u0016\n\u000eavg_col_length\u0018\u0002 \u0001(\u0001\u001aõ\u0001\n\fDecimalStats\u0012[\n\tlow_value\u0018\u0001 \u0001(\u000b2H.org.", "apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal\u0012\\\n\nhigh_value\u0018\u0002 \u0001(\u000b2H.org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal\u001a*\n\u0007Decimal\u0012\u0010\n\bunscaled\u0018\u0001 \u0002(\f\u0012\r\n\u0005scale\u0018\u0002 \u0002(\u0005\"¦\u0002\n\bDatabase\u0012\u0013\n\u000bdescription\u0018\u0001 \u0001(\t\u0012\u000b\n\u0003uri\u0018\u0002 \u0001(\t\u0012F\n\nparameters\u0018\u0003 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u0012Q\n\nprivileges\u0018\u0004 \u0001(\u000b2=.org.apache.hadoop.hive.metastore.hbase.PrincipalPrivi", "legeSet\u0012\u0012\n\nowner_name\u0018\u0005 \u0001(\t\u0012I\n\nowner_type\u0018\u0006 \u0001(\u000e25.org.apache.hadoop.hive.metastore.hbase.PrincipalType\"$\n\u000fDelegationToken\u0012\u0011\n\ttoken_str\u0018\u0001 \u0002(\t\":\n\u000bFieldSchema\u0012\f\n\u0004name\u0018\u0001 \u0002(\t\u0012\f\n\u0004type\u0018\u0002 \u0002(\t\u0012\u000f\n\u0007comment\u0018\u0003 \u0001(\t\"\u0086\u0004\n\bFunction\u0012\u0012\n\nclass_name\u0018\u0001 \u0001(\t\u0012\u0012\n\nowner_name\u0018\u0002 \u0001(\t\u0012I\n\nowner_type\u0018\u0003 \u0001(\u000e25.org.apache.hadoop.hive.metastore.hbase.PrincipalType\u0012\u0013\n\u000bcreate_time\u0018\u0004 \u0001(\u0012\u0012T\n\rfunction_type\u0018\u0005 \u0001(\u000e2=.org.apache.hadoop.hive.me", "tastore.hbase.Function.FunctionType\u0012S\n\rresource_uris\u0018\u0006 \u0003(\u000b2<.org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri\u001a¬\u0001\n\u000bResourceUri\u0012`\n\rresource_type\u0018\u0001 \u0002(\u000e2I.org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType\u0012\u000b\n\u0003uri\u0018\u0002 \u0002(\t\".\n\fResourceType\u0012\u0007\n\u0003JAR\u0010\u0001\u0012\b\n\u0004FILE\u0010\u0002\u0012\u000b\n\u0007ARCHIVE\u0010\u0003\"\u0018\n\fFunctionType\u0012\b\n\u0004JAVA\u0010\u0001\"\u001f\n\tMasterKey\u0012\u0012\n\nmaster_key\u0018\u0001 \u0002(\t\",\n\u000eParameterEntry\u0012\u000b\n\u0003key\u0018\u0001 \u0002(\t\u0012\r\n\u0005value\u0018\u0002 \u0002(\t", "\"W\n\nParameters\u0012I\n\tparameter\u0018\u0001 \u0003(\u000b26.org.apache.hadoop.hive.metastore.hbase.ParameterEntry\"ð\u0001\n\tPartition\u0012\u0013\n\u000bcreate_time\u0018\u0001 \u0001(\u0003\u0012\u0018\n\u0010last_access_time\u0018\u0002 \u0001(\u0003\u0012\u0010\n\blocation\u0018\u0003 \u0001(\t\u0012I\n\rsd_parameters\u0018\u0004 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u0012\u000f\n\u0007sd_hash\u0018\u0005 \u0002(\f\u0012F\n\nparameters\u0018\u0006 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\"\u0084\u0001\n\u001aPrincipalPrivilegeSetEntry\u0012\u0016\n\u000eprincipal_name\u0018\u0001 \u0002(\t\u0012N\n\nprivilege", "s\u0018\u0002 \u0003(\u000b2:.org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo\"½\u0001\n\u0015PrincipalPrivilegeSet\u0012Q\n\u0005users\u0018\u0001 \u0003(\u000b2B.org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry\u0012Q\n\u0005roles\u0018\u0002 \u0003(\u000b2B.org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry\"°\u0001\n\u0012PrivilegeGrantInfo\u0012\u0011\n\tprivilege\u0018\u0001 \u0001(\t\u0012\u0013\n\u000bcreate_time\u0018\u0002 \u0001(\u0003\u0012\u000f\n\u0007grantor\u0018\u0003 \u0001(\t\u0012K\n\fgrantor_type\u0018\u0004 \u0001(\u000e25.org.apache.hadoop.hive.metastore.hba", "se.PrincipalType\u0012\u0014\n\fgrant_option\u0018\u0005 \u0001(\b\"ü\u0001\n\rRoleGrantInfo\u0012\u0016\n\u000eprincipal_name\u0018\u0001 \u0002(\t\u0012M\n\u000eprincipal_type\u0018\u0002 \u0002(\u000e25.org.apache.hadoop.hive.metastore.hbase.PrincipalType\u0012\u0010\n\badd_time\u0018\u0003 \u0001(\u0003\u0012\u000f\n\u0007grantor\u0018\u0004 \u0001(\t\u0012K\n\fgrantor_type\u0018\u0005 \u0001(\u000e25.org.apache.hadoop.hive.metastore.hbase.PrincipalType\u0012\u0014\n\fgrant_option\u0018\u0006 \u0001(\b\"^\n\u0011RoleGrantInfoList\u0012I\n\ngrant_info\u0018\u0001 \u0003(\u000b25.org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo\"\u0018\n\bRoleLis", "t\u0012\f\n\u0004role\u0018\u0001 \u0003(\t\"/\n\u0004Role\u0012\u0013\n\u000bcreate_time\u0018\u0001 \u0001(\u0003\u0012\u0012\n\nowner_name\u0018\u0002 \u0001(\t\"¬\b\n\u0011StorageDescriptor\u0012A\n\u0004cols\u0018\u0001 \u0003(\u000b23.org.apache.hadoop.hive.metastore.hbase.FieldSchema\u0012\u0014\n\finput_format\u0018\u0002 \u0001(\t\u0012\u0015\n\routput_format\u0018\u0003 \u0001(\t\u0012\u0015\n\ris_compressed\u0018\u0004 \u0001(\b\u0012\u0013\n\u000bnum_buckets\u0018\u0005 \u0001(\u0011\u0012W\n\nserde_info\u0018\u0006 \u0001(\u000b2C.org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo\u0012\u0013\n\u000bbucket_cols\u0018\u0007 \u0003(\t\u0012R\n\tsort_cols\u0018\b \u0003(\u000b2?.org.apache.hadoop.hive.met", "astore.hbase.StorageDescriptor.Order\u0012Y\n\u000bskewed_info\u0018\t \u0001(\u000b2D.org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo\u0012!\n\u0019stored_as_sub_directories\u0018\n \u0001(\b\u001a.\n\u0005Order\u0012\u0013\n\u000bcolumn_name\u0018\u0001 \u0002(\t\u0012\u0010\n\u0005order\u0018\u0002 \u0001(\u0011:\u00011\u001a|\n\tSerDeInfo\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u0019\n\u0011serialization_lib\u0018\u0002 \u0001(\t\u0012F\n\nparameters\u0018\u0003 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u001a\u008c\u0003\n\nSkewedInfo\u0012\u0018\n\u0010skewed_col_names\u0018\u0001 \u0003(\t\u0012r\n\u0011skewed_col_values\u0018\u0002", " \u0003(\u000b2W.org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList\u0012\u0086\u0001\n\u001eskewed_col_value_location_maps\u0018\u0003 \u0003(\u000b2^.org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap\u001a.\n\u0012SkewedColValueList\u0012\u0018\n\u0010skewed_col_value\u0018\u0001 \u0003(\t\u001a7\n\u0019SkewedColValueLocationMap\u0012\u000b\n\u0003key\u0018\u0001 \u0003(\t\u0012\r\n\u0005value\u0018\u0002 \u0002(\t\"¬\u0004\n\u0005Table\u0012\r\n\u0005owner\u0018\u0001 \u0001(\t\u0012\u0013\n\u000bcreate_time\u0018\u0002 \u0001(\u0003\u0012\u0018\n\u0010last_access_tim", "e\u0018\u0003 \u0001(\u0003\u0012\u0011\n\tretention\u0018\u0004 \u0001(\u0003\u0012\u0010\n\blocation\u0018\u0005 \u0001(\t\u0012I\n\rsd_parameters\u0018\u0006 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u0012\u000f\n\u0007sd_hash\u0018\u0007 \u0002(\f\u0012K\n\u000epartition_keys\u0018\b \u0003(\u000b23.org.apache.hadoop.hive.metastore.hbase.FieldSchema\u0012F\n\nparameters\u0018\t \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u0012\u001a\n\u0012view_original_text\u0018\n \u0001(\t\u0012\u001a\n\u0012view_expanded_text\u0018\u000b \u0001(\t\u0012\u0012\n\ntable_type\u0018\f \u0001(\t\u0012Q\n\nprivileges\u0018\r \u0001(\u000b2=.org.apache.hadoo", "p.hive.metastore.hbase.PrincipalPrivilegeSet\u0012\u0014\n\fis_temporary\u0018\u000e \u0001(\b\u0012\u001a\n\u0012is_rewrite_enabled\u0018\u000f \u0001(\b\"Ü\u0002\n\u0005Index\u0012\u0019\n\u0011indexHandlerClass\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006dbName\u0018\u0002 \u0002(\t\u0012\u0015\n\rorigTableName\u0018\u0003 \u0002(\t\u0012\u0010\n\blocation\u0018\u0004 \u0001(\t\u0012I\n\rsd_parameters\u0018\u0005 \u0001(\u000b22.org.apache.hadoop.hive.metastore.hbase.Parameters\u0012\u0012\n\ncreateTime\u0018\u0006 \u0001(\u0005\u0012\u0016\n\u000elastAccessTime\u0018\u0007 \u0001(\u0005\u0012\u0016\n\u000eindexTableName\u0018\b \u0001(\t\u0012\u000f\n\u0007sd_hash\u0018\t \u0001(\f\u0012F\n\nparameters\u0018\n \u0001(\u000b22.org.apache.hadoop.hive.metast", "ore.hbase.Parameters\u0012\u0017\n\u000fdeferredRebuild\u0018\u000b \u0001(\b\"ë\u0004\n\u0016PartitionKeyComparator\u0012\r\n\u0005names\u0018\u0001 \u0002(\t\u0012\r\n\u0005types\u0018\u0002 \u0002(\t\u0012S\n\u0002op\u0018\u0003 \u0003(\u000b2G.org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator\u0012S\n\u0005range\u0018\u0004 \u0003(\u000b2D.org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range\u001a(\n\u0004Mark\u0012\r\n\u0005value\u0018\u0001 \u0002(\t\u0012\u0011\n\tinclusive\u0018\u0002 \u0002(\b\u001aº\u0001\n\u0005Range\u0012\u000b\n\u0003key\u0018\u0001 \u0002(\t\u0012R\n\u0005start\u0018\u0002 \u0001(\u000b2C.org.apache.hadoop.hive.metastore.hbase.Partit", "ionKeyComparator.Mark\u0012P\n\u0003end\u0018\u0003 \u0001(\u000b2C.org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark\u001a¡\u0001\n\bOperator\u0012Z\n\u0004type\u0018\u0001 \u0002(\u000e2L.org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type\u0012\u000b\n\u0003key\u0018\u0002 \u0002(\t\u0012\u000b\n\u0003val\u0018\u0003 \u0002(\t\"\u001f\n\u0004Type\u0012\b\n\u0004LIKE\u0010\u0000\u0012\r\n\tNOTEQUALS\u0010\u0001\"û\u0001\n\nPrimaryKey\u0012\u000f\n\u0007pk_name\u0018\u0001 \u0002(\t\u0012Q\n\u0004cols\u0018\u0002 \u0003(\u000b2C.org.apache.hadoop.hive.metastore.hbase.PrimaryKey.PrimaryKeyColumn\u0012\u0019\n\u0011enable_constra", "int\u0018\u0003 \u0001(\b\u0012\u001b\n\u0013validate_constraint\u0018\u0004 \u0001(\b\u0012\u0017\n\u000frely_constraint\u0018\u0005 \u0001(\b\u001a8\n\u0010PrimaryKeyColumn\u0012\u0013\n\u000bcolumn_name\u0018\u0001 \u0002(\t\u0012\u000f\n\u0007key_seq\u0018\u0002 \u0002(\u0011\"\u0085\u0004\n\u000bForeignKeys\u0012K\n\u0003fks\u0018\u0001 \u0003(\u000b2>.org.apache.hadoop.hive.metastore.hbase.ForeignKeys.ForeignKey\u001a¨\u0003\n\nForeignKey\u0012\u000f\n\u0007fk_name\u0018\u0001 \u0002(\t\u0012\u001a\n\u0012referenced_db_name\u0018\u0002 \u0002(\t\u0012\u001d\n\u0015referenced_table_name\u0018\u0003 \u0002(\t\u0012\u001a\n\u0012referenced_pk_name\u0018\u0004 \u0001(\t\u0012\u0013\n\u000bupdate_rule\u0018\u0005 \u0001(\u0005\u0012\u0013\n\u000bdelete_rule\u0018\u0006 \u0001(\u0005\u0012]\n\u0004cols\u0018\u0007 \u0003(\u000b2O.org.apac", "he.hadoop.hive.metastore.hbase.ForeignKeys.ForeignKey.ForeignKeyColumn\u0012\u0019\n\u0011enable_constraint\u0018\b \u0001(\b\u0012\u001b\n\u0013validate_constraint\u0018\t \u0001(\b\u0012\u0017\n\u000frely_constraint\u0018\n \u0001(\b\u001aX\n\u0010ForeignKeyColumn\u0012\u0013\n\u000bcolumn_name\u0018\u0001 \u0002(\t\u0012\u001e\n\u0016referenced_column_name\u0018\u0002 \u0002(\t\u0012\u000f\n\u0007key_seq\u0018\u0003 \u0002(\u0011*#\n\rPrincipalType\u0012\b\n\u0004USER\u0010\u0000\u0012\b\n\u0004ROLE\u0010\u0001"};
      Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
         public ExtensionRegistry assignDescriptors(Descriptors.FileDescriptor root) {
            HbaseMetastoreProto.descriptor = root;
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor, new String[]{"PartsFound", "ColStats"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(1);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor, new String[]{"DbName", "TableName", "BloomFilter", "AggregatedAt"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor, new String[]{"NumBits", "NumFuncs", "Bits"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(2);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor, new String[]{"ToInvalidate", "RunEvery", "MaxCacheEntryLife"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor, new String[]{"DbName", "TableName", "PartName"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(3);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor, new String[]{"LastAnalyzed", "ColumnType", "NumNulls", "NumDistinctValues", "BoolStats", "LongStats", "DoubleStats", "StringStats", "BinaryStats", "DecimalStats", "ColumnName", "BitVectors"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor, new String[]{"NumTrues", "NumFalses"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor.getNestedTypes().get(1);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor, new String[]{"LowValue", "HighValue"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor.getNestedTypes().get(2);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor, new String[]{"LowValue", "HighValue"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor.getNestedTypes().get(3);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor, new String[]{"MaxColLength", "AvgColLength"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor.getNestedTypes().get(4);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor, new String[]{"LowValue", "HighValue"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor, new String[]{"Unscaled", "Scale"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(4);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor, new String[]{"Description", "Uri", "Parameters", "Privileges", "OwnerName", "OwnerType"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(5);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor, new String[]{"TokenStr"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(6);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor, new String[]{"Name", "Type", "Comment"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(7);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor, new String[]{"ClassName", "OwnerName", "OwnerType", "CreateTime", "FunctionType", "ResourceUris"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor, new String[]{"ResourceType", "Uri"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(8);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor, new String[]{"MasterKey"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(9);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor, new String[]{"Key", "Value"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(10);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor, new String[]{"Parameter"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(11);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor, new String[]{"CreateTime", "LastAccessTime", "Location", "SdParameters", "SdHash", "Parameters"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(12);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor, new String[]{"PrincipalName", "Privileges"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(13);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor, new String[]{"Users", "Roles"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(14);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor, new String[]{"Privilege", "CreateTime", "Grantor", "GrantorType", "GrantOption"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(15);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor, new String[]{"PrincipalName", "PrincipalType", "AddTime", "Grantor", "GrantorType", "GrantOption"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(16);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor, new String[]{"GrantInfo"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(17);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor, new String[]{"Role"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(18);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor, new String[]{"CreateTime", "OwnerName"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(19);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor, new String[]{"Cols", "InputFormat", "OutputFormat", "IsCompressed", "NumBuckets", "SerdeInfo", "BucketCols", "SortCols", "SkewedInfo", "StoredAsSubDirectories"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor, new String[]{"ColumnName", "Order"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor.getNestedTypes().get(1);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor, new String[]{"Name", "SerializationLib", "Parameters"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor.getNestedTypes().get(2);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor, new String[]{"SkewedColNames", "SkewedColValues", "SkewedColValueLocationMaps"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor, new String[]{"SkewedColValue"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor.getNestedTypes().get(1);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor, new String[]{"Key", "Value"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(20);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor, new String[]{"Owner", "CreateTime", "LastAccessTime", "Retention", "Location", "SdParameters", "SdHash", "PartitionKeys", "Parameters", "ViewOriginalText", "ViewExpandedText", "TableType", "Privileges", "IsTemporary", "IsRewriteEnabled"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(21);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor, new String[]{"IndexHandlerClass", "DbName", "OrigTableName", "Location", "SdParameters", "CreateTime", "LastAccessTime", "IndexTableName", "SdHash", "Parameters", "DeferredRebuild"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(22);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor, new String[]{"Names", "Types", "Op", "Range"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor, new String[]{"Value", "Inclusive"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor.getNestedTypes().get(1);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor, new String[]{"Key", "Start", "End"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor.getNestedTypes().get(2);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor, new String[]{"Type", "Key", "Val"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(23);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor, new String[]{"PkName", "Cols", "EnableConstraint", "ValidateConstraint", "RelyConstraint"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor, new String[]{"ColumnName", "KeySeq"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.getDescriptor().getMessageTypes().get(24);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor, new String[]{"Fks"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor, new String[]{"FkName", "ReferencedDbName", "ReferencedTableName", "ReferencedPkName", "UpdateRule", "DeleteRule", "Cols", "EnableConstraint", "ValidateConstraint", "RelyConstraint"});
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor = (Descriptors.Descriptor)HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor.getNestedTypes().get(0);
            HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor, new String[]{"ColumnName", "ReferencedColumnName", "KeySeq"});
            return null;
         }
      };
      FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0], assigner);
   }

   public static enum PrincipalType implements ProtocolMessageEnum {
      USER(0, 0),
      ROLE(1, 1);

      public static final int USER_VALUE = 0;
      public static final int ROLE_VALUE = 1;
      private static Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
         public PrincipalType findValueByNumber(int number) {
            return HbaseMetastoreProto.PrincipalType.valueOf(number);
         }
      };
      private static final PrincipalType[] VALUES = values();
      private final int index;
      private final int value;

      public final int getNumber() {
         return this.value;
      }

      public static PrincipalType valueOf(int value) {
         switch (value) {
            case 0:
               return USER;
            case 1:
               return ROLE;
            default:
               return null;
         }
      }

      public static Internal.EnumLiteMap internalGetValueMap() {
         return internalValueMap;
      }

      public final Descriptors.EnumValueDescriptor getValueDescriptor() {
         return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.index);
      }

      public final Descriptors.EnumDescriptor getDescriptorForType() {
         return getDescriptor();
      }

      public static final Descriptors.EnumDescriptor getDescriptor() {
         return (Descriptors.EnumDescriptor)HbaseMetastoreProto.getDescriptor().getEnumTypes().get(0);
      }

      public static PrincipalType valueOf(Descriptors.EnumValueDescriptor desc) {
         if (desc.getType() != getDescriptor()) {
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
         } else {
            return VALUES[desc.getIndex()];
         }
      }

      private PrincipalType(int index, int value) {
         this.index = index;
         this.value = value;
      }
   }

   public static final class AggrStats extends GeneratedMessage implements AggrStatsOrBuilder {
      private static final AggrStats defaultInstance = new AggrStats(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public AggrStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new AggrStats(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int PARTS_FOUND_FIELD_NUMBER = 1;
      private long partsFound_;
      public static final int COL_STATS_FIELD_NUMBER = 2;
      private List colStats_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private AggrStats(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private AggrStats(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static AggrStats getDefaultInstance() {
         return defaultInstance;
      }

      public AggrStats getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private AggrStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.partsFound_ = input.readInt64();
                     break;
                  case 18:
                     if ((mutable_bitField0_ & 2) != 2) {
                        this.colStats_ = new ArrayList();
                        mutable_bitField0_ |= 2;
                     }

                     this.colStats_.add(input.readMessage(HbaseMetastoreProto.ColumnStats.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 2) == 2) {
               this.colStats_ = Collections.unmodifiableList(this.colStats_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStats.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasPartsFound() {
         return (this.bitField0_ & 1) == 1;
      }

      public long getPartsFound() {
         return this.partsFound_;
      }

      public List getColStatsList() {
         return this.colStats_;
      }

      public List getColStatsOrBuilderList() {
         return this.colStats_;
      }

      public int getColStatsCount() {
         return this.colStats_.size();
      }

      public ColumnStats getColStats(int index) {
         return (ColumnStats)this.colStats_.get(index);
      }

      public ColumnStatsOrBuilder getColStatsOrBuilder(int index) {
         return (ColumnStatsOrBuilder)this.colStats_.get(index);
      }

      private void initFields() {
         this.partsFound_ = 0L;
         this.colStats_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasPartsFound()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            for(int i = 0; i < this.getColStatsCount(); ++i) {
               if (!this.getColStats(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeInt64(1, this.partsFound_);
         }

         for(int i = 0; i < this.colStats_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.colStats_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeInt64Size(1, this.partsFound_);
            }

            for(int i = 0; i < this.colStats_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.colStats_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static AggrStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (AggrStats)PARSER.parseFrom(data);
      }

      public static AggrStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStats)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (AggrStats)PARSER.parseFrom(data);
      }

      public static AggrStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStats)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStats parseFrom(InputStream input) throws IOException {
         return (AggrStats)PARSER.parseFrom(input);
      }

      public static AggrStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStats)PARSER.parseFrom(input, extensionRegistry);
      }

      public static AggrStats parseDelimitedFrom(InputStream input) throws IOException {
         return (AggrStats)PARSER.parseDelimitedFrom(input);
      }

      public static AggrStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static AggrStats parseFrom(CodedInputStream input) throws IOException {
         return (AggrStats)PARSER.parseFrom(input);
      }

      public static AggrStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStats)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.AggrStats.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(AggrStats prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements AggrStatsOrBuilder {
         private int bitField0_;
         private long partsFound_;
         private List colStats_;
         private RepeatedFieldBuilder colStatsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStats.class, Builder.class);
         }

         private Builder() {
            this.colStats_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.colStats_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.AggrStats.alwaysUseFieldBuilders) {
               this.getColStatsFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.partsFound_ = 0L;
            this.bitField0_ &= -2;
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor;
         }

         public AggrStats getDefaultInstanceForType() {
            return HbaseMetastoreProto.AggrStats.getDefaultInstance();
         }

         public AggrStats build() {
            AggrStats result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public AggrStats buildPartial() {
            AggrStats result = new AggrStats(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.partsFound_ = this.partsFound_;
            if (this.colStatsBuilder_ == null) {
               if ((this.bitField0_ & 2) == 2) {
                  this.colStats_ = Collections.unmodifiableList(this.colStats_);
                  this.bitField0_ &= -3;
               }

               result.colStats_ = this.colStats_;
            } else {
               result.colStats_ = this.colStatsBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof AggrStats) {
               return this.mergeFrom((AggrStats)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(AggrStats other) {
            if (other == HbaseMetastoreProto.AggrStats.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPartsFound()) {
                  this.setPartsFound(other.getPartsFound());
               }

               if (this.colStatsBuilder_ == null) {
                  if (!other.colStats_.isEmpty()) {
                     if (this.colStats_.isEmpty()) {
                        this.colStats_ = other.colStats_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureColStatsIsMutable();
                        this.colStats_.addAll(other.colStats_);
                     }

                     this.onChanged();
                  }
               } else if (!other.colStats_.isEmpty()) {
                  if (this.colStatsBuilder_.isEmpty()) {
                     this.colStatsBuilder_.dispose();
                     this.colStatsBuilder_ = null;
                     this.colStats_ = other.colStats_;
                     this.bitField0_ &= -3;
                     this.colStatsBuilder_ = HbaseMetastoreProto.AggrStats.alwaysUseFieldBuilders ? this.getColStatsFieldBuilder() : null;
                  } else {
                     this.colStatsBuilder_.addAllMessages(other.colStats_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasPartsFound()) {
               return false;
            } else {
               for(int i = 0; i < this.getColStatsCount(); ++i) {
                  if (!this.getColStats(i).isInitialized()) {
                     return false;
                  }
               }

               return true;
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            AggrStats parsedMessage = null;

            try {
               parsedMessage = (AggrStats)HbaseMetastoreProto.AggrStats.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (AggrStats)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPartsFound() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getPartsFound() {
            return this.partsFound_;
         }

         public Builder setPartsFound(long value) {
            this.bitField0_ |= 1;
            this.partsFound_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearPartsFound() {
            this.bitField0_ &= -2;
            this.partsFound_ = 0L;
            this.onChanged();
            return this;
         }

         private void ensureColStatsIsMutable() {
            if ((this.bitField0_ & 2) != 2) {
               this.colStats_ = new ArrayList(this.colStats_);
               this.bitField0_ |= 2;
            }

         }

         public List getColStatsList() {
            return this.colStatsBuilder_ == null ? Collections.unmodifiableList(this.colStats_) : this.colStatsBuilder_.getMessageList();
         }

         public int getColStatsCount() {
            return this.colStatsBuilder_ == null ? this.colStats_.size() : this.colStatsBuilder_.getCount();
         }

         public ColumnStats getColStats(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStats)this.colStats_.get(index) : (ColumnStats)this.colStatsBuilder_.getMessage(index);
         }

         public Builder setColStats(int index, ColumnStats value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.set(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setColStats(int index, ColumnStats.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(ColumnStats value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStats value) {
            if (this.colStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColStatsIsMutable();
               this.colStats_.add(index, value);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addColStats(ColumnStats.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addColStats(int index, ColumnStats.Builder builderForValue) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colStatsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllColStats(Iterable values) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.colStats_);
               this.onChanged();
            } else {
               this.colStatsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearColStats() {
            if (this.colStatsBuilder_ == null) {
               this.colStats_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.colStatsBuilder_.clear();
            }

            return this;
         }

         public Builder removeColStats(int index) {
            if (this.colStatsBuilder_ == null) {
               this.ensureColStatsIsMutable();
               this.colStats_.remove(index);
               this.onChanged();
            } else {
               this.colStatsBuilder_.remove(index);
            }

            return this;
         }

         public ColumnStats.Builder getColStatsBuilder(int index) {
            return (ColumnStats.Builder)this.getColStatsFieldBuilder().getBuilder(index);
         }

         public ColumnStatsOrBuilder getColStatsOrBuilder(int index) {
            return this.colStatsBuilder_ == null ? (ColumnStatsOrBuilder)this.colStats_.get(index) : (ColumnStatsOrBuilder)this.colStatsBuilder_.getMessageOrBuilder(index);
         }

         public List getColStatsOrBuilderList() {
            return this.colStatsBuilder_ != null ? this.colStatsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.colStats_);
         }

         public ColumnStats.Builder addColStatsBuilder() {
            return (ColumnStats.Builder)this.getColStatsFieldBuilder().addBuilder(HbaseMetastoreProto.ColumnStats.getDefaultInstance());
         }

         public ColumnStats.Builder addColStatsBuilder(int index) {
            return (ColumnStats.Builder)this.getColStatsFieldBuilder().addBuilder(index, HbaseMetastoreProto.ColumnStats.getDefaultInstance());
         }

         public List getColStatsBuilderList() {
            return this.getColStatsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getColStatsFieldBuilder() {
            if (this.colStatsBuilder_ == null) {
               this.colStatsBuilder_ = new RepeatedFieldBuilder(this.colStats_, (this.bitField0_ & 2) == 2, this.getParentForChildren(), this.isClean());
               this.colStats_ = null;
            }

            return this.colStatsBuilder_;
         }
      }
   }

   public static final class AggrStatsBloomFilter extends GeneratedMessage implements AggrStatsBloomFilterOrBuilder {
      private static final AggrStatsBloomFilter defaultInstance = new AggrStatsBloomFilter(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public AggrStatsBloomFilter parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new AggrStatsBloomFilter(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int DB_NAME_FIELD_NUMBER = 1;
      private ByteString dbName_;
      public static final int TABLE_NAME_FIELD_NUMBER = 2;
      private ByteString tableName_;
      public static final int BLOOM_FILTER_FIELD_NUMBER = 3;
      private BloomFilter bloomFilter_;
      public static final int AGGREGATED_AT_FIELD_NUMBER = 4;
      private long aggregatedAt_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private AggrStatsBloomFilter(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private AggrStatsBloomFilter(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static AggrStatsBloomFilter getDefaultInstance() {
         return defaultInstance;
      }

      public AggrStatsBloomFilter getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private AggrStatsBloomFilter(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.dbName_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.tableName_ = input.readBytes();
                     break;
                  case 26:
                     BloomFilter.Builder subBuilder = null;
                     if ((this.bitField0_ & 4) == 4) {
                        subBuilder = this.bloomFilter_.toBuilder();
                     }

                     this.bloomFilter_ = (BloomFilter)input.readMessage(HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.bloomFilter_);
                        this.bloomFilter_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 4;
                     break;
                  case 32:
                     this.bitField0_ |= 8;
                     this.aggregatedAt_ = input.readInt64();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStatsBloomFilter.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasDbName() {
         return (this.bitField0_ & 1) == 1;
      }

      public ByteString getDbName() {
         return this.dbName_;
      }

      public boolean hasTableName() {
         return (this.bitField0_ & 2) == 2;
      }

      public ByteString getTableName() {
         return this.tableName_;
      }

      public boolean hasBloomFilter() {
         return (this.bitField0_ & 4) == 4;
      }

      public BloomFilter getBloomFilter() {
         return this.bloomFilter_;
      }

      public BloomFilterOrBuilder getBloomFilterOrBuilder() {
         return this.bloomFilter_;
      }

      public boolean hasAggregatedAt() {
         return (this.bitField0_ & 8) == 8;
      }

      public long getAggregatedAt() {
         return this.aggregatedAt_;
      }

      private void initFields() {
         this.dbName_ = ByteString.EMPTY;
         this.tableName_ = ByteString.EMPTY;
         this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
         this.aggregatedAt_ = 0L;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasDbName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasTableName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasBloomFilter()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasAggregatedAt()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.getBloomFilter().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.dbName_);
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.tableName_);
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeMessage(3, this.bloomFilter_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeInt64(4, this.aggregatedAt_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.dbName_);
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.tableName_);
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeMessageSize(3, this.bloomFilter_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeInt64Size(4, this.aggregatedAt_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static AggrStatsBloomFilter parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(data);
      }

      public static AggrStatsBloomFilter parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStatsBloomFilter parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(data);
      }

      public static AggrStatsBloomFilter parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStatsBloomFilter parseFrom(InputStream input) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(input);
      }

      public static AggrStatsBloomFilter parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(input, extensionRegistry);
      }

      public static AggrStatsBloomFilter parseDelimitedFrom(InputStream input) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseDelimitedFrom(input);
      }

      public static AggrStatsBloomFilter parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static AggrStatsBloomFilter parseFrom(CodedInputStream input) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(input);
      }

      public static AggrStatsBloomFilter parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsBloomFilter)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.AggrStatsBloomFilter.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(AggrStatsBloomFilter prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class BloomFilter extends GeneratedMessage implements BloomFilterOrBuilder {
         private static final BloomFilter defaultInstance = new BloomFilter(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public BloomFilter parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new BloomFilter(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int NUM_BITS_FIELD_NUMBER = 1;
         private int numBits_;
         public static final int NUM_FUNCS_FIELD_NUMBER = 2;
         private int numFuncs_;
         public static final int BITS_FIELD_NUMBER = 3;
         private List bits_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private BloomFilter(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private BloomFilter(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static BloomFilter getDefaultInstance() {
            return defaultInstance;
         }

         public BloomFilter getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private BloomFilter(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.numBits_ = input.readInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.numFuncs_ = input.readInt32();
                        break;
                     case 24:
                        if ((mutable_bitField0_ & 4) != 4) {
                           this.bits_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.bits_.add(input.readInt64());
                        break;
                     case 26:
                        int length = input.readRawVarint32();
                        int limit = input.pushLimit(length);
                        if ((mutable_bitField0_ & 4) != 4 && input.getBytesUntilLimit() > 0) {
                           this.bits_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        while(input.getBytesUntilLimit() > 0) {
                           this.bits_.add(input.readInt64());
                        }

                        input.popLimit(limit);
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 4) == 4) {
                  this.bits_ = Collections.unmodifiableList(this.bits_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilter.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasNumBits() {
            return (this.bitField0_ & 1) == 1;
         }

         public int getNumBits() {
            return this.numBits_;
         }

         public boolean hasNumFuncs() {
            return (this.bitField0_ & 2) == 2;
         }

         public int getNumFuncs() {
            return this.numFuncs_;
         }

         public List getBitsList() {
            return this.bits_;
         }

         public int getBitsCount() {
            return this.bits_.size();
         }

         public long getBits(int index) {
            return (Long)this.bits_.get(index);
         }

         private void initFields() {
            this.numBits_ = 0;
            this.numFuncs_ = 0;
            this.bits_ = Collections.emptyList();
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasNumBits()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasNumFuncs()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeInt32(1, this.numBits_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeInt32(2, this.numFuncs_);
            }

            for(int i = 0; i < this.bits_.size(); ++i) {
               output.writeInt64(3, (Long)this.bits_.get(i));
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeInt32Size(1, this.numBits_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeInt32Size(2, this.numFuncs_);
               }

               int dataSize = 0;

               for(int i = 0; i < this.bits_.size(); ++i) {
                  dataSize += CodedOutputStream.computeInt64SizeNoTag((Long)this.bits_.get(i));
               }

               size += dataSize;
               size += 1 * this.getBitsList().size();
               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static BloomFilter parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (BloomFilter)PARSER.parseFrom(data);
         }

         public static BloomFilter parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (BloomFilter)PARSER.parseFrom(data, extensionRegistry);
         }

         public static BloomFilter parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (BloomFilter)PARSER.parseFrom(data);
         }

         public static BloomFilter parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (BloomFilter)PARSER.parseFrom(data, extensionRegistry);
         }

         public static BloomFilter parseFrom(InputStream input) throws IOException {
            return (BloomFilter)PARSER.parseFrom(input);
         }

         public static BloomFilter parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BloomFilter)PARSER.parseFrom(input, extensionRegistry);
         }

         public static BloomFilter parseDelimitedFrom(InputStream input) throws IOException {
            return (BloomFilter)PARSER.parseDelimitedFrom(input);
         }

         public static BloomFilter parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BloomFilter)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static BloomFilter parseFrom(CodedInputStream input) throws IOException {
            return (BloomFilter)PARSER.parseFrom(input);
         }

         public static BloomFilter parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BloomFilter)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(BloomFilter prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements BloomFilterOrBuilder {
            private int bitField0_;
            private int numBits_;
            private int numFuncs_;
            private List bits_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(BloomFilter.class, Builder.class);
            }

            private Builder() {
               this.bits_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.bits_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.numBits_ = 0;
               this.bitField0_ &= -2;
               this.numFuncs_ = 0;
               this.bitField0_ &= -3;
               this.bits_ = Collections.emptyList();
               this.bitField0_ &= -5;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor;
            }

            public BloomFilter getDefaultInstanceForType() {
               return HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
            }

            public BloomFilter build() {
               BloomFilter result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public BloomFilter buildPartial() {
               BloomFilter result = new BloomFilter(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.numBits_ = this.numBits_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.numFuncs_ = this.numFuncs_;
               if ((this.bitField0_ & 4) == 4) {
                  this.bits_ = Collections.unmodifiableList(this.bits_);
                  this.bitField0_ &= -5;
               }

               result.bits_ = this.bits_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof BloomFilter) {
                  return this.mergeFrom((BloomFilter)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(BloomFilter other) {
               if (other == HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasNumBits()) {
                     this.setNumBits(other.getNumBits());
                  }

                  if (other.hasNumFuncs()) {
                     this.setNumFuncs(other.getNumFuncs());
                  }

                  if (!other.bits_.isEmpty()) {
                     if (this.bits_.isEmpty()) {
                        this.bits_ = other.bits_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureBitsIsMutable();
                        this.bits_.addAll(other.bits_);
                     }

                     this.onChanged();
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasNumBits()) {
                  return false;
               } else {
                  return this.hasNumFuncs();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               BloomFilter parsedMessage = null;

               try {
                  parsedMessage = (BloomFilter)HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (BloomFilter)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasNumBits() {
               return (this.bitField0_ & 1) == 1;
            }

            public int getNumBits() {
               return this.numBits_;
            }

            public Builder setNumBits(int value) {
               this.bitField0_ |= 1;
               this.numBits_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearNumBits() {
               this.bitField0_ &= -2;
               this.numBits_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasNumFuncs() {
               return (this.bitField0_ & 2) == 2;
            }

            public int getNumFuncs() {
               return this.numFuncs_;
            }

            public Builder setNumFuncs(int value) {
               this.bitField0_ |= 2;
               this.numFuncs_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearNumFuncs() {
               this.bitField0_ &= -3;
               this.numFuncs_ = 0;
               this.onChanged();
               return this;
            }

            private void ensureBitsIsMutable() {
               if ((this.bitField0_ & 4) != 4) {
                  this.bits_ = new ArrayList(this.bits_);
                  this.bitField0_ |= 4;
               }

            }

            public List getBitsList() {
               return Collections.unmodifiableList(this.bits_);
            }

            public int getBitsCount() {
               return this.bits_.size();
            }

            public long getBits(int index) {
               return (Long)this.bits_.get(index);
            }

            public Builder setBits(int index, long value) {
               this.ensureBitsIsMutable();
               this.bits_.set(index, value);
               this.onChanged();
               return this;
            }

            public Builder addBits(long value) {
               this.ensureBitsIsMutable();
               this.bits_.add(value);
               this.onChanged();
               return this;
            }

            public Builder addAllBits(Iterable values) {
               this.ensureBitsIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.bits_);
               this.onChanged();
               return this;
            }

            public Builder clearBits() {
               this.bits_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements AggrStatsBloomFilterOrBuilder {
         private int bitField0_;
         private ByteString dbName_;
         private ByteString tableName_;
         private BloomFilter bloomFilter_;
         private SingleFieldBuilder bloomFilterBuilder_;
         private long aggregatedAt_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStatsBloomFilter.class, Builder.class);
         }

         private Builder() {
            this.dbName_ = ByteString.EMPTY;
            this.tableName_ = ByteString.EMPTY;
            this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.dbName_ = ByteString.EMPTY;
            this.tableName_ = ByteString.EMPTY;
            this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.AggrStatsBloomFilter.alwaysUseFieldBuilders) {
               this.getBloomFilterFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.dbName_ = ByteString.EMPTY;
            this.bitField0_ &= -2;
            this.tableName_ = ByteString.EMPTY;
            this.bitField0_ &= -3;
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
            } else {
               this.bloomFilterBuilder_.clear();
            }

            this.bitField0_ &= -5;
            this.aggregatedAt_ = 0L;
            this.bitField0_ &= -9;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor;
         }

         public AggrStatsBloomFilter getDefaultInstanceForType() {
            return HbaseMetastoreProto.AggrStatsBloomFilter.getDefaultInstance();
         }

         public AggrStatsBloomFilter build() {
            AggrStatsBloomFilter result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public AggrStatsBloomFilter buildPartial() {
            AggrStatsBloomFilter result = new AggrStatsBloomFilter(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.dbName_ = this.dbName_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.tableName_ = this.tableName_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            if (this.bloomFilterBuilder_ == null) {
               result.bloomFilter_ = this.bloomFilter_;
            } else {
               result.bloomFilter_ = (BloomFilter)this.bloomFilterBuilder_.build();
            }

            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.aggregatedAt_ = this.aggregatedAt_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof AggrStatsBloomFilter) {
               return this.mergeFrom((AggrStatsBloomFilter)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(AggrStatsBloomFilter other) {
            if (other == HbaseMetastoreProto.AggrStatsBloomFilter.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasDbName()) {
                  this.setDbName(other.getDbName());
               }

               if (other.hasTableName()) {
                  this.setTableName(other.getTableName());
               }

               if (other.hasBloomFilter()) {
                  this.mergeBloomFilter(other.getBloomFilter());
               }

               if (other.hasAggregatedAt()) {
                  this.setAggregatedAt(other.getAggregatedAt());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasDbName()) {
               return false;
            } else if (!this.hasTableName()) {
               return false;
            } else if (!this.hasBloomFilter()) {
               return false;
            } else if (!this.hasAggregatedAt()) {
               return false;
            } else {
               return this.getBloomFilter().isInitialized();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            AggrStatsBloomFilter parsedMessage = null;

            try {
               parsedMessage = (AggrStatsBloomFilter)HbaseMetastoreProto.AggrStatsBloomFilter.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (AggrStatsBloomFilter)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasDbName() {
            return (this.bitField0_ & 1) == 1;
         }

         public ByteString getDbName() {
            return this.dbName_;
         }

         public Builder setDbName(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.dbName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearDbName() {
            this.bitField0_ &= -2;
            this.dbName_ = HbaseMetastoreProto.AggrStatsBloomFilter.getDefaultInstance().getDbName();
            this.onChanged();
            return this;
         }

         public boolean hasTableName() {
            return (this.bitField0_ & 2) == 2;
         }

         public ByteString getTableName() {
            return this.tableName_;
         }

         public Builder setTableName(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.tableName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearTableName() {
            this.bitField0_ &= -3;
            this.tableName_ = HbaseMetastoreProto.AggrStatsBloomFilter.getDefaultInstance().getTableName();
            this.onChanged();
            return this;
         }

         public boolean hasBloomFilter() {
            return (this.bitField0_ & 4) == 4;
         }

         public BloomFilter getBloomFilter() {
            return this.bloomFilterBuilder_ == null ? this.bloomFilter_ : (BloomFilter)this.bloomFilterBuilder_.getMessage();
         }

         public Builder setBloomFilter(BloomFilter value) {
            if (this.bloomFilterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.bloomFilter_ = value;
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder setBloomFilter(BloomFilter.Builder builderForValue) {
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilter_ = builderForValue.build();
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder mergeBloomFilter(BloomFilter value) {
            if (this.bloomFilterBuilder_ == null) {
               if ((this.bitField0_ & 4) == 4 && this.bloomFilter_ != HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance()) {
                  this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.newBuilder(this.bloomFilter_).mergeFrom(value).buildPartial();
               } else {
                  this.bloomFilter_ = value;
               }

               this.onChanged();
            } else {
               this.bloomFilterBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder clearBloomFilter() {
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilter_ = HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.getDefaultInstance();
               this.onChanged();
            } else {
               this.bloomFilterBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public BloomFilter.Builder getBloomFilterBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (BloomFilter.Builder)this.getBloomFilterFieldBuilder().getBuilder();
         }

         public BloomFilterOrBuilder getBloomFilterOrBuilder() {
            return (BloomFilterOrBuilder)(this.bloomFilterBuilder_ != null ? (BloomFilterOrBuilder)this.bloomFilterBuilder_.getMessageOrBuilder() : this.bloomFilter_);
         }

         private SingleFieldBuilder getBloomFilterFieldBuilder() {
            if (this.bloomFilterBuilder_ == null) {
               this.bloomFilterBuilder_ = new SingleFieldBuilder(this.bloomFilter_, this.getParentForChildren(), this.isClean());
               this.bloomFilter_ = null;
            }

            return this.bloomFilterBuilder_;
         }

         public boolean hasAggregatedAt() {
            return (this.bitField0_ & 8) == 8;
         }

         public long getAggregatedAt() {
            return this.aggregatedAt_;
         }

         public Builder setAggregatedAt(long value) {
            this.bitField0_ |= 8;
            this.aggregatedAt_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearAggregatedAt() {
            this.bitField0_ &= -9;
            this.aggregatedAt_ = 0L;
            this.onChanged();
            return this;
         }
      }

      public interface BloomFilterOrBuilder extends MessageOrBuilder {
         boolean hasNumBits();

         int getNumBits();

         boolean hasNumFuncs();

         int getNumFuncs();

         List getBitsList();

         int getBitsCount();

         long getBits(int var1);
      }
   }

   public static final class AggrStatsInvalidatorFilter extends GeneratedMessage implements AggrStatsInvalidatorFilterOrBuilder {
      private static final AggrStatsInvalidatorFilter defaultInstance = new AggrStatsInvalidatorFilter(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public AggrStatsInvalidatorFilter parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new AggrStatsInvalidatorFilter(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int TO_INVALIDATE_FIELD_NUMBER = 1;
      private List toInvalidate_;
      public static final int RUN_EVERY_FIELD_NUMBER = 2;
      private long runEvery_;
      public static final int MAX_CACHE_ENTRY_LIFE_FIELD_NUMBER = 3;
      private long maxCacheEntryLife_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private AggrStatsInvalidatorFilter(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private AggrStatsInvalidatorFilter(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static AggrStatsInvalidatorFilter getDefaultInstance() {
         return defaultInstance;
      }

      public AggrStatsInvalidatorFilter getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private AggrStatsInvalidatorFilter(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.toInvalidate_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.toInvalidate_.add(input.readMessage(HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.PARSER, extensionRegistry));
                     break;
                  case 16:
                     this.bitField0_ |= 1;
                     this.runEvery_ = input.readInt64();
                     break;
                  case 24:
                     this.bitField0_ |= 2;
                     this.maxCacheEntryLife_ = input.readInt64();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.toInvalidate_ = Collections.unmodifiableList(this.toInvalidate_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStatsInvalidatorFilter.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getToInvalidateList() {
         return this.toInvalidate_;
      }

      public List getToInvalidateOrBuilderList() {
         return this.toInvalidate_;
      }

      public int getToInvalidateCount() {
         return this.toInvalidate_.size();
      }

      public Entry getToInvalidate(int index) {
         return (Entry)this.toInvalidate_.get(index);
      }

      public EntryOrBuilder getToInvalidateOrBuilder(int index) {
         return (EntryOrBuilder)this.toInvalidate_.get(index);
      }

      public boolean hasRunEvery() {
         return (this.bitField0_ & 1) == 1;
      }

      public long getRunEvery() {
         return this.runEvery_;
      }

      public boolean hasMaxCacheEntryLife() {
         return (this.bitField0_ & 2) == 2;
      }

      public long getMaxCacheEntryLife() {
         return this.maxCacheEntryLife_;
      }

      private void initFields() {
         this.toInvalidate_ = Collections.emptyList();
         this.runEvery_ = 0L;
         this.maxCacheEntryLife_ = 0L;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasRunEvery()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasMaxCacheEntryLife()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            for(int i = 0; i < this.getToInvalidateCount(); ++i) {
               if (!this.getToInvalidate(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.toInvalidate_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.toInvalidate_.get(i));
         }

         if ((this.bitField0_ & 1) == 1) {
            output.writeInt64(2, this.runEvery_);
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeInt64(3, this.maxCacheEntryLife_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.toInvalidate_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.toInvalidate_.get(i));
            }

            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeInt64Size(2, this.runEvery_);
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeInt64Size(3, this.maxCacheEntryLife_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static AggrStatsInvalidatorFilter parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(data);
      }

      public static AggrStatsInvalidatorFilter parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStatsInvalidatorFilter parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(data);
      }

      public static AggrStatsInvalidatorFilter parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(data, extensionRegistry);
      }

      public static AggrStatsInvalidatorFilter parseFrom(InputStream input) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(input);
      }

      public static AggrStatsInvalidatorFilter parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(input, extensionRegistry);
      }

      public static AggrStatsInvalidatorFilter parseDelimitedFrom(InputStream input) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseDelimitedFrom(input);
      }

      public static AggrStatsInvalidatorFilter parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static AggrStatsInvalidatorFilter parseFrom(CodedInputStream input) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(input);
      }

      public static AggrStatsInvalidatorFilter parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (AggrStatsInvalidatorFilter)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.AggrStatsInvalidatorFilter.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(AggrStatsInvalidatorFilter prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Entry extends GeneratedMessage implements EntryOrBuilder {
         private static final Entry defaultInstance = new Entry(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public Entry parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new Entry(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int DB_NAME_FIELD_NUMBER = 1;
         private ByteString dbName_;
         public static final int TABLE_NAME_FIELD_NUMBER = 2;
         private ByteString tableName_;
         public static final int PART_NAME_FIELD_NUMBER = 3;
         private ByteString partName_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private Entry(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private Entry(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static Entry getDefaultInstance() {
            return defaultInstance;
         }

         public Entry getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Entry(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.dbName_ = input.readBytes();
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.tableName_ = input.readBytes();
                        break;
                     case 26:
                        this.bitField0_ |= 4;
                        this.partName_ = input.readBytes();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable.ensureFieldAccessorsInitialized(Entry.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasDbName() {
            return (this.bitField0_ & 1) == 1;
         }

         public ByteString getDbName() {
            return this.dbName_;
         }

         public boolean hasTableName() {
            return (this.bitField0_ & 2) == 2;
         }

         public ByteString getTableName() {
            return this.tableName_;
         }

         public boolean hasPartName() {
            return (this.bitField0_ & 4) == 4;
         }

         public ByteString getPartName() {
            return this.partName_;
         }

         private void initFields() {
            this.dbName_ = ByteString.EMPTY;
            this.tableName_ = ByteString.EMPTY;
            this.partName_ = ByteString.EMPTY;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasDbName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasTableName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasPartName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.dbName_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBytes(2, this.tableName_);
            }

            if ((this.bitField0_ & 4) == 4) {
               output.writeBytes(3, this.partName_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.dbName_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBytesSize(2, this.tableName_);
               }

               if ((this.bitField0_ & 4) == 4) {
                  size += CodedOutputStream.computeBytesSize(3, this.partName_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static Entry parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (Entry)PARSER.parseFrom(data);
         }

         public static Entry parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Entry)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Entry parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (Entry)PARSER.parseFrom(data);
         }

         public static Entry parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Entry)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Entry parseFrom(InputStream input) throws IOException {
            return (Entry)PARSER.parseFrom(input);
         }

         public static Entry parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Entry)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Entry parseDelimitedFrom(InputStream input) throws IOException {
            return (Entry)PARSER.parseDelimitedFrom(input);
         }

         public static Entry parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Entry)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static Entry parseFrom(CodedInputStream input) throws IOException {
            return (Entry)PARSER.parseFrom(input);
         }

         public static Entry parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Entry)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(Entry prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements EntryOrBuilder {
            private int bitField0_;
            private ByteString dbName_;
            private ByteString tableName_;
            private ByteString partName_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable.ensureFieldAccessorsInitialized(Entry.class, Builder.class);
            }

            private Builder() {
               this.dbName_ = ByteString.EMPTY;
               this.tableName_ = ByteString.EMPTY;
               this.partName_ = ByteString.EMPTY;
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.dbName_ = ByteString.EMPTY;
               this.tableName_ = ByteString.EMPTY;
               this.partName_ = ByteString.EMPTY;
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.dbName_ = ByteString.EMPTY;
               this.bitField0_ &= -2;
               this.tableName_ = ByteString.EMPTY;
               this.bitField0_ &= -3;
               this.partName_ = ByteString.EMPTY;
               this.bitField0_ &= -5;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor;
            }

            public Entry getDefaultInstanceForType() {
               return HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance();
            }

            public Entry build() {
               Entry result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public Entry buildPartial() {
               Entry result = new Entry(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.dbName_ = this.dbName_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.tableName_ = this.tableName_;
               if ((from_bitField0_ & 4) == 4) {
                  to_bitField0_ |= 4;
               }

               result.partName_ = this.partName_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof Entry) {
                  return this.mergeFrom((Entry)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(Entry other) {
               if (other == HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasDbName()) {
                     this.setDbName(other.getDbName());
                  }

                  if (other.hasTableName()) {
                     this.setTableName(other.getTableName());
                  }

                  if (other.hasPartName()) {
                     this.setPartName(other.getPartName());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasDbName()) {
                  return false;
               } else if (!this.hasTableName()) {
                  return false;
               } else {
                  return this.hasPartName();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               Entry parsedMessage = null;

               try {
                  parsedMessage = (Entry)HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (Entry)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasDbName() {
               return (this.bitField0_ & 1) == 1;
            }

            public ByteString getDbName() {
               return this.dbName_;
            }

            public Builder setDbName(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.dbName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearDbName() {
               this.bitField0_ &= -2;
               this.dbName_ = HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance().getDbName();
               this.onChanged();
               return this;
            }

            public boolean hasTableName() {
               return (this.bitField0_ & 2) == 2;
            }

            public ByteString getTableName() {
               return this.tableName_;
            }

            public Builder setTableName(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.tableName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearTableName() {
               this.bitField0_ &= -3;
               this.tableName_ = HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance().getTableName();
               this.onChanged();
               return this;
            }

            public boolean hasPartName() {
               return (this.bitField0_ & 4) == 4;
            }

            public ByteString getPartName() {
               return this.partName_;
            }

            public Builder setPartName(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.partName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearPartName() {
               this.bitField0_ &= -5;
               this.partName_ = HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance().getPartName();
               this.onChanged();
               return this;
            }
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements AggrStatsInvalidatorFilterOrBuilder {
         private int bitField0_;
         private List toInvalidate_;
         private RepeatedFieldBuilder toInvalidateBuilder_;
         private long runEvery_;
         private long maxCacheEntryLife_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable.ensureFieldAccessorsInitialized(AggrStatsInvalidatorFilter.class, Builder.class);
         }

         private Builder() {
            this.toInvalidate_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.toInvalidate_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.AggrStatsInvalidatorFilter.alwaysUseFieldBuilders) {
               this.getToInvalidateFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.toInvalidateBuilder_ == null) {
               this.toInvalidate_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.toInvalidateBuilder_.clear();
            }

            this.runEvery_ = 0L;
            this.bitField0_ &= -3;
            this.maxCacheEntryLife_ = 0L;
            this.bitField0_ &= -5;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor;
         }

         public AggrStatsInvalidatorFilter getDefaultInstanceForType() {
            return HbaseMetastoreProto.AggrStatsInvalidatorFilter.getDefaultInstance();
         }

         public AggrStatsInvalidatorFilter build() {
            AggrStatsInvalidatorFilter result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public AggrStatsInvalidatorFilter buildPartial() {
            AggrStatsInvalidatorFilter result = new AggrStatsInvalidatorFilter(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if (this.toInvalidateBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.toInvalidate_ = Collections.unmodifiableList(this.toInvalidate_);
                  this.bitField0_ &= -2;
               }

               result.toInvalidate_ = this.toInvalidate_;
            } else {
               result.toInvalidate_ = this.toInvalidateBuilder_.build();
            }

            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 1;
            }

            result.runEvery_ = this.runEvery_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 2;
            }

            result.maxCacheEntryLife_ = this.maxCacheEntryLife_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof AggrStatsInvalidatorFilter) {
               return this.mergeFrom((AggrStatsInvalidatorFilter)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(AggrStatsInvalidatorFilter other) {
            if (other == HbaseMetastoreProto.AggrStatsInvalidatorFilter.getDefaultInstance()) {
               return this;
            } else {
               if (this.toInvalidateBuilder_ == null) {
                  if (!other.toInvalidate_.isEmpty()) {
                     if (this.toInvalidate_.isEmpty()) {
                        this.toInvalidate_ = other.toInvalidate_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureToInvalidateIsMutable();
                        this.toInvalidate_.addAll(other.toInvalidate_);
                     }

                     this.onChanged();
                  }
               } else if (!other.toInvalidate_.isEmpty()) {
                  if (this.toInvalidateBuilder_.isEmpty()) {
                     this.toInvalidateBuilder_.dispose();
                     this.toInvalidateBuilder_ = null;
                     this.toInvalidate_ = other.toInvalidate_;
                     this.bitField0_ &= -2;
                     this.toInvalidateBuilder_ = HbaseMetastoreProto.AggrStatsInvalidatorFilter.alwaysUseFieldBuilders ? this.getToInvalidateFieldBuilder() : null;
                  } else {
                     this.toInvalidateBuilder_.addAllMessages(other.toInvalidate_);
                  }
               }

               if (other.hasRunEvery()) {
                  this.setRunEvery(other.getRunEvery());
               }

               if (other.hasMaxCacheEntryLife()) {
                  this.setMaxCacheEntryLife(other.getMaxCacheEntryLife());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasRunEvery()) {
               return false;
            } else if (!this.hasMaxCacheEntryLife()) {
               return false;
            } else {
               for(int i = 0; i < this.getToInvalidateCount(); ++i) {
                  if (!this.getToInvalidate(i).isInitialized()) {
                     return false;
                  }
               }

               return true;
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            AggrStatsInvalidatorFilter parsedMessage = null;

            try {
               parsedMessage = (AggrStatsInvalidatorFilter)HbaseMetastoreProto.AggrStatsInvalidatorFilter.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (AggrStatsInvalidatorFilter)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureToInvalidateIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.toInvalidate_ = new ArrayList(this.toInvalidate_);
               this.bitField0_ |= 1;
            }

         }

         public List getToInvalidateList() {
            return this.toInvalidateBuilder_ == null ? Collections.unmodifiableList(this.toInvalidate_) : this.toInvalidateBuilder_.getMessageList();
         }

         public int getToInvalidateCount() {
            return this.toInvalidateBuilder_ == null ? this.toInvalidate_.size() : this.toInvalidateBuilder_.getCount();
         }

         public Entry getToInvalidate(int index) {
            return this.toInvalidateBuilder_ == null ? (Entry)this.toInvalidate_.get(index) : (Entry)this.toInvalidateBuilder_.getMessage(index);
         }

         public Builder setToInvalidate(int index, Entry value) {
            if (this.toInvalidateBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.set(index, value);
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setToInvalidate(int index, Entry.Builder builderForValue) {
            if (this.toInvalidateBuilder_ == null) {
               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addToInvalidate(Entry value) {
            if (this.toInvalidateBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.add(value);
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addToInvalidate(int index, Entry value) {
            if (this.toInvalidateBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.add(index, value);
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addToInvalidate(Entry.Builder builderForValue) {
            if (this.toInvalidateBuilder_ == null) {
               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addToInvalidate(int index, Entry.Builder builderForValue) {
            if (this.toInvalidateBuilder_ == null) {
               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllToInvalidate(Iterable values) {
            if (this.toInvalidateBuilder_ == null) {
               this.ensureToInvalidateIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.toInvalidate_);
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearToInvalidate() {
            if (this.toInvalidateBuilder_ == null) {
               this.toInvalidate_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.clear();
            }

            return this;
         }

         public Builder removeToInvalidate(int index) {
            if (this.toInvalidateBuilder_ == null) {
               this.ensureToInvalidateIsMutable();
               this.toInvalidate_.remove(index);
               this.onChanged();
            } else {
               this.toInvalidateBuilder_.remove(index);
            }

            return this;
         }

         public Entry.Builder getToInvalidateBuilder(int index) {
            return (Entry.Builder)this.getToInvalidateFieldBuilder().getBuilder(index);
         }

         public EntryOrBuilder getToInvalidateOrBuilder(int index) {
            return this.toInvalidateBuilder_ == null ? (EntryOrBuilder)this.toInvalidate_.get(index) : (EntryOrBuilder)this.toInvalidateBuilder_.getMessageOrBuilder(index);
         }

         public List getToInvalidateOrBuilderList() {
            return this.toInvalidateBuilder_ != null ? this.toInvalidateBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.toInvalidate_);
         }

         public Entry.Builder addToInvalidateBuilder() {
            return (Entry.Builder)this.getToInvalidateFieldBuilder().addBuilder(HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance());
         }

         public Entry.Builder addToInvalidateBuilder(int index) {
            return (Entry.Builder)this.getToInvalidateFieldBuilder().addBuilder(index, HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.getDefaultInstance());
         }

         public List getToInvalidateBuilderList() {
            return this.getToInvalidateFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getToInvalidateFieldBuilder() {
            if (this.toInvalidateBuilder_ == null) {
               this.toInvalidateBuilder_ = new RepeatedFieldBuilder(this.toInvalidate_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.toInvalidate_ = null;
            }

            return this.toInvalidateBuilder_;
         }

         public boolean hasRunEvery() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getRunEvery() {
            return this.runEvery_;
         }

         public Builder setRunEvery(long value) {
            this.bitField0_ |= 2;
            this.runEvery_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearRunEvery() {
            this.bitField0_ &= -3;
            this.runEvery_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasMaxCacheEntryLife() {
            return (this.bitField0_ & 4) == 4;
         }

         public long getMaxCacheEntryLife() {
            return this.maxCacheEntryLife_;
         }

         public Builder setMaxCacheEntryLife(long value) {
            this.bitField0_ |= 4;
            this.maxCacheEntryLife_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearMaxCacheEntryLife() {
            this.bitField0_ &= -5;
            this.maxCacheEntryLife_ = 0L;
            this.onChanged();
            return this;
         }
      }

      public interface EntryOrBuilder extends MessageOrBuilder {
         boolean hasDbName();

         ByteString getDbName();

         boolean hasTableName();

         ByteString getTableName();

         boolean hasPartName();

         ByteString getPartName();
      }
   }

   public static final class ColumnStats extends GeneratedMessage implements ColumnStatsOrBuilder {
      private static final ColumnStats defaultInstance = new ColumnStats(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public ColumnStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ColumnStats(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int LAST_ANALYZED_FIELD_NUMBER = 1;
      private long lastAnalyzed_;
      public static final int COLUMN_TYPE_FIELD_NUMBER = 2;
      private Object columnType_;
      public static final int NUM_NULLS_FIELD_NUMBER = 3;
      private long numNulls_;
      public static final int NUM_DISTINCT_VALUES_FIELD_NUMBER = 4;
      private long numDistinctValues_;
      public static final int BOOL_STATS_FIELD_NUMBER = 5;
      private BooleanStats boolStats_;
      public static final int LONG_STATS_FIELD_NUMBER = 6;
      private LongStats longStats_;
      public static final int DOUBLE_STATS_FIELD_NUMBER = 7;
      private DoubleStats doubleStats_;
      public static final int STRING_STATS_FIELD_NUMBER = 8;
      private StringStats stringStats_;
      public static final int BINARY_STATS_FIELD_NUMBER = 9;
      private StringStats binaryStats_;
      public static final int DECIMAL_STATS_FIELD_NUMBER = 10;
      private DecimalStats decimalStats_;
      public static final int COLUMN_NAME_FIELD_NUMBER = 11;
      private Object columnName_;
      public static final int BIT_VECTORS_FIELD_NUMBER = 12;
      private Object bitVectors_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private ColumnStats(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private ColumnStats(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static ColumnStats getDefaultInstance() {
         return defaultInstance;
      }

      public ColumnStats getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ColumnStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.lastAnalyzed_ = input.readInt64();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.columnType_ = input.readBytes();
                     break;
                  case 24:
                     this.bitField0_ |= 4;
                     this.numNulls_ = input.readInt64();
                     break;
                  case 32:
                     this.bitField0_ |= 8;
                     this.numDistinctValues_ = input.readInt64();
                     break;
                  case 42:
                     BooleanStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 16) == 16) {
                        subBuilder = this.boolStats_.toBuilder();
                     }

                     this.boolStats_ = (BooleanStats)input.readMessage(HbaseMetastoreProto.ColumnStats.BooleanStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.boolStats_);
                        this.boolStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 16;
                     break;
                  case 50:
                     LongStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 32) == 32) {
                        subBuilder = this.longStats_.toBuilder();
                     }

                     this.longStats_ = (LongStats)input.readMessage(HbaseMetastoreProto.ColumnStats.LongStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.longStats_);
                        this.longStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 32;
                     break;
                  case 58:
                     DoubleStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 64) == 64) {
                        subBuilder = this.doubleStats_.toBuilder();
                     }

                     this.doubleStats_ = (DoubleStats)input.readMessage(HbaseMetastoreProto.ColumnStats.DoubleStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.doubleStats_);
                        this.doubleStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 64;
                     break;
                  case 66:
                     StringStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 128) == 128) {
                        subBuilder = this.stringStats_.toBuilder();
                     }

                     this.stringStats_ = (StringStats)input.readMessage(HbaseMetastoreProto.ColumnStats.StringStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.stringStats_);
                        this.stringStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 128;
                     break;
                  case 74:
                     StringStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 256) == 256) {
                        subBuilder = this.binaryStats_.toBuilder();
                     }

                     this.binaryStats_ = (StringStats)input.readMessage(HbaseMetastoreProto.ColumnStats.StringStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.binaryStats_);
                        this.binaryStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 256;
                     break;
                  case 82:
                     DecimalStats.Builder subBuilder = null;
                     if ((this.bitField0_ & 512) == 512) {
                        subBuilder = this.decimalStats_.toBuilder();
                     }

                     this.decimalStats_ = (DecimalStats)input.readMessage(HbaseMetastoreProto.ColumnStats.DecimalStats.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.decimalStats_);
                        this.decimalStats_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 512;
                     break;
                  case 90:
                     this.bitField0_ |= 1024;
                     this.columnName_ = input.readBytes();
                     break;
                  case 98:
                     this.bitField0_ |= 2048;
                     this.bitVectors_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnStats.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasLastAnalyzed() {
         return (this.bitField0_ & 1) == 1;
      }

      public long getLastAnalyzed() {
         return this.lastAnalyzed_;
      }

      public boolean hasColumnType() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getColumnType() {
         Object ref = this.columnType_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.columnType_ = s;
            }

            return s;
         }
      }

      public ByteString getColumnTypeBytes() {
         Object ref = this.columnType_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.columnType_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasNumNulls() {
         return (this.bitField0_ & 4) == 4;
      }

      public long getNumNulls() {
         return this.numNulls_;
      }

      public boolean hasNumDistinctValues() {
         return (this.bitField0_ & 8) == 8;
      }

      public long getNumDistinctValues() {
         return this.numDistinctValues_;
      }

      public boolean hasBoolStats() {
         return (this.bitField0_ & 16) == 16;
      }

      public BooleanStats getBoolStats() {
         return this.boolStats_;
      }

      public BooleanStatsOrBuilder getBoolStatsOrBuilder() {
         return this.boolStats_;
      }

      public boolean hasLongStats() {
         return (this.bitField0_ & 32) == 32;
      }

      public LongStats getLongStats() {
         return this.longStats_;
      }

      public LongStatsOrBuilder getLongStatsOrBuilder() {
         return this.longStats_;
      }

      public boolean hasDoubleStats() {
         return (this.bitField0_ & 64) == 64;
      }

      public DoubleStats getDoubleStats() {
         return this.doubleStats_;
      }

      public DoubleStatsOrBuilder getDoubleStatsOrBuilder() {
         return this.doubleStats_;
      }

      public boolean hasStringStats() {
         return (this.bitField0_ & 128) == 128;
      }

      public StringStats getStringStats() {
         return this.stringStats_;
      }

      public StringStatsOrBuilder getStringStatsOrBuilder() {
         return this.stringStats_;
      }

      public boolean hasBinaryStats() {
         return (this.bitField0_ & 256) == 256;
      }

      public StringStats getBinaryStats() {
         return this.binaryStats_;
      }

      public StringStatsOrBuilder getBinaryStatsOrBuilder() {
         return this.binaryStats_;
      }

      public boolean hasDecimalStats() {
         return (this.bitField0_ & 512) == 512;
      }

      public DecimalStats getDecimalStats() {
         return this.decimalStats_;
      }

      public DecimalStatsOrBuilder getDecimalStatsOrBuilder() {
         return this.decimalStats_;
      }

      public boolean hasColumnName() {
         return (this.bitField0_ & 1024) == 1024;
      }

      public String getColumnName() {
         Object ref = this.columnName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.columnName_ = s;
            }

            return s;
         }
      }

      public ByteString getColumnNameBytes() {
         Object ref = this.columnName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.columnName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasBitVectors() {
         return (this.bitField0_ & 2048) == 2048;
      }

      public String getBitVectors() {
         Object ref = this.bitVectors_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.bitVectors_ = s;
            }

            return s;
         }
      }

      public ByteString getBitVectorsBytes() {
         Object ref = this.bitVectors_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.bitVectors_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.lastAnalyzed_ = 0L;
         this.columnType_ = "";
         this.numNulls_ = 0L;
         this.numDistinctValues_ = 0L;
         this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
         this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
         this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
         this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
         this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
         this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
         this.columnName_ = "";
         this.bitVectors_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasColumnType()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasDecimalStats() && !this.getDecimalStats().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeInt64(1, this.lastAnalyzed_);
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getColumnTypeBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeInt64(3, this.numNulls_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeInt64(4, this.numDistinctValues_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeMessage(5, this.boolStats_);
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeMessage(6, this.longStats_);
         }

         if ((this.bitField0_ & 64) == 64) {
            output.writeMessage(7, this.doubleStats_);
         }

         if ((this.bitField0_ & 128) == 128) {
            output.writeMessage(8, this.stringStats_);
         }

         if ((this.bitField0_ & 256) == 256) {
            output.writeMessage(9, this.binaryStats_);
         }

         if ((this.bitField0_ & 512) == 512) {
            output.writeMessage(10, this.decimalStats_);
         }

         if ((this.bitField0_ & 1024) == 1024) {
            output.writeBytes(11, this.getColumnNameBytes());
         }

         if ((this.bitField0_ & 2048) == 2048) {
            output.writeBytes(12, this.getBitVectorsBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeInt64Size(1, this.lastAnalyzed_);
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getColumnTypeBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeInt64Size(3, this.numNulls_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeInt64Size(4, this.numDistinctValues_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeMessageSize(5, this.boolStats_);
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeMessageSize(6, this.longStats_);
            }

            if ((this.bitField0_ & 64) == 64) {
               size += CodedOutputStream.computeMessageSize(7, this.doubleStats_);
            }

            if ((this.bitField0_ & 128) == 128) {
               size += CodedOutputStream.computeMessageSize(8, this.stringStats_);
            }

            if ((this.bitField0_ & 256) == 256) {
               size += CodedOutputStream.computeMessageSize(9, this.binaryStats_);
            }

            if ((this.bitField0_ & 512) == 512) {
               size += CodedOutputStream.computeMessageSize(10, this.decimalStats_);
            }

            if ((this.bitField0_ & 1024) == 1024) {
               size += CodedOutputStream.computeBytesSize(11, this.getColumnNameBytes());
            }

            if ((this.bitField0_ & 2048) == 2048) {
               size += CodedOutputStream.computeBytesSize(12, this.getBitVectorsBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static ColumnStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ColumnStats)PARSER.parseFrom(data);
      }

      public static ColumnStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnStats)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ColumnStats)PARSER.parseFrom(data);
      }

      public static ColumnStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ColumnStats)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ColumnStats parseFrom(InputStream input) throws IOException {
         return (ColumnStats)PARSER.parseFrom(input);
      }

      public static ColumnStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStats)PARSER.parseFrom(input, extensionRegistry);
      }

      public static ColumnStats parseDelimitedFrom(InputStream input) throws IOException {
         return (ColumnStats)PARSER.parseDelimitedFrom(input);
      }

      public static ColumnStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static ColumnStats parseFrom(CodedInputStream input) throws IOException {
         return (ColumnStats)PARSER.parseFrom(input);
      }

      public static ColumnStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ColumnStats)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.ColumnStats.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(ColumnStats prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class BooleanStats extends GeneratedMessage implements BooleanStatsOrBuilder {
         private static final BooleanStats defaultInstance = new BooleanStats(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public BooleanStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new BooleanStats(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int NUM_TRUES_FIELD_NUMBER = 1;
         private long numTrues_;
         public static final int NUM_FALSES_FIELD_NUMBER = 2;
         private long numFalses_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private BooleanStats(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private BooleanStats(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static BooleanStats getDefaultInstance() {
            return defaultInstance;
         }

         public BooleanStats getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private BooleanStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.numTrues_ = input.readInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.numFalses_ = input.readInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable.ensureFieldAccessorsInitialized(BooleanStats.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasNumTrues() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getNumTrues() {
            return this.numTrues_;
         }

         public boolean hasNumFalses() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getNumFalses() {
            return this.numFalses_;
         }

         private void initFields() {
            this.numTrues_ = 0L;
            this.numFalses_ = 0L;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeInt64(1, this.numTrues_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeInt64(2, this.numFalses_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeInt64Size(1, this.numTrues_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeInt64Size(2, this.numFalses_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static BooleanStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (BooleanStats)PARSER.parseFrom(data);
         }

         public static BooleanStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (BooleanStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static BooleanStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (BooleanStats)PARSER.parseFrom(data);
         }

         public static BooleanStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (BooleanStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static BooleanStats parseFrom(InputStream input) throws IOException {
            return (BooleanStats)PARSER.parseFrom(input);
         }

         public static BooleanStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BooleanStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static BooleanStats parseDelimitedFrom(InputStream input) throws IOException {
            return (BooleanStats)PARSER.parseDelimitedFrom(input);
         }

         public static BooleanStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BooleanStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static BooleanStats parseFrom(CodedInputStream input) throws IOException {
            return (BooleanStats)PARSER.parseFrom(input);
         }

         public static BooleanStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (BooleanStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ColumnStats.BooleanStats.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(BooleanStats prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements BooleanStatsOrBuilder {
            private int bitField0_;
            private long numTrues_;
            private long numFalses_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable.ensureFieldAccessorsInitialized(BooleanStats.class, Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ColumnStats.BooleanStats.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.numTrues_ = 0L;
               this.bitField0_ &= -2;
               this.numFalses_ = 0L;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor;
            }

            public BooleanStats getDefaultInstanceForType() {
               return HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
            }

            public BooleanStats build() {
               BooleanStats result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public BooleanStats buildPartial() {
               BooleanStats result = new BooleanStats(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.numTrues_ = this.numTrues_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.numFalses_ = this.numFalses_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof BooleanStats) {
                  return this.mergeFrom((BooleanStats)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(BooleanStats other) {
               if (other == HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasNumTrues()) {
                     this.setNumTrues(other.getNumTrues());
                  }

                  if (other.hasNumFalses()) {
                     this.setNumFalses(other.getNumFalses());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               BooleanStats parsedMessage = null;

               try {
                  parsedMessage = (BooleanStats)HbaseMetastoreProto.ColumnStats.BooleanStats.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (BooleanStats)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasNumTrues() {
               return (this.bitField0_ & 1) == 1;
            }

            public long getNumTrues() {
               return this.numTrues_;
            }

            public Builder setNumTrues(long value) {
               this.bitField0_ |= 1;
               this.numTrues_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearNumTrues() {
               this.bitField0_ &= -2;
               this.numTrues_ = 0L;
               this.onChanged();
               return this;
            }

            public boolean hasNumFalses() {
               return (this.bitField0_ & 2) == 2;
            }

            public long getNumFalses() {
               return this.numFalses_;
            }

            public Builder setNumFalses(long value) {
               this.bitField0_ |= 2;
               this.numFalses_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearNumFalses() {
               this.bitField0_ &= -3;
               this.numFalses_ = 0L;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class LongStats extends GeneratedMessage implements LongStatsOrBuilder {
         private static final LongStats defaultInstance = new LongStats(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public LongStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new LongStats(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int LOW_VALUE_FIELD_NUMBER = 1;
         private long lowValue_;
         public static final int HIGH_VALUE_FIELD_NUMBER = 2;
         private long highValue_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private LongStats(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private LongStats(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static LongStats getDefaultInstance() {
            return defaultInstance;
         }

         public LongStats getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private LongStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.lowValue_ = input.readSInt64();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.highValue_ = input.readSInt64();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable.ensureFieldAccessorsInitialized(LongStats.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasLowValue() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getLowValue() {
            return this.lowValue_;
         }

         public boolean hasHighValue() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getHighValue() {
            return this.highValue_;
         }

         private void initFields() {
            this.lowValue_ = 0L;
            this.highValue_ = 0L;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeSInt64(1, this.lowValue_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeSInt64(2, this.highValue_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeSInt64Size(1, this.lowValue_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeSInt64Size(2, this.highValue_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static LongStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (LongStats)PARSER.parseFrom(data);
         }

         public static LongStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LongStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static LongStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (LongStats)PARSER.parseFrom(data);
         }

         public static LongStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (LongStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static LongStats parseFrom(InputStream input) throws IOException {
            return (LongStats)PARSER.parseFrom(input);
         }

         public static LongStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LongStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static LongStats parseDelimitedFrom(InputStream input) throws IOException {
            return (LongStats)PARSER.parseDelimitedFrom(input);
         }

         public static LongStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LongStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static LongStats parseFrom(CodedInputStream input) throws IOException {
            return (LongStats)PARSER.parseFrom(input);
         }

         public static LongStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (LongStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ColumnStats.LongStats.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(LongStats prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements LongStatsOrBuilder {
            private int bitField0_;
            private long lowValue_;
            private long highValue_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable.ensureFieldAccessorsInitialized(LongStats.class, Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ColumnStats.LongStats.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.lowValue_ = 0L;
               this.bitField0_ &= -2;
               this.highValue_ = 0L;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor;
            }

            public LongStats getDefaultInstanceForType() {
               return HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
            }

            public LongStats build() {
               LongStats result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public LongStats buildPartial() {
               LongStats result = new LongStats(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.lowValue_ = this.lowValue_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.highValue_ = this.highValue_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof LongStats) {
                  return this.mergeFrom((LongStats)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(LongStats other) {
               if (other == HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasLowValue()) {
                     this.setLowValue(other.getLowValue());
                  }

                  if (other.hasHighValue()) {
                     this.setHighValue(other.getHighValue());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               LongStats parsedMessage = null;

               try {
                  parsedMessage = (LongStats)HbaseMetastoreProto.ColumnStats.LongStats.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (LongStats)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasLowValue() {
               return (this.bitField0_ & 1) == 1;
            }

            public long getLowValue() {
               return this.lowValue_;
            }

            public Builder setLowValue(long value) {
               this.bitField0_ |= 1;
               this.lowValue_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearLowValue() {
               this.bitField0_ &= -2;
               this.lowValue_ = 0L;
               this.onChanged();
               return this;
            }

            public boolean hasHighValue() {
               return (this.bitField0_ & 2) == 2;
            }

            public long getHighValue() {
               return this.highValue_;
            }

            public Builder setHighValue(long value) {
               this.bitField0_ |= 2;
               this.highValue_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearHighValue() {
               this.bitField0_ &= -3;
               this.highValue_ = 0L;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class DoubleStats extends GeneratedMessage implements DoubleStatsOrBuilder {
         private static final DoubleStats defaultInstance = new DoubleStats(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public DoubleStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DoubleStats(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int LOW_VALUE_FIELD_NUMBER = 1;
         private double lowValue_;
         public static final int HIGH_VALUE_FIELD_NUMBER = 2;
         private double highValue_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private DoubleStats(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private DoubleStats(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static DoubleStats getDefaultInstance() {
            return defaultInstance;
         }

         public DoubleStats getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private DoubleStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 9:
                        this.bitField0_ |= 1;
                        this.lowValue_ = input.readDouble();
                        break;
                     case 17:
                        this.bitField0_ |= 2;
                        this.highValue_ = input.readDouble();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable.ensureFieldAccessorsInitialized(DoubleStats.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasLowValue() {
            return (this.bitField0_ & 1) == 1;
         }

         public double getLowValue() {
            return this.lowValue_;
         }

         public boolean hasHighValue() {
            return (this.bitField0_ & 2) == 2;
         }

         public double getHighValue() {
            return this.highValue_;
         }

         private void initFields() {
            this.lowValue_ = (double)0.0F;
            this.highValue_ = (double)0.0F;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeDouble(1, this.lowValue_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeDouble(2, this.highValue_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeDoubleSize(1, this.lowValue_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeDoubleSize(2, this.highValue_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static DoubleStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DoubleStats)PARSER.parseFrom(data);
         }

         public static DoubleStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DoubleStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static DoubleStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DoubleStats)PARSER.parseFrom(data);
         }

         public static DoubleStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DoubleStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static DoubleStats parseFrom(InputStream input) throws IOException {
            return (DoubleStats)PARSER.parseFrom(input);
         }

         public static DoubleStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DoubleStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static DoubleStats parseDelimitedFrom(InputStream input) throws IOException {
            return (DoubleStats)PARSER.parseDelimitedFrom(input);
         }

         public static DoubleStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DoubleStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static DoubleStats parseFrom(CodedInputStream input) throws IOException {
            return (DoubleStats)PARSER.parseFrom(input);
         }

         public static DoubleStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DoubleStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ColumnStats.DoubleStats.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(DoubleStats prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements DoubleStatsOrBuilder {
            private int bitField0_;
            private double lowValue_;
            private double highValue_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable.ensureFieldAccessorsInitialized(DoubleStats.class, Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ColumnStats.DoubleStats.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.lowValue_ = (double)0.0F;
               this.bitField0_ &= -2;
               this.highValue_ = (double)0.0F;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor;
            }

            public DoubleStats getDefaultInstanceForType() {
               return HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
            }

            public DoubleStats build() {
               DoubleStats result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DoubleStats buildPartial() {
               DoubleStats result = new DoubleStats(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.lowValue_ = this.lowValue_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.highValue_ = this.highValue_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof DoubleStats) {
                  return this.mergeFrom((DoubleStats)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(DoubleStats other) {
               if (other == HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasLowValue()) {
                     this.setLowValue(other.getLowValue());
                  }

                  if (other.hasHighValue()) {
                     this.setHighValue(other.getHighValue());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DoubleStats parsedMessage = null;

               try {
                  parsedMessage = (DoubleStats)HbaseMetastoreProto.ColumnStats.DoubleStats.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (DoubleStats)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasLowValue() {
               return (this.bitField0_ & 1) == 1;
            }

            public double getLowValue() {
               return this.lowValue_;
            }

            public Builder setLowValue(double value) {
               this.bitField0_ |= 1;
               this.lowValue_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearLowValue() {
               this.bitField0_ &= -2;
               this.lowValue_ = (double)0.0F;
               this.onChanged();
               return this;
            }

            public boolean hasHighValue() {
               return (this.bitField0_ & 2) == 2;
            }

            public double getHighValue() {
               return this.highValue_;
            }

            public Builder setHighValue(double value) {
               this.bitField0_ |= 2;
               this.highValue_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearHighValue() {
               this.bitField0_ &= -3;
               this.highValue_ = (double)0.0F;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class StringStats extends GeneratedMessage implements StringStatsOrBuilder {
         private static final StringStats defaultInstance = new StringStats(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public StringStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new StringStats(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int MAX_COL_LENGTH_FIELD_NUMBER = 1;
         private long maxColLength_;
         public static final int AVG_COL_LENGTH_FIELD_NUMBER = 2;
         private double avgColLength_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private StringStats(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private StringStats(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static StringStats getDefaultInstance() {
            return defaultInstance;
         }

         public StringStats getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private StringStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.maxColLength_ = input.readInt64();
                        break;
                     case 17:
                        this.bitField0_ |= 2;
                        this.avgColLength_ = input.readDouble();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStats.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasMaxColLength() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getMaxColLength() {
            return this.maxColLength_;
         }

         public boolean hasAvgColLength() {
            return (this.bitField0_ & 2) == 2;
         }

         public double getAvgColLength() {
            return this.avgColLength_;
         }

         private void initFields() {
            this.maxColLength_ = 0L;
            this.avgColLength_ = (double)0.0F;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeInt64(1, this.maxColLength_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeDouble(2, this.avgColLength_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeInt64Size(1, this.maxColLength_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeDoubleSize(2, this.avgColLength_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static StringStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (StringStats)PARSER.parseFrom(data);
         }

         public static StringStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StringStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static StringStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (StringStats)PARSER.parseFrom(data);
         }

         public static StringStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (StringStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static StringStats parseFrom(InputStream input) throws IOException {
            return (StringStats)PARSER.parseFrom(input);
         }

         public static StringStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StringStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static StringStats parseDelimitedFrom(InputStream input) throws IOException {
            return (StringStats)PARSER.parseDelimitedFrom(input);
         }

         public static StringStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StringStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static StringStats parseFrom(CodedInputStream input) throws IOException {
            return (StringStats)PARSER.parseFrom(input);
         }

         public static StringStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (StringStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ColumnStats.StringStats.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(StringStats prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements StringStatsOrBuilder {
            private int bitField0_;
            private long maxColLength_;
            private double avgColLength_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStats.class, Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ColumnStats.StringStats.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.maxColLength_ = 0L;
               this.bitField0_ &= -2;
               this.avgColLength_ = (double)0.0F;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor;
            }

            public StringStats getDefaultInstanceForType() {
               return HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            }

            public StringStats build() {
               StringStats result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public StringStats buildPartial() {
               StringStats result = new StringStats(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.maxColLength_ = this.maxColLength_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.avgColLength_ = this.avgColLength_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof StringStats) {
                  return this.mergeFrom((StringStats)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(StringStats other) {
               if (other == HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasMaxColLength()) {
                     this.setMaxColLength(other.getMaxColLength());
                  }

                  if (other.hasAvgColLength()) {
                     this.setAvgColLength(other.getAvgColLength());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               StringStats parsedMessage = null;

               try {
                  parsedMessage = (StringStats)HbaseMetastoreProto.ColumnStats.StringStats.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (StringStats)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasMaxColLength() {
               return (this.bitField0_ & 1) == 1;
            }

            public long getMaxColLength() {
               return this.maxColLength_;
            }

            public Builder setMaxColLength(long value) {
               this.bitField0_ |= 1;
               this.maxColLength_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearMaxColLength() {
               this.bitField0_ &= -2;
               this.maxColLength_ = 0L;
               this.onChanged();
               return this;
            }

            public boolean hasAvgColLength() {
               return (this.bitField0_ & 2) == 2;
            }

            public double getAvgColLength() {
               return this.avgColLength_;
            }

            public Builder setAvgColLength(double value) {
               this.bitField0_ |= 2;
               this.avgColLength_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearAvgColLength() {
               this.bitField0_ &= -3;
               this.avgColLength_ = (double)0.0F;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class DecimalStats extends GeneratedMessage implements DecimalStatsOrBuilder {
         private static final DecimalStats defaultInstance = new DecimalStats(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public DecimalStats parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new DecimalStats(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int LOW_VALUE_FIELD_NUMBER = 1;
         private Decimal lowValue_;
         public static final int HIGH_VALUE_FIELD_NUMBER = 2;
         private Decimal highValue_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private DecimalStats(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private DecimalStats(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static DecimalStats getDefaultInstance() {
            return defaultInstance;
         }

         public DecimalStats getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private DecimalStats(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        Decimal.Builder subBuilder = null;
                        if ((this.bitField0_ & 1) == 1) {
                           subBuilder = this.lowValue_.toBuilder();
                        }

                        this.lowValue_ = (Decimal)input.readMessage(HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.lowValue_);
                           this.lowValue_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 1;
                        break;
                     case 18:
                        Decimal.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) == 2) {
                           subBuilder = this.highValue_.toBuilder();
                        }

                        this.highValue_ = (Decimal)input.readMessage(HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.highValue_);
                           this.highValue_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable.ensureFieldAccessorsInitialized(DecimalStats.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasLowValue() {
            return (this.bitField0_ & 1) == 1;
         }

         public Decimal getLowValue() {
            return this.lowValue_;
         }

         public DecimalOrBuilder getLowValueOrBuilder() {
            return this.lowValue_;
         }

         public boolean hasHighValue() {
            return (this.bitField0_ & 2) == 2;
         }

         public Decimal getHighValue() {
            return this.highValue_;
         }

         public DecimalOrBuilder getHighValueOrBuilder() {
            return this.highValue_;
         }

         private void initFields() {
            this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
            this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (this.hasLowValue() && !this.getLowValue().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (this.hasHighValue() && !this.getHighValue().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeMessage(1, this.lowValue_);
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeMessage(2, this.highValue_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeMessageSize(1, this.lowValue_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeMessageSize(2, this.highValue_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static DecimalStats parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (DecimalStats)PARSER.parseFrom(data);
         }

         public static DecimalStats parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DecimalStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static DecimalStats parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (DecimalStats)PARSER.parseFrom(data);
         }

         public static DecimalStats parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (DecimalStats)PARSER.parseFrom(data, extensionRegistry);
         }

         public static DecimalStats parseFrom(InputStream input) throws IOException {
            return (DecimalStats)PARSER.parseFrom(input);
         }

         public static DecimalStats parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DecimalStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static DecimalStats parseDelimitedFrom(InputStream input) throws IOException {
            return (DecimalStats)PARSER.parseDelimitedFrom(input);
         }

         public static DecimalStats parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DecimalStats)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static DecimalStats parseFrom(CodedInputStream input) throws IOException {
            return (DecimalStats)PARSER.parseFrom(input);
         }

         public static DecimalStats parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (DecimalStats)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ColumnStats.DecimalStats.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(DecimalStats prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Decimal extends GeneratedMessage implements DecimalOrBuilder {
            private static final Decimal defaultInstance = new Decimal(true);
            private final UnknownFieldSet unknownFields;
            public static Parser PARSER = new AbstractParser() {
               public Decimal parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                  return new Decimal(input, extensionRegistry);
               }
            };
            private int bitField0_;
            public static final int UNSCALED_FIELD_NUMBER = 1;
            private ByteString unscaled_;
            public static final int SCALE_FIELD_NUMBER = 2;
            private int scale_;
            private byte memoizedIsInitialized;
            private int memoizedSerializedSize;
            private static final long serialVersionUID = 0L;

            private Decimal(GeneratedMessage.Builder builder) {
               super(builder);
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = builder.getUnknownFields();
            }

            private Decimal(boolean noInit) {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = UnknownFieldSet.getDefaultInstance();
            }

            public static Decimal getDefaultInstance() {
               return defaultInstance;
            }

            public Decimal getDefaultInstanceForType() {
               return defaultInstance;
            }

            public final UnknownFieldSet getUnknownFields() {
               return this.unknownFields;
            }

            private Decimal(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.initFields();
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch (tag) {
                        case 0:
                           done = true;
                           break;
                        case 10:
                           this.bitField0_ |= 1;
                           this.unscaled_ = input.readBytes();
                           break;
                        case 16:
                           this.bitField0_ |= 2;
                           this.scale_ = input.readInt32();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException e) {
                  throw e.setUnfinishedMessage(this);
               } catch (IOException e) {
                  throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable.ensureFieldAccessorsInitialized(Decimal.class, Builder.class);
            }

            public Parser getParserForType() {
               return PARSER;
            }

            public boolean hasUnscaled() {
               return (this.bitField0_ & 1) == 1;
            }

            public ByteString getUnscaled() {
               return this.unscaled_;
            }

            public boolean hasScale() {
               return (this.bitField0_ & 2) == 2;
            }

            public int getScale() {
               return this.scale_;
            }

            private void initFields() {
               this.unscaled_ = ByteString.EMPTY;
               this.scale_ = 0;
            }

            public final boolean isInitialized() {
               byte isInitialized = this.memoizedIsInitialized;
               if (isInitialized != -1) {
                  return isInitialized == 1;
               } else if (!this.hasUnscaled()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else if (!this.hasScale()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else {
                  this.memoizedIsInitialized = 1;
                  return true;
               }
            }

            public void writeTo(CodedOutputStream output) throws IOException {
               this.getSerializedSize();
               if ((this.bitField0_ & 1) == 1) {
                  output.writeBytes(1, this.unscaled_);
               }

               if ((this.bitField0_ & 2) == 2) {
                  output.writeInt32(2, this.scale_);
               }

               this.getUnknownFields().writeTo(output);
            }

            public int getSerializedSize() {
               int size = this.memoizedSerializedSize;
               if (size != -1) {
                  return size;
               } else {
                  size = 0;
                  if ((this.bitField0_ & 1) == 1) {
                     size += CodedOutputStream.computeBytesSize(1, this.unscaled_);
                  }

                  if ((this.bitField0_ & 2) == 2) {
                     size += CodedOutputStream.computeInt32Size(2, this.scale_);
                  }

                  size += this.getUnknownFields().getSerializedSize();
                  this.memoizedSerializedSize = size;
                  return size;
               }
            }

            protected Object writeReplace() throws ObjectStreamException {
               return super.writeReplace();
            }

            public static Decimal parseFrom(ByteString data) throws InvalidProtocolBufferException {
               return (Decimal)PARSER.parseFrom(data);
            }

            public static Decimal parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (Decimal)PARSER.parseFrom(data, extensionRegistry);
            }

            public static Decimal parseFrom(byte[] data) throws InvalidProtocolBufferException {
               return (Decimal)PARSER.parseFrom(data);
            }

            public static Decimal parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (Decimal)PARSER.parseFrom(data, extensionRegistry);
            }

            public static Decimal parseFrom(InputStream input) throws IOException {
               return (Decimal)PARSER.parseFrom(input);
            }

            public static Decimal parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (Decimal)PARSER.parseFrom(input, extensionRegistry);
            }

            public static Decimal parseDelimitedFrom(InputStream input) throws IOException {
               return (Decimal)PARSER.parseDelimitedFrom(input);
            }

            public static Decimal parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (Decimal)PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static Decimal parseFrom(CodedInputStream input) throws IOException {
               return (Decimal)PARSER.parseFrom(input);
            }

            public static Decimal parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (Decimal)PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
               return HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.Builder.create();
            }

            public Builder newBuilderForType() {
               return newBuilder();
            }

            public static Builder newBuilder(Decimal prototype) {
               return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
               return newBuilder(this);
            }

            protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
               Builder builder = new Builder(parent);
               return builder;
            }

            static {
               defaultInstance.initFields();
            }

            public static final class Builder extends GeneratedMessage.Builder implements DecimalOrBuilder {
               private int bitField0_;
               private ByteString unscaled_;
               private int scale_;

               public static final Descriptors.Descriptor getDescriptor() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor;
               }

               protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable.ensureFieldAccessorsInitialized(Decimal.class, Builder.class);
               }

               private Builder() {
                  this.unscaled_ = ByteString.EMPTY;
                  this.maybeForceBuilderInitialization();
               }

               private Builder(GeneratedMessage.BuilderParent parent) {
                  super(parent);
                  this.unscaled_ = ByteString.EMPTY;
                  this.maybeForceBuilderInitialization();
               }

               private void maybeForceBuilderInitialization() {
                  if (HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.alwaysUseFieldBuilders) {
                  }

               }

               private static Builder create() {
                  return new Builder();
               }

               public Builder clear() {
                  super.clear();
                  this.unscaled_ = ByteString.EMPTY;
                  this.bitField0_ &= -2;
                  this.scale_ = 0;
                  this.bitField0_ &= -3;
                  return this;
               }

               public Builder clone() {
                  return create().mergeFrom(this.buildPartial());
               }

               public Descriptors.Descriptor getDescriptorForType() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor;
               }

               public Decimal getDefaultInstanceForType() {
                  return HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               }

               public Decimal build() {
                  Decimal result = this.buildPartial();
                  if (!result.isInitialized()) {
                     throw newUninitializedMessageException(result);
                  } else {
                     return result;
                  }
               }

               public Decimal buildPartial() {
                  Decimal result = new Decimal(this);
                  int from_bitField0_ = this.bitField0_;
                  int to_bitField0_ = 0;
                  if ((from_bitField0_ & 1) == 1) {
                     to_bitField0_ |= 1;
                  }

                  result.unscaled_ = this.unscaled_;
                  if ((from_bitField0_ & 2) == 2) {
                     to_bitField0_ |= 2;
                  }

                  result.scale_ = this.scale_;
                  result.bitField0_ = to_bitField0_;
                  this.onBuilt();
                  return result;
               }

               public Builder mergeFrom(Message other) {
                  if (other instanceof Decimal) {
                     return this.mergeFrom((Decimal)other);
                  } else {
                     super.mergeFrom(other);
                     return this;
                  }
               }

               public Builder mergeFrom(Decimal other) {
                  if (other == HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance()) {
                     return this;
                  } else {
                     if (other.hasUnscaled()) {
                        this.setUnscaled(other.getUnscaled());
                     }

                     if (other.hasScale()) {
                        this.setScale(other.getScale());
                     }

                     this.mergeUnknownFields(other.getUnknownFields());
                     return this;
                  }
               }

               public final boolean isInitialized() {
                  if (!this.hasUnscaled()) {
                     return false;
                  } else {
                     return this.hasScale();
                  }
               }

               public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                  Decimal parsedMessage = null;

                  try {
                     parsedMessage = (Decimal)HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.PARSER.parsePartialFrom(input, extensionRegistry);
                  } catch (InvalidProtocolBufferException e) {
                     parsedMessage = (Decimal)e.getUnfinishedMessage();
                     throw e;
                  } finally {
                     if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                     }

                  }

                  return this;
               }

               public boolean hasUnscaled() {
                  return (this.bitField0_ & 1) == 1;
               }

               public ByteString getUnscaled() {
                  return this.unscaled_;
               }

               public Builder setUnscaled(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 1;
                     this.unscaled_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public Builder clearUnscaled() {
                  this.bitField0_ &= -2;
                  this.unscaled_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance().getUnscaled();
                  this.onChanged();
                  return this;
               }

               public boolean hasScale() {
                  return (this.bitField0_ & 2) == 2;
               }

               public int getScale() {
                  return this.scale_;
               }

               public Builder setScale(int value) {
                  this.bitField0_ |= 2;
                  this.scale_ = value;
                  this.onChanged();
                  return this;
               }

               public Builder clearScale() {
                  this.bitField0_ &= -3;
                  this.scale_ = 0;
                  this.onChanged();
                  return this;
               }
            }
         }

         public static final class Builder extends GeneratedMessage.Builder implements DecimalStatsOrBuilder {
            private int bitField0_;
            private Decimal lowValue_;
            private SingleFieldBuilder lowValueBuilder_;
            private Decimal highValue_;
            private SingleFieldBuilder highValueBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable.ensureFieldAccessorsInitialized(DecimalStats.class, Builder.class);
            }

            private Builder() {
               this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ColumnStats.DecimalStats.alwaysUseFieldBuilders) {
                  this.getLowValueFieldBuilder();
                  this.getHighValueFieldBuilder();
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               if (this.lowValueBuilder_ == null) {
                  this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               } else {
                  this.lowValueBuilder_.clear();
               }

               this.bitField0_ &= -2;
               if (this.highValueBuilder_ == null) {
                  this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
               } else {
                  this.highValueBuilder_.clear();
               }

               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor;
            }

            public DecimalStats getDefaultInstanceForType() {
               return HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
            }

            public DecimalStats build() {
               DecimalStats result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public DecimalStats buildPartial() {
               DecimalStats result = new DecimalStats(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               if (this.lowValueBuilder_ == null) {
                  result.lowValue_ = this.lowValue_;
               } else {
                  result.lowValue_ = (Decimal)this.lowValueBuilder_.build();
               }

               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               if (this.highValueBuilder_ == null) {
                  result.highValue_ = this.highValue_;
               } else {
                  result.highValue_ = (Decimal)this.highValueBuilder_.build();
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof DecimalStats) {
                  return this.mergeFrom((DecimalStats)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(DecimalStats other) {
               if (other == HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasLowValue()) {
                     this.mergeLowValue(other.getLowValue());
                  }

                  if (other.hasHighValue()) {
                     this.mergeHighValue(other.getHighValue());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (this.hasLowValue() && !this.getLowValue().isInitialized()) {
                  return false;
               } else {
                  return !this.hasHighValue() || this.getHighValue().isInitialized();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               DecimalStats parsedMessage = null;

               try {
                  parsedMessage = (DecimalStats)HbaseMetastoreProto.ColumnStats.DecimalStats.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (DecimalStats)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasLowValue() {
               return (this.bitField0_ & 1) == 1;
            }

            public Decimal getLowValue() {
               return this.lowValueBuilder_ == null ? this.lowValue_ : (Decimal)this.lowValueBuilder_.getMessage();
            }

            public Builder setLowValue(Decimal value) {
               if (this.lowValueBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.lowValue_ = value;
                  this.onChanged();
               } else {
                  this.lowValueBuilder_.setMessage(value);
               }

               this.bitField0_ |= 1;
               return this;
            }

            public Builder setLowValue(Decimal.Builder builderForValue) {
               if (this.lowValueBuilder_ == null) {
                  this.lowValue_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.lowValueBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 1;
               return this;
            }

            public Builder mergeLowValue(Decimal value) {
               if (this.lowValueBuilder_ == null) {
                  if ((this.bitField0_ & 1) == 1 && this.lowValue_ != HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance()) {
                     this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.newBuilder(this.lowValue_).mergeFrom(value).buildPartial();
                  } else {
                     this.lowValue_ = value;
                  }

                  this.onChanged();
               } else {
                  this.lowValueBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 1;
               return this;
            }

            public Builder clearLowValue() {
               if (this.lowValueBuilder_ == null) {
                  this.lowValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
                  this.onChanged();
               } else {
                  this.lowValueBuilder_.clear();
               }

               this.bitField0_ &= -2;
               return this;
            }

            public Decimal.Builder getLowValueBuilder() {
               this.bitField0_ |= 1;
               this.onChanged();
               return (Decimal.Builder)this.getLowValueFieldBuilder().getBuilder();
            }

            public DecimalOrBuilder getLowValueOrBuilder() {
               return (DecimalOrBuilder)(this.lowValueBuilder_ != null ? (DecimalOrBuilder)this.lowValueBuilder_.getMessageOrBuilder() : this.lowValue_);
            }

            private SingleFieldBuilder getLowValueFieldBuilder() {
               if (this.lowValueBuilder_ == null) {
                  this.lowValueBuilder_ = new SingleFieldBuilder(this.lowValue_, this.getParentForChildren(), this.isClean());
                  this.lowValue_ = null;
               }

               return this.lowValueBuilder_;
            }

            public boolean hasHighValue() {
               return (this.bitField0_ & 2) == 2;
            }

            public Decimal getHighValue() {
               return this.highValueBuilder_ == null ? this.highValue_ : (Decimal)this.highValueBuilder_.getMessage();
            }

            public Builder setHighValue(Decimal value) {
               if (this.highValueBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.highValue_ = value;
                  this.onChanged();
               } else {
                  this.highValueBuilder_.setMessage(value);
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder setHighValue(Decimal.Builder builderForValue) {
               if (this.highValueBuilder_ == null) {
                  this.highValue_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.highValueBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder mergeHighValue(Decimal value) {
               if (this.highValueBuilder_ == null) {
                  if ((this.bitField0_ & 2) == 2 && this.highValue_ != HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance()) {
                     this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.newBuilder(this.highValue_).mergeFrom(value).buildPartial();
                  } else {
                     this.highValue_ = value;
                  }

                  this.onChanged();
               } else {
                  this.highValueBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder clearHighValue() {
               if (this.highValueBuilder_ == null) {
                  this.highValue_ = HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.getDefaultInstance();
                  this.onChanged();
               } else {
                  this.highValueBuilder_.clear();
               }

               this.bitField0_ &= -3;
               return this;
            }

            public Decimal.Builder getHighValueBuilder() {
               this.bitField0_ |= 2;
               this.onChanged();
               return (Decimal.Builder)this.getHighValueFieldBuilder().getBuilder();
            }

            public DecimalOrBuilder getHighValueOrBuilder() {
               return (DecimalOrBuilder)(this.highValueBuilder_ != null ? (DecimalOrBuilder)this.highValueBuilder_.getMessageOrBuilder() : this.highValue_);
            }

            private SingleFieldBuilder getHighValueFieldBuilder() {
               if (this.highValueBuilder_ == null) {
                  this.highValueBuilder_ = new SingleFieldBuilder(this.highValue_, this.getParentForChildren(), this.isClean());
                  this.highValue_ = null;
               }

               return this.highValueBuilder_;
            }
         }

         public interface DecimalOrBuilder extends MessageOrBuilder {
            boolean hasUnscaled();

            ByteString getUnscaled();

            boolean hasScale();

            int getScale();
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements ColumnStatsOrBuilder {
         private int bitField0_;
         private long lastAnalyzed_;
         private Object columnType_;
         private long numNulls_;
         private long numDistinctValues_;
         private BooleanStats boolStats_;
         private SingleFieldBuilder boolStatsBuilder_;
         private LongStats longStats_;
         private SingleFieldBuilder longStatsBuilder_;
         private DoubleStats doubleStats_;
         private SingleFieldBuilder doubleStatsBuilder_;
         private StringStats stringStats_;
         private SingleFieldBuilder stringStatsBuilder_;
         private StringStats binaryStats_;
         private SingleFieldBuilder binaryStatsBuilder_;
         private DecimalStats decimalStats_;
         private SingleFieldBuilder decimalStatsBuilder_;
         private Object columnName_;
         private Object bitVectors_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable.ensureFieldAccessorsInitialized(ColumnStats.class, Builder.class);
         }

         private Builder() {
            this.columnType_ = "";
            this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
            this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
            this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
            this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
            this.columnName_ = "";
            this.bitVectors_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.columnType_ = "";
            this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
            this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
            this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
            this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
            this.columnName_ = "";
            this.bitVectors_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.ColumnStats.alwaysUseFieldBuilders) {
               this.getBoolStatsFieldBuilder();
               this.getLongStatsFieldBuilder();
               this.getDoubleStatsFieldBuilder();
               this.getStringStatsFieldBuilder();
               this.getBinaryStatsFieldBuilder();
               this.getDecimalStatsFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.lastAnalyzed_ = 0L;
            this.bitField0_ &= -2;
            this.columnType_ = "";
            this.bitField0_ &= -3;
            this.numNulls_ = 0L;
            this.bitField0_ &= -5;
            this.numDistinctValues_ = 0L;
            this.bitField0_ &= -9;
            if (this.boolStatsBuilder_ == null) {
               this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
            } else {
               this.boolStatsBuilder_.clear();
            }

            this.bitField0_ &= -17;
            if (this.longStatsBuilder_ == null) {
               this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
            } else {
               this.longStatsBuilder_.clear();
            }

            this.bitField0_ &= -33;
            if (this.doubleStatsBuilder_ == null) {
               this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
            } else {
               this.doubleStatsBuilder_.clear();
            }

            this.bitField0_ &= -65;
            if (this.stringStatsBuilder_ == null) {
               this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            } else {
               this.stringStatsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            if (this.binaryStatsBuilder_ == null) {
               this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
            } else {
               this.binaryStatsBuilder_.clear();
            }

            this.bitField0_ &= -257;
            if (this.decimalStatsBuilder_ == null) {
               this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
            } else {
               this.decimalStatsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            this.columnName_ = "";
            this.bitField0_ &= -1025;
            this.bitVectors_ = "";
            this.bitField0_ &= -2049;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor;
         }

         public ColumnStats getDefaultInstanceForType() {
            return HbaseMetastoreProto.ColumnStats.getDefaultInstance();
         }

         public ColumnStats build() {
            ColumnStats result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ColumnStats buildPartial() {
            ColumnStats result = new ColumnStats(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.lastAnalyzed_ = this.lastAnalyzed_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.columnType_ = this.columnType_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.numNulls_ = this.numNulls_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.numDistinctValues_ = this.numDistinctValues_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            if (this.boolStatsBuilder_ == null) {
               result.boolStats_ = this.boolStats_;
            } else {
               result.boolStats_ = (BooleanStats)this.boolStatsBuilder_.build();
            }

            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            if (this.longStatsBuilder_ == null) {
               result.longStats_ = this.longStats_;
            } else {
               result.longStats_ = (LongStats)this.longStatsBuilder_.build();
            }

            if ((from_bitField0_ & 64) == 64) {
               to_bitField0_ |= 64;
            }

            if (this.doubleStatsBuilder_ == null) {
               result.doubleStats_ = this.doubleStats_;
            } else {
               result.doubleStats_ = (DoubleStats)this.doubleStatsBuilder_.build();
            }

            if ((from_bitField0_ & 128) == 128) {
               to_bitField0_ |= 128;
            }

            if (this.stringStatsBuilder_ == null) {
               result.stringStats_ = this.stringStats_;
            } else {
               result.stringStats_ = (StringStats)this.stringStatsBuilder_.build();
            }

            if ((from_bitField0_ & 256) == 256) {
               to_bitField0_ |= 256;
            }

            if (this.binaryStatsBuilder_ == null) {
               result.binaryStats_ = this.binaryStats_;
            } else {
               result.binaryStats_ = (StringStats)this.binaryStatsBuilder_.build();
            }

            if ((from_bitField0_ & 512) == 512) {
               to_bitField0_ |= 512;
            }

            if (this.decimalStatsBuilder_ == null) {
               result.decimalStats_ = this.decimalStats_;
            } else {
               result.decimalStats_ = (DecimalStats)this.decimalStatsBuilder_.build();
            }

            if ((from_bitField0_ & 1024) == 1024) {
               to_bitField0_ |= 1024;
            }

            result.columnName_ = this.columnName_;
            if ((from_bitField0_ & 2048) == 2048) {
               to_bitField0_ |= 2048;
            }

            result.bitVectors_ = this.bitVectors_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ColumnStats) {
               return this.mergeFrom((ColumnStats)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ColumnStats other) {
            if (other == HbaseMetastoreProto.ColumnStats.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasLastAnalyzed()) {
                  this.setLastAnalyzed(other.getLastAnalyzed());
               }

               if (other.hasColumnType()) {
                  this.bitField0_ |= 2;
                  this.columnType_ = other.columnType_;
                  this.onChanged();
               }

               if (other.hasNumNulls()) {
                  this.setNumNulls(other.getNumNulls());
               }

               if (other.hasNumDistinctValues()) {
                  this.setNumDistinctValues(other.getNumDistinctValues());
               }

               if (other.hasBoolStats()) {
                  this.mergeBoolStats(other.getBoolStats());
               }

               if (other.hasLongStats()) {
                  this.mergeLongStats(other.getLongStats());
               }

               if (other.hasDoubleStats()) {
                  this.mergeDoubleStats(other.getDoubleStats());
               }

               if (other.hasStringStats()) {
                  this.mergeStringStats(other.getStringStats());
               }

               if (other.hasBinaryStats()) {
                  this.mergeBinaryStats(other.getBinaryStats());
               }

               if (other.hasDecimalStats()) {
                  this.mergeDecimalStats(other.getDecimalStats());
               }

               if (other.hasColumnName()) {
                  this.bitField0_ |= 1024;
                  this.columnName_ = other.columnName_;
                  this.onChanged();
               }

               if (other.hasBitVectors()) {
                  this.bitField0_ |= 2048;
                  this.bitVectors_ = other.bitVectors_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasColumnType()) {
               return false;
            } else {
               return !this.hasDecimalStats() || this.getDecimalStats().isInitialized();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ColumnStats parsedMessage = null;

            try {
               parsedMessage = (ColumnStats)HbaseMetastoreProto.ColumnStats.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ColumnStats)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasLastAnalyzed() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getLastAnalyzed() {
            return this.lastAnalyzed_;
         }

         public Builder setLastAnalyzed(long value) {
            this.bitField0_ |= 1;
            this.lastAnalyzed_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearLastAnalyzed() {
            this.bitField0_ &= -2;
            this.lastAnalyzed_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasColumnType() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getColumnType() {
            Object ref = this.columnType_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.columnType_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getColumnTypeBytes() {
            Object ref = this.columnType_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.columnType_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setColumnType(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.columnType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearColumnType() {
            this.bitField0_ &= -3;
            this.columnType_ = HbaseMetastoreProto.ColumnStats.getDefaultInstance().getColumnType();
            this.onChanged();
            return this;
         }

         public Builder setColumnTypeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.columnType_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasNumNulls() {
            return (this.bitField0_ & 4) == 4;
         }

         public long getNumNulls() {
            return this.numNulls_;
         }

         public Builder setNumNulls(long value) {
            this.bitField0_ |= 4;
            this.numNulls_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumNulls() {
            this.bitField0_ &= -5;
            this.numNulls_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasNumDistinctValues() {
            return (this.bitField0_ & 8) == 8;
         }

         public long getNumDistinctValues() {
            return this.numDistinctValues_;
         }

         public Builder setNumDistinctValues(long value) {
            this.bitField0_ |= 8;
            this.numDistinctValues_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumDistinctValues() {
            this.bitField0_ &= -9;
            this.numDistinctValues_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasBoolStats() {
            return (this.bitField0_ & 16) == 16;
         }

         public BooleanStats getBoolStats() {
            return this.boolStatsBuilder_ == null ? this.boolStats_ : (BooleanStats)this.boolStatsBuilder_.getMessage();
         }

         public Builder setBoolStats(BooleanStats value) {
            if (this.boolStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.boolStats_ = value;
               this.onChanged();
            } else {
               this.boolStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder setBoolStats(BooleanStats.Builder builderForValue) {
            if (this.boolStatsBuilder_ == null) {
               this.boolStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.boolStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder mergeBoolStats(BooleanStats value) {
            if (this.boolStatsBuilder_ == null) {
               if ((this.bitField0_ & 16) == 16 && this.boolStats_ != HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance()) {
                  this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.newBuilder(this.boolStats_).mergeFrom(value).buildPartial();
               } else {
                  this.boolStats_ = value;
               }

               this.onChanged();
            } else {
               this.boolStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder clearBoolStats() {
            if (this.boolStatsBuilder_ == null) {
               this.boolStats_ = HbaseMetastoreProto.ColumnStats.BooleanStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.boolStatsBuilder_.clear();
            }

            this.bitField0_ &= -17;
            return this;
         }

         public BooleanStats.Builder getBoolStatsBuilder() {
            this.bitField0_ |= 16;
            this.onChanged();
            return (BooleanStats.Builder)this.getBoolStatsFieldBuilder().getBuilder();
         }

         public BooleanStatsOrBuilder getBoolStatsOrBuilder() {
            return (BooleanStatsOrBuilder)(this.boolStatsBuilder_ != null ? (BooleanStatsOrBuilder)this.boolStatsBuilder_.getMessageOrBuilder() : this.boolStats_);
         }

         private SingleFieldBuilder getBoolStatsFieldBuilder() {
            if (this.boolStatsBuilder_ == null) {
               this.boolStatsBuilder_ = new SingleFieldBuilder(this.boolStats_, this.getParentForChildren(), this.isClean());
               this.boolStats_ = null;
            }

            return this.boolStatsBuilder_;
         }

         public boolean hasLongStats() {
            return (this.bitField0_ & 32) == 32;
         }

         public LongStats getLongStats() {
            return this.longStatsBuilder_ == null ? this.longStats_ : (LongStats)this.longStatsBuilder_.getMessage();
         }

         public Builder setLongStats(LongStats value) {
            if (this.longStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.longStats_ = value;
               this.onChanged();
            } else {
               this.longStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder setLongStats(LongStats.Builder builderForValue) {
            if (this.longStatsBuilder_ == null) {
               this.longStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.longStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder mergeLongStats(LongStats value) {
            if (this.longStatsBuilder_ == null) {
               if ((this.bitField0_ & 32) == 32 && this.longStats_ != HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance()) {
                  this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.newBuilder(this.longStats_).mergeFrom(value).buildPartial();
               } else {
                  this.longStats_ = value;
               }

               this.onChanged();
            } else {
               this.longStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder clearLongStats() {
            if (this.longStatsBuilder_ == null) {
               this.longStats_ = HbaseMetastoreProto.ColumnStats.LongStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.longStatsBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public LongStats.Builder getLongStatsBuilder() {
            this.bitField0_ |= 32;
            this.onChanged();
            return (LongStats.Builder)this.getLongStatsFieldBuilder().getBuilder();
         }

         public LongStatsOrBuilder getLongStatsOrBuilder() {
            return (LongStatsOrBuilder)(this.longStatsBuilder_ != null ? (LongStatsOrBuilder)this.longStatsBuilder_.getMessageOrBuilder() : this.longStats_);
         }

         private SingleFieldBuilder getLongStatsFieldBuilder() {
            if (this.longStatsBuilder_ == null) {
               this.longStatsBuilder_ = new SingleFieldBuilder(this.longStats_, this.getParentForChildren(), this.isClean());
               this.longStats_ = null;
            }

            return this.longStatsBuilder_;
         }

         public boolean hasDoubleStats() {
            return (this.bitField0_ & 64) == 64;
         }

         public DoubleStats getDoubleStats() {
            return this.doubleStatsBuilder_ == null ? this.doubleStats_ : (DoubleStats)this.doubleStatsBuilder_.getMessage();
         }

         public Builder setDoubleStats(DoubleStats value) {
            if (this.doubleStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.doubleStats_ = value;
               this.onChanged();
            } else {
               this.doubleStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder setDoubleStats(DoubleStats.Builder builderForValue) {
            if (this.doubleStatsBuilder_ == null) {
               this.doubleStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.doubleStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder mergeDoubleStats(DoubleStats value) {
            if (this.doubleStatsBuilder_ == null) {
               if ((this.bitField0_ & 64) == 64 && this.doubleStats_ != HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance()) {
                  this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.newBuilder(this.doubleStats_).mergeFrom(value).buildPartial();
               } else {
                  this.doubleStats_ = value;
               }

               this.onChanged();
            } else {
               this.doubleStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 64;
            return this;
         }

         public Builder clearDoubleStats() {
            if (this.doubleStatsBuilder_ == null) {
               this.doubleStats_ = HbaseMetastoreProto.ColumnStats.DoubleStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.doubleStatsBuilder_.clear();
            }

            this.bitField0_ &= -65;
            return this;
         }

         public DoubleStats.Builder getDoubleStatsBuilder() {
            this.bitField0_ |= 64;
            this.onChanged();
            return (DoubleStats.Builder)this.getDoubleStatsFieldBuilder().getBuilder();
         }

         public DoubleStatsOrBuilder getDoubleStatsOrBuilder() {
            return (DoubleStatsOrBuilder)(this.doubleStatsBuilder_ != null ? (DoubleStatsOrBuilder)this.doubleStatsBuilder_.getMessageOrBuilder() : this.doubleStats_);
         }

         private SingleFieldBuilder getDoubleStatsFieldBuilder() {
            if (this.doubleStatsBuilder_ == null) {
               this.doubleStatsBuilder_ = new SingleFieldBuilder(this.doubleStats_, this.getParentForChildren(), this.isClean());
               this.doubleStats_ = null;
            }

            return this.doubleStatsBuilder_;
         }

         public boolean hasStringStats() {
            return (this.bitField0_ & 128) == 128;
         }

         public StringStats getStringStats() {
            return this.stringStatsBuilder_ == null ? this.stringStats_ : (StringStats)this.stringStatsBuilder_.getMessage();
         }

         public Builder setStringStats(StringStats value) {
            if (this.stringStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.stringStats_ = value;
               this.onChanged();
            } else {
               this.stringStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder setStringStats(StringStats.Builder builderForValue) {
            if (this.stringStatsBuilder_ == null) {
               this.stringStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.stringStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder mergeStringStats(StringStats value) {
            if (this.stringStatsBuilder_ == null) {
               if ((this.bitField0_ & 128) == 128 && this.stringStats_ != HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance()) {
                  this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.newBuilder(this.stringStats_).mergeFrom(value).buildPartial();
               } else {
                  this.stringStats_ = value;
               }

               this.onChanged();
            } else {
               this.stringStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public Builder clearStringStats() {
            if (this.stringStatsBuilder_ == null) {
               this.stringStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.stringStatsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            return this;
         }

         public StringStats.Builder getStringStatsBuilder() {
            this.bitField0_ |= 128;
            this.onChanged();
            return (StringStats.Builder)this.getStringStatsFieldBuilder().getBuilder();
         }

         public StringStatsOrBuilder getStringStatsOrBuilder() {
            return (StringStatsOrBuilder)(this.stringStatsBuilder_ != null ? (StringStatsOrBuilder)this.stringStatsBuilder_.getMessageOrBuilder() : this.stringStats_);
         }

         private SingleFieldBuilder getStringStatsFieldBuilder() {
            if (this.stringStatsBuilder_ == null) {
               this.stringStatsBuilder_ = new SingleFieldBuilder(this.stringStats_, this.getParentForChildren(), this.isClean());
               this.stringStats_ = null;
            }

            return this.stringStatsBuilder_;
         }

         public boolean hasBinaryStats() {
            return (this.bitField0_ & 256) == 256;
         }

         public StringStats getBinaryStats() {
            return this.binaryStatsBuilder_ == null ? this.binaryStats_ : (StringStats)this.binaryStatsBuilder_.getMessage();
         }

         public Builder setBinaryStats(StringStats value) {
            if (this.binaryStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.binaryStats_ = value;
               this.onChanged();
            } else {
               this.binaryStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder setBinaryStats(StringStats.Builder builderForValue) {
            if (this.binaryStatsBuilder_ == null) {
               this.binaryStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.binaryStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder mergeBinaryStats(StringStats value) {
            if (this.binaryStatsBuilder_ == null) {
               if ((this.bitField0_ & 256) == 256 && this.binaryStats_ != HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance()) {
                  this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.newBuilder(this.binaryStats_).mergeFrom(value).buildPartial();
               } else {
                  this.binaryStats_ = value;
               }

               this.onChanged();
            } else {
               this.binaryStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder clearBinaryStats() {
            if (this.binaryStatsBuilder_ == null) {
               this.binaryStats_ = HbaseMetastoreProto.ColumnStats.StringStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.binaryStatsBuilder_.clear();
            }

            this.bitField0_ &= -257;
            return this;
         }

         public StringStats.Builder getBinaryStatsBuilder() {
            this.bitField0_ |= 256;
            this.onChanged();
            return (StringStats.Builder)this.getBinaryStatsFieldBuilder().getBuilder();
         }

         public StringStatsOrBuilder getBinaryStatsOrBuilder() {
            return (StringStatsOrBuilder)(this.binaryStatsBuilder_ != null ? (StringStatsOrBuilder)this.binaryStatsBuilder_.getMessageOrBuilder() : this.binaryStats_);
         }

         private SingleFieldBuilder getBinaryStatsFieldBuilder() {
            if (this.binaryStatsBuilder_ == null) {
               this.binaryStatsBuilder_ = new SingleFieldBuilder(this.binaryStats_, this.getParentForChildren(), this.isClean());
               this.binaryStats_ = null;
            }

            return this.binaryStatsBuilder_;
         }

         public boolean hasDecimalStats() {
            return (this.bitField0_ & 512) == 512;
         }

         public DecimalStats getDecimalStats() {
            return this.decimalStatsBuilder_ == null ? this.decimalStats_ : (DecimalStats)this.decimalStatsBuilder_.getMessage();
         }

         public Builder setDecimalStats(DecimalStats value) {
            if (this.decimalStatsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.decimalStats_ = value;
               this.onChanged();
            } else {
               this.decimalStatsBuilder_.setMessage(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder setDecimalStats(DecimalStats.Builder builderForValue) {
            if (this.decimalStatsBuilder_ == null) {
               this.decimalStats_ = builderForValue.build();
               this.onChanged();
            } else {
               this.decimalStatsBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder mergeDecimalStats(DecimalStats value) {
            if (this.decimalStatsBuilder_ == null) {
               if ((this.bitField0_ & 512) == 512 && this.decimalStats_ != HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance()) {
                  this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.newBuilder(this.decimalStats_).mergeFrom(value).buildPartial();
               } else {
                  this.decimalStats_ = value;
               }

               this.onChanged();
            } else {
               this.decimalStatsBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder clearDecimalStats() {
            if (this.decimalStatsBuilder_ == null) {
               this.decimalStats_ = HbaseMetastoreProto.ColumnStats.DecimalStats.getDefaultInstance();
               this.onChanged();
            } else {
               this.decimalStatsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public DecimalStats.Builder getDecimalStatsBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return (DecimalStats.Builder)this.getDecimalStatsFieldBuilder().getBuilder();
         }

         public DecimalStatsOrBuilder getDecimalStatsOrBuilder() {
            return (DecimalStatsOrBuilder)(this.decimalStatsBuilder_ != null ? (DecimalStatsOrBuilder)this.decimalStatsBuilder_.getMessageOrBuilder() : this.decimalStats_);
         }

         private SingleFieldBuilder getDecimalStatsFieldBuilder() {
            if (this.decimalStatsBuilder_ == null) {
               this.decimalStatsBuilder_ = new SingleFieldBuilder(this.decimalStats_, this.getParentForChildren(), this.isClean());
               this.decimalStats_ = null;
            }

            return this.decimalStatsBuilder_;
         }

         public boolean hasColumnName() {
            return (this.bitField0_ & 1024) == 1024;
         }

         public String getColumnName() {
            Object ref = this.columnName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.columnName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getColumnNameBytes() {
            Object ref = this.columnName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.columnName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setColumnName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1024;
               this.columnName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearColumnName() {
            this.bitField0_ &= -1025;
            this.columnName_ = HbaseMetastoreProto.ColumnStats.getDefaultInstance().getColumnName();
            this.onChanged();
            return this;
         }

         public Builder setColumnNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1024;
               this.columnName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasBitVectors() {
            return (this.bitField0_ & 2048) == 2048;
         }

         public String getBitVectors() {
            Object ref = this.bitVectors_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.bitVectors_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getBitVectorsBytes() {
            Object ref = this.bitVectors_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.bitVectors_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setBitVectors(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.bitVectors_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearBitVectors() {
            this.bitField0_ &= -2049;
            this.bitVectors_ = HbaseMetastoreProto.ColumnStats.getDefaultInstance().getBitVectors();
            this.onChanged();
            return this;
         }

         public Builder setBitVectorsBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.bitVectors_ = value;
               this.onChanged();
               return this;
            }
         }
      }

      public interface BooleanStatsOrBuilder extends MessageOrBuilder {
         boolean hasNumTrues();

         long getNumTrues();

         boolean hasNumFalses();

         long getNumFalses();
      }

      public interface DecimalStatsOrBuilder extends MessageOrBuilder {
         boolean hasLowValue();

         DecimalStats.Decimal getLowValue();

         DecimalStats.DecimalOrBuilder getLowValueOrBuilder();

         boolean hasHighValue();

         DecimalStats.Decimal getHighValue();

         DecimalStats.DecimalOrBuilder getHighValueOrBuilder();
      }

      public interface DoubleStatsOrBuilder extends MessageOrBuilder {
         boolean hasLowValue();

         double getLowValue();

         boolean hasHighValue();

         double getHighValue();
      }

      public interface LongStatsOrBuilder extends MessageOrBuilder {
         boolean hasLowValue();

         long getLowValue();

         boolean hasHighValue();

         long getHighValue();
      }

      public interface StringStatsOrBuilder extends MessageOrBuilder {
         boolean hasMaxColLength();

         long getMaxColLength();

         boolean hasAvgColLength();

         double getAvgColLength();
      }
   }

   public static final class Database extends GeneratedMessage implements DatabaseOrBuilder {
      private static final Database defaultInstance = new Database(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Database parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Database(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int DESCRIPTION_FIELD_NUMBER = 1;
      private Object description_;
      public static final int URI_FIELD_NUMBER = 2;
      private Object uri_;
      public static final int PARAMETERS_FIELD_NUMBER = 3;
      private Parameters parameters_;
      public static final int PRIVILEGES_FIELD_NUMBER = 4;
      private PrincipalPrivilegeSet privileges_;
      public static final int OWNER_NAME_FIELD_NUMBER = 5;
      private Object ownerName_;
      public static final int OWNER_TYPE_FIELD_NUMBER = 6;
      private PrincipalType ownerType_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Database(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Database(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Database getDefaultInstance() {
         return defaultInstance;
      }

      public Database getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Database(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.description_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.uri_ = input.readBytes();
                     break;
                  case 26:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 4) == 4) {
                        subBuilder = this.parameters_.toBuilder();
                     }

                     this.parameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.parameters_);
                        this.parameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 4;
                     break;
                  case 34:
                     PrincipalPrivilegeSet.Builder subBuilder = null;
                     if ((this.bitField0_ & 8) == 8) {
                        subBuilder = this.privileges_.toBuilder();
                     }

                     this.privileges_ = (PrincipalPrivilegeSet)input.readMessage(HbaseMetastoreProto.PrincipalPrivilegeSet.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.privileges_);
                        this.privileges_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 8;
                     break;
                  case 42:
                     this.bitField0_ |= 16;
                     this.ownerName_ = input.readBytes();
                     break;
                  case 48:
                     int rawValue = input.readEnum();
                     PrincipalType value = HbaseMetastoreProto.PrincipalType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(6, rawValue);
                     } else {
                        this.bitField0_ |= 32;
                        this.ownerType_ = value;
                     }
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable.ensureFieldAccessorsInitialized(Database.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasDescription() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getDescription() {
         Object ref = this.description_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.description_ = s;
            }

            return s;
         }
      }

      public ByteString getDescriptionBytes() {
         Object ref = this.description_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.description_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasUri() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getUri() {
         Object ref = this.uri_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.uri_ = s;
            }

            return s;
         }
      }

      public ByteString getUriBytes() {
         Object ref = this.uri_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.uri_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasParameters() {
         return (this.bitField0_ & 4) == 4;
      }

      public Parameters getParameters() {
         return this.parameters_;
      }

      public ParametersOrBuilder getParametersOrBuilder() {
         return this.parameters_;
      }

      public boolean hasPrivileges() {
         return (this.bitField0_ & 8) == 8;
      }

      public PrincipalPrivilegeSet getPrivileges() {
         return this.privileges_;
      }

      public PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder() {
         return this.privileges_;
      }

      public boolean hasOwnerName() {
         return (this.bitField0_ & 16) == 16;
      }

      public String getOwnerName() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.ownerName_ = s;
            }

            return s;
         }
      }

      public ByteString getOwnerNameBytes() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.ownerName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasOwnerType() {
         return (this.bitField0_ & 32) == 32;
      }

      public PrincipalType getOwnerType() {
         return this.ownerType_;
      }

      private void initFields() {
         this.description_ = "";
         this.uri_ = "";
         this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
         this.ownerName_ = "";
         this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (this.hasParameters() && !this.getParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasPrivileges() && !this.getPrivileges().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getDescriptionBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getUriBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeMessage(3, this.parameters_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeMessage(4, this.privileges_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeBytes(5, this.getOwnerNameBytes());
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeEnum(6, this.ownerType_.getNumber());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getDescriptionBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getUriBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeMessageSize(3, this.parameters_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeMessageSize(4, this.privileges_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeBytesSize(5, this.getOwnerNameBytes());
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeEnumSize(6, this.ownerType_.getNumber());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Database parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Database)PARSER.parseFrom(data);
      }

      public static Database parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Database)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Database parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Database)PARSER.parseFrom(data);
      }

      public static Database parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Database)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Database parseFrom(InputStream input) throws IOException {
         return (Database)PARSER.parseFrom(input);
      }

      public static Database parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Database)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Database parseDelimitedFrom(InputStream input) throws IOException {
         return (Database)PARSER.parseDelimitedFrom(input);
      }

      public static Database parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Database)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Database parseFrom(CodedInputStream input) throws IOException {
         return (Database)PARSER.parseFrom(input);
      }

      public static Database parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Database)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Database.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Database prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements DatabaseOrBuilder {
         private int bitField0_;
         private Object description_;
         private Object uri_;
         private Parameters parameters_;
         private SingleFieldBuilder parametersBuilder_;
         private PrincipalPrivilegeSet privileges_;
         private SingleFieldBuilder privilegesBuilder_;
         private Object ownerName_;
         private PrincipalType ownerType_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable.ensureFieldAccessorsInitialized(Database.class, Builder.class);
         }

         private Builder() {
            this.description_ = "";
            this.uri_ = "";
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            this.ownerName_ = "";
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.description_ = "";
            this.uri_ = "";
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            this.ownerName_ = "";
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Database.alwaysUseFieldBuilders) {
               this.getParametersFieldBuilder();
               this.getPrivilegesFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.description_ = "";
            this.bitField0_ &= -2;
            this.uri_ = "";
            this.bitField0_ &= -3;
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -5;
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            } else {
               this.privilegesBuilder_.clear();
            }

            this.bitField0_ &= -9;
            this.ownerName_ = "";
            this.bitField0_ &= -17;
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.bitField0_ &= -33;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor;
         }

         public Database getDefaultInstanceForType() {
            return HbaseMetastoreProto.Database.getDefaultInstance();
         }

         public Database build() {
            Database result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Database buildPartial() {
            Database result = new Database(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.description_ = this.description_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.uri_ = this.uri_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            if (this.parametersBuilder_ == null) {
               result.parameters_ = this.parameters_;
            } else {
               result.parameters_ = (Parameters)this.parametersBuilder_.build();
            }

            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            if (this.privilegesBuilder_ == null) {
               result.privileges_ = this.privileges_;
            } else {
               result.privileges_ = (PrincipalPrivilegeSet)this.privilegesBuilder_.build();
            }

            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.ownerName_ = this.ownerName_;
            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            result.ownerType_ = this.ownerType_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Database) {
               return this.mergeFrom((Database)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Database other) {
            if (other == HbaseMetastoreProto.Database.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasDescription()) {
                  this.bitField0_ |= 1;
                  this.description_ = other.description_;
                  this.onChanged();
               }

               if (other.hasUri()) {
                  this.bitField0_ |= 2;
                  this.uri_ = other.uri_;
                  this.onChanged();
               }

               if (other.hasParameters()) {
                  this.mergeParameters(other.getParameters());
               }

               if (other.hasPrivileges()) {
                  this.mergePrivileges(other.getPrivileges());
               }

               if (other.hasOwnerName()) {
                  this.bitField0_ |= 16;
                  this.ownerName_ = other.ownerName_;
                  this.onChanged();
               }

               if (other.hasOwnerType()) {
                  this.setOwnerType(other.getOwnerType());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (this.hasParameters() && !this.getParameters().isInitialized()) {
               return false;
            } else {
               return !this.hasPrivileges() || this.getPrivileges().isInitialized();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Database parsedMessage = null;

            try {
               parsedMessage = (Database)HbaseMetastoreProto.Database.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Database)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasDescription() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getDescription() {
            Object ref = this.description_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.description_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getDescriptionBytes() {
            Object ref = this.description_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.description_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setDescription(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.description_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearDescription() {
            this.bitField0_ &= -2;
            this.description_ = HbaseMetastoreProto.Database.getDefaultInstance().getDescription();
            this.onChanged();
            return this;
         }

         public Builder setDescriptionBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.description_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasUri() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getUri() {
            Object ref = this.uri_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.uri_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getUriBytes() {
            Object ref = this.uri_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.uri_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setUri(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.uri_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearUri() {
            this.bitField0_ &= -3;
            this.uri_ = HbaseMetastoreProto.Database.getDefaultInstance().getUri();
            this.onChanged();
            return this;
         }

         public Builder setUriBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.uri_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasParameters() {
            return (this.bitField0_ & 4) == 4;
         }

         public Parameters getParameters() {
            return this.parametersBuilder_ == null ? this.parameters_ : (Parameters)this.parametersBuilder_.getMessage();
         }

         public Builder setParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.parameters_ = value;
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder setParameters(Parameters.Builder builderForValue) {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder mergeParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if ((this.bitField0_ & 4) == 4 && this.parameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.parameters_).mergeFrom(value).buildPartial();
               } else {
                  this.parameters_ = value;
               }

               this.onChanged();
            } else {
               this.parametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public Builder clearParameters() {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public Parameters.Builder getParametersBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (Parameters.Builder)this.getParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getParametersOrBuilder() {
            return (ParametersOrBuilder)(this.parametersBuilder_ != null ? (ParametersOrBuilder)this.parametersBuilder_.getMessageOrBuilder() : this.parameters_);
         }

         private SingleFieldBuilder getParametersFieldBuilder() {
            if (this.parametersBuilder_ == null) {
               this.parametersBuilder_ = new SingleFieldBuilder(this.parameters_, this.getParentForChildren(), this.isClean());
               this.parameters_ = null;
            }

            return this.parametersBuilder_;
         }

         public boolean hasPrivileges() {
            return (this.bitField0_ & 8) == 8;
         }

         public PrincipalPrivilegeSet getPrivileges() {
            return this.privilegesBuilder_ == null ? this.privileges_ : (PrincipalPrivilegeSet)this.privilegesBuilder_.getMessage();
         }

         public Builder setPrivileges(PrincipalPrivilegeSet value) {
            if (this.privilegesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.privileges_ = value;
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder setPrivileges(PrincipalPrivilegeSet.Builder builderForValue) {
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = builderForValue.build();
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder mergePrivileges(PrincipalPrivilegeSet value) {
            if (this.privilegesBuilder_ == null) {
               if ((this.bitField0_ & 8) == 8 && this.privileges_ != HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance()) {
                  this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.newBuilder(this.privileges_).mergeFrom(value).buildPartial();
               } else {
                  this.privileges_ = value;
               }

               this.onChanged();
            } else {
               this.privilegesBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder clearPrivileges() {
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
               this.onChanged();
            } else {
               this.privilegesBuilder_.clear();
            }

            this.bitField0_ &= -9;
            return this;
         }

         public PrincipalPrivilegeSet.Builder getPrivilegesBuilder() {
            this.bitField0_ |= 8;
            this.onChanged();
            return (PrincipalPrivilegeSet.Builder)this.getPrivilegesFieldBuilder().getBuilder();
         }

         public PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder() {
            return (PrincipalPrivilegeSetOrBuilder)(this.privilegesBuilder_ != null ? (PrincipalPrivilegeSetOrBuilder)this.privilegesBuilder_.getMessageOrBuilder() : this.privileges_);
         }

         private SingleFieldBuilder getPrivilegesFieldBuilder() {
            if (this.privilegesBuilder_ == null) {
               this.privilegesBuilder_ = new SingleFieldBuilder(this.privileges_, this.getParentForChildren(), this.isClean());
               this.privileges_ = null;
            }

            return this.privilegesBuilder_;
         }

         public boolean hasOwnerName() {
            return (this.bitField0_ & 16) == 16;
         }

         public String getOwnerName() {
            Object ref = this.ownerName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.ownerName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOwnerNameBytes() {
            Object ref = this.ownerName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.ownerName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOwnerName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwnerName() {
            this.bitField0_ &= -17;
            this.ownerName_ = HbaseMetastoreProto.Database.getDefaultInstance().getOwnerName();
            this.onChanged();
            return this;
         }

         public Builder setOwnerNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOwnerType() {
            return (this.bitField0_ & 32) == 32;
         }

         public PrincipalType getOwnerType() {
            return this.ownerType_;
         }

         public Builder setOwnerType(PrincipalType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.ownerType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwnerType() {
            this.bitField0_ &= -33;
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.onChanged();
            return this;
         }
      }
   }

   public static final class DelegationToken extends GeneratedMessage implements DelegationTokenOrBuilder {
      private static final DelegationToken defaultInstance = new DelegationToken(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public DelegationToken parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new DelegationToken(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int TOKEN_STR_FIELD_NUMBER = 1;
      private Object tokenStr_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private DelegationToken(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private DelegationToken(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static DelegationToken getDefaultInstance() {
         return defaultInstance;
      }

      public DelegationToken getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DelegationToken(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.tokenStr_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable.ensureFieldAccessorsInitialized(DelegationToken.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasTokenStr() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getTokenStr() {
         Object ref = this.tokenStr_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.tokenStr_ = s;
            }

            return s;
         }
      }

      public ByteString getTokenStrBytes() {
         Object ref = this.tokenStr_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.tokenStr_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.tokenStr_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasTokenStr()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getTokenStrBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getTokenStrBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static DelegationToken parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (DelegationToken)PARSER.parseFrom(data);
      }

      public static DelegationToken parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DelegationToken)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DelegationToken parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (DelegationToken)PARSER.parseFrom(data);
      }

      public static DelegationToken parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (DelegationToken)PARSER.parseFrom(data, extensionRegistry);
      }

      public static DelegationToken parseFrom(InputStream input) throws IOException {
         return (DelegationToken)PARSER.parseFrom(input);
      }

      public static DelegationToken parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DelegationToken)PARSER.parseFrom(input, extensionRegistry);
      }

      public static DelegationToken parseDelimitedFrom(InputStream input) throws IOException {
         return (DelegationToken)PARSER.parseDelimitedFrom(input);
      }

      public static DelegationToken parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DelegationToken)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static DelegationToken parseFrom(CodedInputStream input) throws IOException {
         return (DelegationToken)PARSER.parseFrom(input);
      }

      public static DelegationToken parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (DelegationToken)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.DelegationToken.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(DelegationToken prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements DelegationTokenOrBuilder {
         private int bitField0_;
         private Object tokenStr_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable.ensureFieldAccessorsInitialized(DelegationToken.class, Builder.class);
         }

         private Builder() {
            this.tokenStr_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.tokenStr_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.DelegationToken.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.tokenStr_ = "";
            this.bitField0_ &= -2;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor;
         }

         public DelegationToken getDefaultInstanceForType() {
            return HbaseMetastoreProto.DelegationToken.getDefaultInstance();
         }

         public DelegationToken build() {
            DelegationToken result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public DelegationToken buildPartial() {
            DelegationToken result = new DelegationToken(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.tokenStr_ = this.tokenStr_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof DelegationToken) {
               return this.mergeFrom((DelegationToken)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(DelegationToken other) {
            if (other == HbaseMetastoreProto.DelegationToken.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasTokenStr()) {
                  this.bitField0_ |= 1;
                  this.tokenStr_ = other.tokenStr_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return this.hasTokenStr();
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            DelegationToken parsedMessage = null;

            try {
               parsedMessage = (DelegationToken)HbaseMetastoreProto.DelegationToken.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (DelegationToken)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasTokenStr() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getTokenStr() {
            Object ref = this.tokenStr_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.tokenStr_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getTokenStrBytes() {
            Object ref = this.tokenStr_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.tokenStr_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setTokenStr(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.tokenStr_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearTokenStr() {
            this.bitField0_ &= -2;
            this.tokenStr_ = HbaseMetastoreProto.DelegationToken.getDefaultInstance().getTokenStr();
            this.onChanged();
            return this;
         }

         public Builder setTokenStrBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.tokenStr_ = value;
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class FieldSchema extends GeneratedMessage implements FieldSchemaOrBuilder {
      private static final FieldSchema defaultInstance = new FieldSchema(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public FieldSchema parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new FieldSchema(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private Object name_;
      public static final int TYPE_FIELD_NUMBER = 2;
      private Object type_;
      public static final int COMMENT_FIELD_NUMBER = 3;
      private Object comment_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private FieldSchema(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private FieldSchema(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static FieldSchema getDefaultInstance() {
         return defaultInstance;
      }

      public FieldSchema getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FieldSchema(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.name_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.type_ = input.readBytes();
                     break;
                  case 26:
                     this.bitField0_ |= 4;
                     this.comment_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable.ensureFieldAccessorsInitialized(FieldSchema.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getName() {
         Object ref = this.name_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.name_ = s;
            }

            return s;
         }
      }

      public ByteString getNameBytes() {
         Object ref = this.name_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.name_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasType() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getType() {
         Object ref = this.type_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.type_ = s;
            }

            return s;
         }
      }

      public ByteString getTypeBytes() {
         Object ref = this.type_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.type_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasComment() {
         return (this.bitField0_ & 4) == 4;
      }

      public String getComment() {
         Object ref = this.comment_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.comment_ = s;
            }

            return s;
         }
      }

      public ByteString getCommentBytes() {
         Object ref = this.comment_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.comment_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.name_ = "";
         this.type_ = "";
         this.comment_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasType()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getNameBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getTypeBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBytes(3, this.getCommentBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getTypeBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBytesSize(3, this.getCommentBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static FieldSchema parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (FieldSchema)PARSER.parseFrom(data);
      }

      public static FieldSchema parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FieldSchema)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FieldSchema parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (FieldSchema)PARSER.parseFrom(data);
      }

      public static FieldSchema parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (FieldSchema)PARSER.parseFrom(data, extensionRegistry);
      }

      public static FieldSchema parseFrom(InputStream input) throws IOException {
         return (FieldSchema)PARSER.parseFrom(input);
      }

      public static FieldSchema parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FieldSchema)PARSER.parseFrom(input, extensionRegistry);
      }

      public static FieldSchema parseDelimitedFrom(InputStream input) throws IOException {
         return (FieldSchema)PARSER.parseDelimitedFrom(input);
      }

      public static FieldSchema parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FieldSchema)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static FieldSchema parseFrom(CodedInputStream input) throws IOException {
         return (FieldSchema)PARSER.parseFrom(input);
      }

      public static FieldSchema parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (FieldSchema)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.FieldSchema.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(FieldSchema prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements FieldSchemaOrBuilder {
         private int bitField0_;
         private Object name_;
         private Object type_;
         private Object comment_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable.ensureFieldAccessorsInitialized(FieldSchema.class, Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.type_ = "";
            this.comment_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.name_ = "";
            this.type_ = "";
            this.comment_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.FieldSchema.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.type_ = "";
            this.bitField0_ &= -3;
            this.comment_ = "";
            this.bitField0_ &= -5;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor;
         }

         public FieldSchema getDefaultInstanceForType() {
            return HbaseMetastoreProto.FieldSchema.getDefaultInstance();
         }

         public FieldSchema build() {
            FieldSchema result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public FieldSchema buildPartial() {
            FieldSchema result = new FieldSchema(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.name_ = this.name_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.type_ = this.type_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.comment_ = this.comment_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof FieldSchema) {
               return this.mergeFrom((FieldSchema)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(FieldSchema other) {
            if (other == HbaseMetastoreProto.FieldSchema.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = other.name_;
                  this.onChanged();
               }

               if (other.hasType()) {
                  this.bitField0_ |= 2;
                  this.type_ = other.type_;
                  this.onChanged();
               }

               if (other.hasComment()) {
                  this.bitField0_ |= 4;
                  this.comment_ = other.comment_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasName()) {
               return false;
            } else {
               return this.hasType();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            FieldSchema parsedMessage = null;

            try {
               parsedMessage = (FieldSchema)HbaseMetastoreProto.FieldSchema.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (FieldSchema)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getName() {
            Object ref = this.name_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.name_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = HbaseMetastoreProto.FieldSchema.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public Builder setNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasType() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getType() {
            Object ref = this.type_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.type_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getTypeBytes() {
            Object ref = this.type_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.type_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setType(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.type_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearType() {
            this.bitField0_ &= -3;
            this.type_ = HbaseMetastoreProto.FieldSchema.getDefaultInstance().getType();
            this.onChanged();
            return this;
         }

         public Builder setTypeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.type_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasComment() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getComment() {
            Object ref = this.comment_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.comment_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getCommentBytes() {
            Object ref = this.comment_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.comment_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setComment(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.comment_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearComment() {
            this.bitField0_ &= -5;
            this.comment_ = HbaseMetastoreProto.FieldSchema.getDefaultInstance().getComment();
            this.onChanged();
            return this;
         }

         public Builder setCommentBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.comment_ = value;
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class Function extends GeneratedMessage implements FunctionOrBuilder {
      private static final Function defaultInstance = new Function(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Function parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Function(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int CLASS_NAME_FIELD_NUMBER = 1;
      private Object className_;
      public static final int OWNER_NAME_FIELD_NUMBER = 2;
      private Object ownerName_;
      public static final int OWNER_TYPE_FIELD_NUMBER = 3;
      private PrincipalType ownerType_;
      public static final int CREATE_TIME_FIELD_NUMBER = 4;
      private long createTime_;
      public static final int FUNCTION_TYPE_FIELD_NUMBER = 5;
      private FunctionType functionType_;
      public static final int RESOURCE_URIS_FIELD_NUMBER = 6;
      private List resourceUris_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Function(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Function(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Function getDefaultInstance() {
         return defaultInstance;
      }

      public Function getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Function(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.className_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.ownerName_ = input.readBytes();
                     break;
                  case 24:
                     int rawValue = input.readEnum();
                     PrincipalType value = HbaseMetastoreProto.PrincipalType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(3, rawValue);
                     } else {
                        this.bitField0_ |= 4;
                        this.ownerType_ = value;
                     }
                     break;
                  case 32:
                     this.bitField0_ |= 8;
                     this.createTime_ = input.readSInt64();
                     break;
                  case 40:
                     int rawValue = input.readEnum();
                     FunctionType value = HbaseMetastoreProto.Function.FunctionType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(5, rawValue);
                     } else {
                        this.bitField0_ |= 16;
                        this.functionType_ = value;
                     }
                     break;
                  case 50:
                     if ((mutable_bitField0_ & 32) != 32) {
                        this.resourceUris_ = new ArrayList();
                        mutable_bitField0_ |= 32;
                     }

                     this.resourceUris_.add(input.readMessage(HbaseMetastoreProto.Function.ResourceUri.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 32) == 32) {
               this.resourceUris_ = Collections.unmodifiableList(this.resourceUris_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable.ensureFieldAccessorsInitialized(Function.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasClassName() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getClassName() {
         Object ref = this.className_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.className_ = s;
            }

            return s;
         }
      }

      public ByteString getClassNameBytes() {
         Object ref = this.className_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.className_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasOwnerName() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getOwnerName() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.ownerName_ = s;
            }

            return s;
         }
      }

      public ByteString getOwnerNameBytes() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.ownerName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasOwnerType() {
         return (this.bitField0_ & 4) == 4;
      }

      public PrincipalType getOwnerType() {
         return this.ownerType_;
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 8) == 8;
      }

      public long getCreateTime() {
         return this.createTime_;
      }

      public boolean hasFunctionType() {
         return (this.bitField0_ & 16) == 16;
      }

      public FunctionType getFunctionType() {
         return this.functionType_;
      }

      public List getResourceUrisList() {
         return this.resourceUris_;
      }

      public List getResourceUrisOrBuilderList() {
         return this.resourceUris_;
      }

      public int getResourceUrisCount() {
         return this.resourceUris_.size();
      }

      public ResourceUri getResourceUris(int index) {
         return (ResourceUri)this.resourceUris_.get(index);
      }

      public ResourceUriOrBuilder getResourceUrisOrBuilder(int index) {
         return (ResourceUriOrBuilder)this.resourceUris_.get(index);
      }

      private void initFields() {
         this.className_ = "";
         this.ownerName_ = "";
         this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
         this.createTime_ = 0L;
         this.functionType_ = HbaseMetastoreProto.Function.FunctionType.JAVA;
         this.resourceUris_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getResourceUrisCount(); ++i) {
               if (!this.getResourceUris(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getClassNameBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getOwnerNameBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeEnum(3, this.ownerType_.getNumber());
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeSInt64(4, this.createTime_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeEnum(5, this.functionType_.getNumber());
         }

         for(int i = 0; i < this.resourceUris_.size(); ++i) {
            output.writeMessage(6, (MessageLite)this.resourceUris_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getClassNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getOwnerNameBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeEnumSize(3, this.ownerType_.getNumber());
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeSInt64Size(4, this.createTime_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeEnumSize(5, this.functionType_.getNumber());
            }

            for(int i = 0; i < this.resourceUris_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(6, (MessageLite)this.resourceUris_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Function parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Function)PARSER.parseFrom(data);
      }

      public static Function parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Function)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Function parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Function)PARSER.parseFrom(data);
      }

      public static Function parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Function)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Function parseFrom(InputStream input) throws IOException {
         return (Function)PARSER.parseFrom(input);
      }

      public static Function parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Function)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Function parseDelimitedFrom(InputStream input) throws IOException {
         return (Function)PARSER.parseDelimitedFrom(input);
      }

      public static Function parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Function)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Function parseFrom(CodedInputStream input) throws IOException {
         return (Function)PARSER.parseFrom(input);
      }

      public static Function parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Function)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Function.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Function prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static enum FunctionType implements ProtocolMessageEnum {
         JAVA(0, 1);

         public static final int JAVA_VALUE = 1;
         private static Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public FunctionType findValueByNumber(int number) {
               return HbaseMetastoreProto.Function.FunctionType.valueOf(number);
            }
         };
         private static final FunctionType[] VALUES = values();
         private final int index;
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         public static FunctionType valueOf(int value) {
            switch (value) {
               case 1:
                  return JAVA;
               default:
                  return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.index);
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)HbaseMetastoreProto.Function.getDescriptor().getEnumTypes().get(0);
         }

         public static FunctionType valueOf(Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[desc.getIndex()];
            }
         }

         private FunctionType(int index, int value) {
            this.index = index;
            this.value = value;
         }
      }

      public static final class ResourceUri extends GeneratedMessage implements ResourceUriOrBuilder {
         private static final ResourceUri defaultInstance = new ResourceUri(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public ResourceUri parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new ResourceUri(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int RESOURCE_TYPE_FIELD_NUMBER = 1;
         private ResourceType resourceType_;
         public static final int URI_FIELD_NUMBER = 2;
         private Object uri_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private ResourceUri(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private ResourceUri(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static ResourceUri getDefaultInstance() {
            return defaultInstance;
         }

         public ResourceUri getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ResourceUri(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        int rawValue = input.readEnum();
                        ResourceType value = HbaseMetastoreProto.Function.ResourceUri.ResourceType.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.resourceType_ = value;
                        }
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.uri_ = input.readBytes();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceUri.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasResourceType() {
            return (this.bitField0_ & 1) == 1;
         }

         public ResourceType getResourceType() {
            return this.resourceType_;
         }

         public boolean hasUri() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getUri() {
            Object ref = this.uri_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.uri_ = s;
               }

               return s;
            }
         }

         public ByteString getUriBytes() {
            Object ref = this.uri_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.uri_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         private void initFields() {
            this.resourceType_ = HbaseMetastoreProto.Function.ResourceUri.ResourceType.JAR;
            this.uri_ = "";
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasResourceType()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasUri()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeEnum(1, this.resourceType_.getNumber());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBytes(2, this.getUriBytes());
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeEnumSize(1, this.resourceType_.getNumber());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBytesSize(2, this.getUriBytes());
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static ResourceUri parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ResourceUri)PARSER.parseFrom(data);
         }

         public static ResourceUri parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ResourceUri)PARSER.parseFrom(data, extensionRegistry);
         }

         public static ResourceUri parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ResourceUri)PARSER.parseFrom(data);
         }

         public static ResourceUri parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ResourceUri)PARSER.parseFrom(data, extensionRegistry);
         }

         public static ResourceUri parseFrom(InputStream input) throws IOException {
            return (ResourceUri)PARSER.parseFrom(input);
         }

         public static ResourceUri parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResourceUri)PARSER.parseFrom(input, extensionRegistry);
         }

         public static ResourceUri parseDelimitedFrom(InputStream input) throws IOException {
            return (ResourceUri)PARSER.parseDelimitedFrom(input);
         }

         public static ResourceUri parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResourceUri)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static ResourceUri parseFrom(CodedInputStream input) throws IOException {
            return (ResourceUri)PARSER.parseFrom(input);
         }

         public static ResourceUri parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ResourceUri)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.Function.ResourceUri.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(ResourceUri prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static enum ResourceType implements ProtocolMessageEnum {
            JAR(0, 1),
            FILE(1, 2),
            ARCHIVE(2, 3);

            public static final int JAR_VALUE = 1;
            public static final int FILE_VALUE = 2;
            public static final int ARCHIVE_VALUE = 3;
            private static Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
               public ResourceType findValueByNumber(int number) {
                  return HbaseMetastoreProto.Function.ResourceUri.ResourceType.valueOf(number);
               }
            };
            private static final ResourceType[] VALUES = values();
            private final int index;
            private final int value;

            public final int getNumber() {
               return this.value;
            }

            public static ResourceType valueOf(int value) {
               switch (value) {
                  case 1:
                     return JAR;
                  case 2:
                     return FILE;
                  case 3:
                     return ARCHIVE;
                  default:
                     return null;
               }
            }

            public static Internal.EnumLiteMap internalGetValueMap() {
               return internalValueMap;
            }

            public final Descriptors.EnumValueDescriptor getValueDescriptor() {
               return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.index);
            }

            public final Descriptors.EnumDescriptor getDescriptorForType() {
               return getDescriptor();
            }

            public static final Descriptors.EnumDescriptor getDescriptor() {
               return (Descriptors.EnumDescriptor)HbaseMetastoreProto.Function.ResourceUri.getDescriptor().getEnumTypes().get(0);
            }

            public static ResourceType valueOf(Descriptors.EnumValueDescriptor desc) {
               if (desc.getType() != getDescriptor()) {
                  throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
               } else {
                  return VALUES[desc.getIndex()];
               }
            }

            private ResourceType(int index, int value) {
               this.index = index;
               this.value = value;
            }
         }

         public static final class Builder extends GeneratedMessage.Builder implements ResourceUriOrBuilder {
            private int bitField0_;
            private ResourceType resourceType_;
            private Object uri_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceUri.class, Builder.class);
            }

            private Builder() {
               this.resourceType_ = HbaseMetastoreProto.Function.ResourceUri.ResourceType.JAR;
               this.uri_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.resourceType_ = HbaseMetastoreProto.Function.ResourceUri.ResourceType.JAR;
               this.uri_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.Function.ResourceUri.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.resourceType_ = HbaseMetastoreProto.Function.ResourceUri.ResourceType.JAR;
               this.bitField0_ &= -2;
               this.uri_ = "";
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor;
            }

            public ResourceUri getDefaultInstanceForType() {
               return HbaseMetastoreProto.Function.ResourceUri.getDefaultInstance();
            }

            public ResourceUri build() {
               ResourceUri result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public ResourceUri buildPartial() {
               ResourceUri result = new ResourceUri(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.resourceType_ = this.resourceType_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.uri_ = this.uri_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof ResourceUri) {
                  return this.mergeFrom((ResourceUri)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(ResourceUri other) {
               if (other == HbaseMetastoreProto.Function.ResourceUri.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasResourceType()) {
                     this.setResourceType(other.getResourceType());
                  }

                  if (other.hasUri()) {
                     this.bitField0_ |= 2;
                     this.uri_ = other.uri_;
                     this.onChanged();
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasResourceType()) {
                  return false;
               } else {
                  return this.hasUri();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               ResourceUri parsedMessage = null;

               try {
                  parsedMessage = (ResourceUri)HbaseMetastoreProto.Function.ResourceUri.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (ResourceUri)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasResourceType() {
               return (this.bitField0_ & 1) == 1;
            }

            public ResourceType getResourceType() {
               return this.resourceType_;
            }

            public Builder setResourceType(ResourceType value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.resourceType_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearResourceType() {
               this.bitField0_ &= -2;
               this.resourceType_ = HbaseMetastoreProto.Function.ResourceUri.ResourceType.JAR;
               this.onChanged();
               return this;
            }

            public boolean hasUri() {
               return (this.bitField0_ & 2) == 2;
            }

            public String getUri() {
               Object ref = this.uri_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.uri_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getUriBytes() {
               Object ref = this.uri_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.uri_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setUri(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.uri_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearUri() {
               this.bitField0_ &= -3;
               this.uri_ = HbaseMetastoreProto.Function.ResourceUri.getDefaultInstance().getUri();
               this.onChanged();
               return this;
            }

            public Builder setUriBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.uri_ = value;
                  this.onChanged();
                  return this;
               }
            }
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements FunctionOrBuilder {
         private int bitField0_;
         private Object className_;
         private Object ownerName_;
         private PrincipalType ownerType_;
         private long createTime_;
         private FunctionType functionType_;
         private List resourceUris_;
         private RepeatedFieldBuilder resourceUrisBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable.ensureFieldAccessorsInitialized(Function.class, Builder.class);
         }

         private Builder() {
            this.className_ = "";
            this.ownerName_ = "";
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.functionType_ = HbaseMetastoreProto.Function.FunctionType.JAVA;
            this.resourceUris_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.className_ = "";
            this.ownerName_ = "";
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.functionType_ = HbaseMetastoreProto.Function.FunctionType.JAVA;
            this.resourceUris_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Function.alwaysUseFieldBuilders) {
               this.getResourceUrisFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.className_ = "";
            this.bitField0_ &= -2;
            this.ownerName_ = "";
            this.bitField0_ &= -3;
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.bitField0_ &= -5;
            this.createTime_ = 0L;
            this.bitField0_ &= -9;
            this.functionType_ = HbaseMetastoreProto.Function.FunctionType.JAVA;
            this.bitField0_ &= -17;
            if (this.resourceUrisBuilder_ == null) {
               this.resourceUris_ = Collections.emptyList();
               this.bitField0_ &= -33;
            } else {
               this.resourceUrisBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor;
         }

         public Function getDefaultInstanceForType() {
            return HbaseMetastoreProto.Function.getDefaultInstance();
         }

         public Function build() {
            Function result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Function buildPartial() {
            Function result = new Function(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.className_ = this.className_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.ownerName_ = this.ownerName_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.ownerType_ = this.ownerType_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.functionType_ = this.functionType_;
            if (this.resourceUrisBuilder_ == null) {
               if ((this.bitField0_ & 32) == 32) {
                  this.resourceUris_ = Collections.unmodifiableList(this.resourceUris_);
                  this.bitField0_ &= -33;
               }

               result.resourceUris_ = this.resourceUris_;
            } else {
               result.resourceUris_ = this.resourceUrisBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Function) {
               return this.mergeFrom((Function)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Function other) {
            if (other == HbaseMetastoreProto.Function.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasClassName()) {
                  this.bitField0_ |= 1;
                  this.className_ = other.className_;
                  this.onChanged();
               }

               if (other.hasOwnerName()) {
                  this.bitField0_ |= 2;
                  this.ownerName_ = other.ownerName_;
                  this.onChanged();
               }

               if (other.hasOwnerType()) {
                  this.setOwnerType(other.getOwnerType());
               }

               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasFunctionType()) {
                  this.setFunctionType(other.getFunctionType());
               }

               if (this.resourceUrisBuilder_ == null) {
                  if (!other.resourceUris_.isEmpty()) {
                     if (this.resourceUris_.isEmpty()) {
                        this.resourceUris_ = other.resourceUris_;
                        this.bitField0_ &= -33;
                     } else {
                        this.ensureResourceUrisIsMutable();
                        this.resourceUris_.addAll(other.resourceUris_);
                     }

                     this.onChanged();
                  }
               } else if (!other.resourceUris_.isEmpty()) {
                  if (this.resourceUrisBuilder_.isEmpty()) {
                     this.resourceUrisBuilder_.dispose();
                     this.resourceUrisBuilder_ = null;
                     this.resourceUris_ = other.resourceUris_;
                     this.bitField0_ &= -33;
                     this.resourceUrisBuilder_ = HbaseMetastoreProto.Function.alwaysUseFieldBuilders ? this.getResourceUrisFieldBuilder() : null;
                  } else {
                     this.resourceUrisBuilder_.addAllMessages(other.resourceUris_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getResourceUrisCount(); ++i) {
               if (!this.getResourceUris(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Function parsedMessage = null;

            try {
               parsedMessage = (Function)HbaseMetastoreProto.Function.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Function)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasClassName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getClassName() {
            Object ref = this.className_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.className_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getClassNameBytes() {
            Object ref = this.className_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.className_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setClassName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.className_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearClassName() {
            this.bitField0_ &= -2;
            this.className_ = HbaseMetastoreProto.Function.getDefaultInstance().getClassName();
            this.onChanged();
            return this;
         }

         public Builder setClassNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.className_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOwnerName() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getOwnerName() {
            Object ref = this.ownerName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.ownerName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOwnerNameBytes() {
            Object ref = this.ownerName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.ownerName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOwnerName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwnerName() {
            this.bitField0_ &= -3;
            this.ownerName_ = HbaseMetastoreProto.Function.getDefaultInstance().getOwnerName();
            this.onChanged();
            return this;
         }

         public Builder setOwnerNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOwnerType() {
            return (this.bitField0_ & 4) == 4;
         }

         public PrincipalType getOwnerType() {
            return this.ownerType_;
         }

         public Builder setOwnerType(PrincipalType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.ownerType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwnerType() {
            this.bitField0_ &= -5;
            this.ownerType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.onChanged();
            return this;
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 8) == 8;
         }

         public long getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(long value) {
            this.bitField0_ |= 8;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -9;
            this.createTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasFunctionType() {
            return (this.bitField0_ & 16) == 16;
         }

         public FunctionType getFunctionType() {
            return this.functionType_;
         }

         public Builder setFunctionType(FunctionType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.functionType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearFunctionType() {
            this.bitField0_ &= -17;
            this.functionType_ = HbaseMetastoreProto.Function.FunctionType.JAVA;
            this.onChanged();
            return this;
         }

         private void ensureResourceUrisIsMutable() {
            if ((this.bitField0_ & 32) != 32) {
               this.resourceUris_ = new ArrayList(this.resourceUris_);
               this.bitField0_ |= 32;
            }

         }

         public List getResourceUrisList() {
            return this.resourceUrisBuilder_ == null ? Collections.unmodifiableList(this.resourceUris_) : this.resourceUrisBuilder_.getMessageList();
         }

         public int getResourceUrisCount() {
            return this.resourceUrisBuilder_ == null ? this.resourceUris_.size() : this.resourceUrisBuilder_.getCount();
         }

         public ResourceUri getResourceUris(int index) {
            return this.resourceUrisBuilder_ == null ? (ResourceUri)this.resourceUris_.get(index) : (ResourceUri)this.resourceUrisBuilder_.getMessage(index);
         }

         public Builder setResourceUris(int index, ResourceUri value) {
            if (this.resourceUrisBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureResourceUrisIsMutable();
               this.resourceUris_.set(index, value);
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setResourceUris(int index, ResourceUri.Builder builderForValue) {
            if (this.resourceUrisBuilder_ == null) {
               this.ensureResourceUrisIsMutable();
               this.resourceUris_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addResourceUris(ResourceUri value) {
            if (this.resourceUrisBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureResourceUrisIsMutable();
               this.resourceUris_.add(value);
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addResourceUris(int index, ResourceUri value) {
            if (this.resourceUrisBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureResourceUrisIsMutable();
               this.resourceUris_.add(index, value);
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addResourceUris(ResourceUri.Builder builderForValue) {
            if (this.resourceUrisBuilder_ == null) {
               this.ensureResourceUrisIsMutable();
               this.resourceUris_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addResourceUris(int index, ResourceUri.Builder builderForValue) {
            if (this.resourceUrisBuilder_ == null) {
               this.ensureResourceUrisIsMutable();
               this.resourceUris_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllResourceUris(Iterable values) {
            if (this.resourceUrisBuilder_ == null) {
               this.ensureResourceUrisIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.resourceUris_);
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearResourceUris() {
            if (this.resourceUrisBuilder_ == null) {
               this.resourceUris_ = Collections.emptyList();
               this.bitField0_ &= -33;
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.clear();
            }

            return this;
         }

         public Builder removeResourceUris(int index) {
            if (this.resourceUrisBuilder_ == null) {
               this.ensureResourceUrisIsMutable();
               this.resourceUris_.remove(index);
               this.onChanged();
            } else {
               this.resourceUrisBuilder_.remove(index);
            }

            return this;
         }

         public ResourceUri.Builder getResourceUrisBuilder(int index) {
            return (ResourceUri.Builder)this.getResourceUrisFieldBuilder().getBuilder(index);
         }

         public ResourceUriOrBuilder getResourceUrisOrBuilder(int index) {
            return this.resourceUrisBuilder_ == null ? (ResourceUriOrBuilder)this.resourceUris_.get(index) : (ResourceUriOrBuilder)this.resourceUrisBuilder_.getMessageOrBuilder(index);
         }

         public List getResourceUrisOrBuilderList() {
            return this.resourceUrisBuilder_ != null ? this.resourceUrisBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.resourceUris_);
         }

         public ResourceUri.Builder addResourceUrisBuilder() {
            return (ResourceUri.Builder)this.getResourceUrisFieldBuilder().addBuilder(HbaseMetastoreProto.Function.ResourceUri.getDefaultInstance());
         }

         public ResourceUri.Builder addResourceUrisBuilder(int index) {
            return (ResourceUri.Builder)this.getResourceUrisFieldBuilder().addBuilder(index, HbaseMetastoreProto.Function.ResourceUri.getDefaultInstance());
         }

         public List getResourceUrisBuilderList() {
            return this.getResourceUrisFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getResourceUrisFieldBuilder() {
            if (this.resourceUrisBuilder_ == null) {
               this.resourceUrisBuilder_ = new RepeatedFieldBuilder(this.resourceUris_, (this.bitField0_ & 32) == 32, this.getParentForChildren(), this.isClean());
               this.resourceUris_ = null;
            }

            return this.resourceUrisBuilder_;
         }
      }

      public interface ResourceUriOrBuilder extends MessageOrBuilder {
         boolean hasResourceType();

         ResourceUri.ResourceType getResourceType();

         boolean hasUri();

         String getUri();

         ByteString getUriBytes();
      }
   }

   public static final class MasterKey extends GeneratedMessage implements MasterKeyOrBuilder {
      private static final MasterKey defaultInstance = new MasterKey(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public MasterKey parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new MasterKey(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int MASTER_KEY_FIELD_NUMBER = 1;
      private Object masterKey_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private MasterKey(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private MasterKey(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static MasterKey getDefaultInstance() {
         return defaultInstance;
      }

      public MasterKey getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MasterKey(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.masterKey_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable.ensureFieldAccessorsInitialized(MasterKey.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasMasterKey() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getMasterKey() {
         Object ref = this.masterKey_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.masterKey_ = s;
            }

            return s;
         }
      }

      public ByteString getMasterKeyBytes() {
         Object ref = this.masterKey_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.masterKey_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.masterKey_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasMasterKey()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getMasterKeyBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getMasterKeyBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static MasterKey parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (MasterKey)PARSER.parseFrom(data);
      }

      public static MasterKey parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (MasterKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static MasterKey parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (MasterKey)PARSER.parseFrom(data);
      }

      public static MasterKey parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (MasterKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static MasterKey parseFrom(InputStream input) throws IOException {
         return (MasterKey)PARSER.parseFrom(input);
      }

      public static MasterKey parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (MasterKey)PARSER.parseFrom(input, extensionRegistry);
      }

      public static MasterKey parseDelimitedFrom(InputStream input) throws IOException {
         return (MasterKey)PARSER.parseDelimitedFrom(input);
      }

      public static MasterKey parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (MasterKey)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static MasterKey parseFrom(CodedInputStream input) throws IOException {
         return (MasterKey)PARSER.parseFrom(input);
      }

      public static MasterKey parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (MasterKey)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.MasterKey.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(MasterKey prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements MasterKeyOrBuilder {
         private int bitField0_;
         private Object masterKey_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable.ensureFieldAccessorsInitialized(MasterKey.class, Builder.class);
         }

         private Builder() {
            this.masterKey_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.masterKey_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.MasterKey.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.masterKey_ = "";
            this.bitField0_ &= -2;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor;
         }

         public MasterKey getDefaultInstanceForType() {
            return HbaseMetastoreProto.MasterKey.getDefaultInstance();
         }

         public MasterKey build() {
            MasterKey result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public MasterKey buildPartial() {
            MasterKey result = new MasterKey(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.masterKey_ = this.masterKey_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof MasterKey) {
               return this.mergeFrom((MasterKey)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(MasterKey other) {
            if (other == HbaseMetastoreProto.MasterKey.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasMasterKey()) {
                  this.bitField0_ |= 1;
                  this.masterKey_ = other.masterKey_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return this.hasMasterKey();
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            MasterKey parsedMessage = null;

            try {
               parsedMessage = (MasterKey)HbaseMetastoreProto.MasterKey.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (MasterKey)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasMasterKey() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getMasterKey() {
            Object ref = this.masterKey_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.masterKey_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getMasterKeyBytes() {
            Object ref = this.masterKey_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.masterKey_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setMasterKey(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.masterKey_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearMasterKey() {
            this.bitField0_ &= -2;
            this.masterKey_ = HbaseMetastoreProto.MasterKey.getDefaultInstance().getMasterKey();
            this.onChanged();
            return this;
         }

         public Builder setMasterKeyBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.masterKey_ = value;
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class ParameterEntry extends GeneratedMessage implements ParameterEntryOrBuilder {
      private static final ParameterEntry defaultInstance = new ParameterEntry(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public ParameterEntry parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ParameterEntry(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private Object key_;
      public static final int VALUE_FIELD_NUMBER = 2;
      private Object value_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private ParameterEntry(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private ParameterEntry(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static ParameterEntry getDefaultInstance() {
         return defaultInstance;
      }

      public ParameterEntry getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ParameterEntry(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.key_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.value_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(ParameterEntry.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasKey() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getKey() {
         Object ref = this.key_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.key_ = s;
            }

            return s;
         }
      }

      public ByteString getKeyBytes() {
         Object ref = this.key_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.key_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasValue() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getValue() {
         Object ref = this.value_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.value_ = s;
            }

            return s;
         }
      }

      public ByteString getValueBytes() {
         Object ref = this.value_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.value_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.key_ = "";
         this.value_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasKey()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasValue()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getKeyBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getValueBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getKeyBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getValueBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static ParameterEntry parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ParameterEntry)PARSER.parseFrom(data);
      }

      public static ParameterEntry parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ParameterEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ParameterEntry parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ParameterEntry)PARSER.parseFrom(data);
      }

      public static ParameterEntry parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ParameterEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ParameterEntry parseFrom(InputStream input) throws IOException {
         return (ParameterEntry)PARSER.parseFrom(input);
      }

      public static ParameterEntry parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ParameterEntry)PARSER.parseFrom(input, extensionRegistry);
      }

      public static ParameterEntry parseDelimitedFrom(InputStream input) throws IOException {
         return (ParameterEntry)PARSER.parseDelimitedFrom(input);
      }

      public static ParameterEntry parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ParameterEntry)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static ParameterEntry parseFrom(CodedInputStream input) throws IOException {
         return (ParameterEntry)PARSER.parseFrom(input);
      }

      public static ParameterEntry parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ParameterEntry)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.ParameterEntry.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(ParameterEntry prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements ParameterEntryOrBuilder {
         private int bitField0_;
         private Object key_;
         private Object value_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(ParameterEntry.class, Builder.class);
         }

         private Builder() {
            this.key_ = "";
            this.value_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.key_ = "";
            this.value_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.ParameterEntry.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.key_ = "";
            this.bitField0_ &= -2;
            this.value_ = "";
            this.bitField0_ &= -3;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor;
         }

         public ParameterEntry getDefaultInstanceForType() {
            return HbaseMetastoreProto.ParameterEntry.getDefaultInstance();
         }

         public ParameterEntry build() {
            ParameterEntry result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ParameterEntry buildPartial() {
            ParameterEntry result = new ParameterEntry(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.key_ = this.key_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.value_ = this.value_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ParameterEntry) {
               return this.mergeFrom((ParameterEntry)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ParameterEntry other) {
            if (other == HbaseMetastoreProto.ParameterEntry.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasKey()) {
                  this.bitField0_ |= 1;
                  this.key_ = other.key_;
                  this.onChanged();
               }

               if (other.hasValue()) {
                  this.bitField0_ |= 2;
                  this.value_ = other.value_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasKey()) {
               return false;
            } else {
               return this.hasValue();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ParameterEntry parsedMessage = null;

            try {
               parsedMessage = (ParameterEntry)HbaseMetastoreProto.ParameterEntry.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ParameterEntry)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasKey() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getKey() {
            Object ref = this.key_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.key_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getKeyBytes() {
            Object ref = this.key_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.key_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setKey(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.key_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearKey() {
            this.bitField0_ &= -2;
            this.key_ = HbaseMetastoreProto.ParameterEntry.getDefaultInstance().getKey();
            this.onChanged();
            return this;
         }

         public Builder setKeyBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.key_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasValue() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getValue() {
            Object ref = this.value_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.value_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getValueBytes() {
            Object ref = this.value_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.value_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setValue(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.value_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearValue() {
            this.bitField0_ &= -3;
            this.value_ = HbaseMetastoreProto.ParameterEntry.getDefaultInstance().getValue();
            this.onChanged();
            return this;
         }

         public Builder setValueBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.value_ = value;
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class Parameters extends GeneratedMessage implements ParametersOrBuilder {
      private static final Parameters defaultInstance = new Parameters(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Parameters parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Parameters(input, extensionRegistry);
         }
      };
      public static final int PARAMETER_FIELD_NUMBER = 1;
      private List parameter_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Parameters(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Parameters(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Parameters getDefaultInstance() {
         return defaultInstance;
      }

      public Parameters getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Parameters(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.parameter_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.parameter_.add(input.readMessage(HbaseMetastoreProto.ParameterEntry.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.parameter_ = Collections.unmodifiableList(this.parameter_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable.ensureFieldAccessorsInitialized(Parameters.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getParameterList() {
         return this.parameter_;
      }

      public List getParameterOrBuilderList() {
         return this.parameter_;
      }

      public int getParameterCount() {
         return this.parameter_.size();
      }

      public ParameterEntry getParameter(int index) {
         return (ParameterEntry)this.parameter_.get(index);
      }

      public ParameterEntryOrBuilder getParameterOrBuilder(int index) {
         return (ParameterEntryOrBuilder)this.parameter_.get(index);
      }

      private void initFields() {
         this.parameter_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getParameterCount(); ++i) {
               if (!this.getParameter(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.parameter_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.parameter_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.parameter_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.parameter_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Parameters parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Parameters)PARSER.parseFrom(data);
      }

      public static Parameters parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Parameters)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Parameters parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Parameters)PARSER.parseFrom(data);
      }

      public static Parameters parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Parameters)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Parameters parseFrom(InputStream input) throws IOException {
         return (Parameters)PARSER.parseFrom(input);
      }

      public static Parameters parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Parameters)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Parameters parseDelimitedFrom(InputStream input) throws IOException {
         return (Parameters)PARSER.parseDelimitedFrom(input);
      }

      public static Parameters parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Parameters)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Parameters parseFrom(CodedInputStream input) throws IOException {
         return (Parameters)PARSER.parseFrom(input);
      }

      public static Parameters parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Parameters)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Parameters.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Parameters prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements ParametersOrBuilder {
         private int bitField0_;
         private List parameter_;
         private RepeatedFieldBuilder parameterBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable.ensureFieldAccessorsInitialized(Parameters.class, Builder.class);
         }

         private Builder() {
            this.parameter_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.parameter_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Parameters.alwaysUseFieldBuilders) {
               this.getParameterFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.parameterBuilder_ == null) {
               this.parameter_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.parameterBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor;
         }

         public Parameters getDefaultInstanceForType() {
            return HbaseMetastoreProto.Parameters.getDefaultInstance();
         }

         public Parameters build() {
            Parameters result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Parameters buildPartial() {
            Parameters result = new Parameters(this);
            int from_bitField0_ = this.bitField0_;
            if (this.parameterBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.parameter_ = Collections.unmodifiableList(this.parameter_);
                  this.bitField0_ &= -2;
               }

               result.parameter_ = this.parameter_;
            } else {
               result.parameter_ = this.parameterBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Parameters) {
               return this.mergeFrom((Parameters)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Parameters other) {
            if (other == HbaseMetastoreProto.Parameters.getDefaultInstance()) {
               return this;
            } else {
               if (this.parameterBuilder_ == null) {
                  if (!other.parameter_.isEmpty()) {
                     if (this.parameter_.isEmpty()) {
                        this.parameter_ = other.parameter_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureParameterIsMutable();
                        this.parameter_.addAll(other.parameter_);
                     }

                     this.onChanged();
                  }
               } else if (!other.parameter_.isEmpty()) {
                  if (this.parameterBuilder_.isEmpty()) {
                     this.parameterBuilder_.dispose();
                     this.parameterBuilder_ = null;
                     this.parameter_ = other.parameter_;
                     this.bitField0_ &= -2;
                     this.parameterBuilder_ = HbaseMetastoreProto.Parameters.alwaysUseFieldBuilders ? this.getParameterFieldBuilder() : null;
                  } else {
                     this.parameterBuilder_.addAllMessages(other.parameter_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getParameterCount(); ++i) {
               if (!this.getParameter(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Parameters parsedMessage = null;

            try {
               parsedMessage = (Parameters)HbaseMetastoreProto.Parameters.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Parameters)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureParameterIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.parameter_ = new ArrayList(this.parameter_);
               this.bitField0_ |= 1;
            }

         }

         public List getParameterList() {
            return this.parameterBuilder_ == null ? Collections.unmodifiableList(this.parameter_) : this.parameterBuilder_.getMessageList();
         }

         public int getParameterCount() {
            return this.parameterBuilder_ == null ? this.parameter_.size() : this.parameterBuilder_.getCount();
         }

         public ParameterEntry getParameter(int index) {
            return this.parameterBuilder_ == null ? (ParameterEntry)this.parameter_.get(index) : (ParameterEntry)this.parameterBuilder_.getMessage(index);
         }

         public Builder setParameter(int index, ParameterEntry value) {
            if (this.parameterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureParameterIsMutable();
               this.parameter_.set(index, value);
               this.onChanged();
            } else {
               this.parameterBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setParameter(int index, ParameterEntry.Builder builderForValue) {
            if (this.parameterBuilder_ == null) {
               this.ensureParameterIsMutable();
               this.parameter_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.parameterBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addParameter(ParameterEntry value) {
            if (this.parameterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureParameterIsMutable();
               this.parameter_.add(value);
               this.onChanged();
            } else {
               this.parameterBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addParameter(int index, ParameterEntry value) {
            if (this.parameterBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureParameterIsMutable();
               this.parameter_.add(index, value);
               this.onChanged();
            } else {
               this.parameterBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addParameter(ParameterEntry.Builder builderForValue) {
            if (this.parameterBuilder_ == null) {
               this.ensureParameterIsMutable();
               this.parameter_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.parameterBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addParameter(int index, ParameterEntry.Builder builderForValue) {
            if (this.parameterBuilder_ == null) {
               this.ensureParameterIsMutable();
               this.parameter_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.parameterBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllParameter(Iterable values) {
            if (this.parameterBuilder_ == null) {
               this.ensureParameterIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.parameter_);
               this.onChanged();
            } else {
               this.parameterBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearParameter() {
            if (this.parameterBuilder_ == null) {
               this.parameter_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.parameterBuilder_.clear();
            }

            return this;
         }

         public Builder removeParameter(int index) {
            if (this.parameterBuilder_ == null) {
               this.ensureParameterIsMutable();
               this.parameter_.remove(index);
               this.onChanged();
            } else {
               this.parameterBuilder_.remove(index);
            }

            return this;
         }

         public ParameterEntry.Builder getParameterBuilder(int index) {
            return (ParameterEntry.Builder)this.getParameterFieldBuilder().getBuilder(index);
         }

         public ParameterEntryOrBuilder getParameterOrBuilder(int index) {
            return this.parameterBuilder_ == null ? (ParameterEntryOrBuilder)this.parameter_.get(index) : (ParameterEntryOrBuilder)this.parameterBuilder_.getMessageOrBuilder(index);
         }

         public List getParameterOrBuilderList() {
            return this.parameterBuilder_ != null ? this.parameterBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.parameter_);
         }

         public ParameterEntry.Builder addParameterBuilder() {
            return (ParameterEntry.Builder)this.getParameterFieldBuilder().addBuilder(HbaseMetastoreProto.ParameterEntry.getDefaultInstance());
         }

         public ParameterEntry.Builder addParameterBuilder(int index) {
            return (ParameterEntry.Builder)this.getParameterFieldBuilder().addBuilder(index, HbaseMetastoreProto.ParameterEntry.getDefaultInstance());
         }

         public List getParameterBuilderList() {
            return this.getParameterFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getParameterFieldBuilder() {
            if (this.parameterBuilder_ == null) {
               this.parameterBuilder_ = new RepeatedFieldBuilder(this.parameter_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.parameter_ = null;
            }

            return this.parameterBuilder_;
         }
      }
   }

   public static final class Partition extends GeneratedMessage implements PartitionOrBuilder {
      private static final Partition defaultInstance = new Partition(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Partition parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Partition(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int CREATE_TIME_FIELD_NUMBER = 1;
      private long createTime_;
      public static final int LAST_ACCESS_TIME_FIELD_NUMBER = 2;
      private long lastAccessTime_;
      public static final int LOCATION_FIELD_NUMBER = 3;
      private Object location_;
      public static final int SD_PARAMETERS_FIELD_NUMBER = 4;
      private Parameters sdParameters_;
      public static final int SD_HASH_FIELD_NUMBER = 5;
      private ByteString sdHash_;
      public static final int PARAMETERS_FIELD_NUMBER = 6;
      private Parameters parameters_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Partition(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Partition(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Partition getDefaultInstance() {
         return defaultInstance;
      }

      public Partition getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Partition(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.createTime_ = input.readInt64();
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.lastAccessTime_ = input.readInt64();
                     break;
                  case 26:
                     this.bitField0_ |= 4;
                     this.location_ = input.readBytes();
                     break;
                  case 34:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 8) == 8) {
                        subBuilder = this.sdParameters_.toBuilder();
                     }

                     this.sdParameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.sdParameters_);
                        this.sdParameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 8;
                     break;
                  case 42:
                     this.bitField0_ |= 16;
                     this.sdHash_ = input.readBytes();
                     break;
                  case 50:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 32) == 32) {
                        subBuilder = this.parameters_.toBuilder();
                     }

                     this.parameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.parameters_);
                        this.parameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 32;
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable.ensureFieldAccessorsInitialized(Partition.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 1) == 1;
      }

      public long getCreateTime() {
         return this.createTime_;
      }

      public boolean hasLastAccessTime() {
         return (this.bitField0_ & 2) == 2;
      }

      public long getLastAccessTime() {
         return this.lastAccessTime_;
      }

      public boolean hasLocation() {
         return (this.bitField0_ & 4) == 4;
      }

      public String getLocation() {
         Object ref = this.location_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.location_ = s;
            }

            return s;
         }
      }

      public ByteString getLocationBytes() {
         Object ref = this.location_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.location_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSdParameters() {
         return (this.bitField0_ & 8) == 8;
      }

      public Parameters getSdParameters() {
         return this.sdParameters_;
      }

      public ParametersOrBuilder getSdParametersOrBuilder() {
         return this.sdParameters_;
      }

      public boolean hasSdHash() {
         return (this.bitField0_ & 16) == 16;
      }

      public ByteString getSdHash() {
         return this.sdHash_;
      }

      public boolean hasParameters() {
         return (this.bitField0_ & 32) == 32;
      }

      public Parameters getParameters() {
         return this.parameters_;
      }

      public ParametersOrBuilder getParametersOrBuilder() {
         return this.parameters_;
      }

      private void initFields() {
         this.createTime_ = 0L;
         this.lastAccessTime_ = 0L;
         this.location_ = "";
         this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.sdHash_ = ByteString.EMPTY;
         this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasSdHash()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasParameters() && !this.getParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeInt64(1, this.createTime_);
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeInt64(2, this.lastAccessTime_);
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBytes(3, this.getLocationBytes());
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeMessage(4, this.sdParameters_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeBytes(5, this.sdHash_);
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeMessage(6, this.parameters_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeInt64Size(1, this.createTime_);
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeInt64Size(2, this.lastAccessTime_);
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBytesSize(3, this.getLocationBytes());
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeMessageSize(4, this.sdParameters_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeBytesSize(5, this.sdHash_);
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeMessageSize(6, this.parameters_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Partition parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Partition)PARSER.parseFrom(data);
      }

      public static Partition parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Partition)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Partition parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Partition)PARSER.parseFrom(data);
      }

      public static Partition parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Partition)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Partition parseFrom(InputStream input) throws IOException {
         return (Partition)PARSER.parseFrom(input);
      }

      public static Partition parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Partition)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Partition parseDelimitedFrom(InputStream input) throws IOException {
         return (Partition)PARSER.parseDelimitedFrom(input);
      }

      public static Partition parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Partition)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Partition parseFrom(CodedInputStream input) throws IOException {
         return (Partition)PARSER.parseFrom(input);
      }

      public static Partition parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Partition)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Partition.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Partition prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements PartitionOrBuilder {
         private int bitField0_;
         private long createTime_;
         private long lastAccessTime_;
         private Object location_;
         private Parameters sdParameters_;
         private SingleFieldBuilder sdParametersBuilder_;
         private ByteString sdHash_;
         private Parameters parameters_;
         private SingleFieldBuilder parametersBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable.ensureFieldAccessorsInitialized(Partition.class, Builder.class);
         }

         private Builder() {
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.sdHash_ = ByteString.EMPTY;
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.sdHash_ = ByteString.EMPTY;
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Partition.alwaysUseFieldBuilders) {
               this.getSdParametersFieldBuilder();
               this.getParametersFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.createTime_ = 0L;
            this.bitField0_ &= -2;
            this.lastAccessTime_ = 0L;
            this.bitField0_ &= -3;
            this.location_ = "";
            this.bitField0_ &= -5;
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -9;
            this.sdHash_ = ByteString.EMPTY;
            this.bitField0_ &= -17;
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor;
         }

         public Partition getDefaultInstanceForType() {
            return HbaseMetastoreProto.Partition.getDefaultInstance();
         }

         public Partition build() {
            Partition result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Partition buildPartial() {
            Partition result = new Partition(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.lastAccessTime_ = this.lastAccessTime_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.location_ = this.location_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            if (this.sdParametersBuilder_ == null) {
               result.sdParameters_ = this.sdParameters_;
            } else {
               result.sdParameters_ = (Parameters)this.sdParametersBuilder_.build();
            }

            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.sdHash_ = this.sdHash_;
            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            if (this.parametersBuilder_ == null) {
               result.parameters_ = this.parameters_;
            } else {
               result.parameters_ = (Parameters)this.parametersBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Partition) {
               return this.mergeFrom((Partition)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Partition other) {
            if (other == HbaseMetastoreProto.Partition.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasLastAccessTime()) {
                  this.setLastAccessTime(other.getLastAccessTime());
               }

               if (other.hasLocation()) {
                  this.bitField0_ |= 4;
                  this.location_ = other.location_;
                  this.onChanged();
               }

               if (other.hasSdParameters()) {
                  this.mergeSdParameters(other.getSdParameters());
               }

               if (other.hasSdHash()) {
                  this.setSdHash(other.getSdHash());
               }

               if (other.hasParameters()) {
                  this.mergeParameters(other.getParameters());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasSdHash()) {
               return false;
            } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
               return false;
            } else {
               return !this.hasParameters() || this.getParameters().isInitialized();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Partition parsedMessage = null;

            try {
               parsedMessage = (Partition)HbaseMetastoreProto.Partition.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Partition)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(long value) {
            this.bitField0_ |= 1;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -2;
            this.createTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasLastAccessTime() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getLastAccessTime() {
            return this.lastAccessTime_;
         }

         public Builder setLastAccessTime(long value) {
            this.bitField0_ |= 2;
            this.lastAccessTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearLastAccessTime() {
            this.bitField0_ &= -3;
            this.lastAccessTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasLocation() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getLocation() {
            Object ref = this.location_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.location_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getLocationBytes() {
            Object ref = this.location_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.location_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setLocation(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearLocation() {
            this.bitField0_ &= -5;
            this.location_ = HbaseMetastoreProto.Partition.getDefaultInstance().getLocation();
            this.onChanged();
            return this;
         }

         public Builder setLocationBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSdParameters() {
            return (this.bitField0_ & 8) == 8;
         }

         public Parameters getSdParameters() {
            return this.sdParametersBuilder_ == null ? this.sdParameters_ : (Parameters)this.sdParametersBuilder_.getMessage();
         }

         public Builder setSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.sdParameters_ = value;
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder setSdParameters(Parameters.Builder builderForValue) {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder mergeSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if ((this.bitField0_ & 8) == 8 && this.sdParameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.sdParameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.sdParameters_).mergeFrom(value).buildPartial();
               } else {
                  this.sdParameters_ = value;
               }

               this.onChanged();
            } else {
               this.sdParametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public Builder clearSdParameters() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -9;
            return this;
         }

         public Parameters.Builder getSdParametersBuilder() {
            this.bitField0_ |= 8;
            this.onChanged();
            return (Parameters.Builder)this.getSdParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getSdParametersOrBuilder() {
            return (ParametersOrBuilder)(this.sdParametersBuilder_ != null ? (ParametersOrBuilder)this.sdParametersBuilder_.getMessageOrBuilder() : this.sdParameters_);
         }

         private SingleFieldBuilder getSdParametersFieldBuilder() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParametersBuilder_ = new SingleFieldBuilder(this.sdParameters_, this.getParentForChildren(), this.isClean());
               this.sdParameters_ = null;
            }

            return this.sdParametersBuilder_;
         }

         public boolean hasSdHash() {
            return (this.bitField0_ & 16) == 16;
         }

         public ByteString getSdHash() {
            return this.sdHash_;
         }

         public Builder setSdHash(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.sdHash_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearSdHash() {
            this.bitField0_ &= -17;
            this.sdHash_ = HbaseMetastoreProto.Partition.getDefaultInstance().getSdHash();
            this.onChanged();
            return this;
         }

         public boolean hasParameters() {
            return (this.bitField0_ & 32) == 32;
         }

         public Parameters getParameters() {
            return this.parametersBuilder_ == null ? this.parameters_ : (Parameters)this.parametersBuilder_.getMessage();
         }

         public Builder setParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.parameters_ = value;
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder setParameters(Parameters.Builder builderForValue) {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder mergeParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if ((this.bitField0_ & 32) == 32 && this.parameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.parameters_).mergeFrom(value).buildPartial();
               } else {
                  this.parameters_ = value;
               }

               this.onChanged();
            } else {
               this.parametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder clearParameters() {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public Parameters.Builder getParametersBuilder() {
            this.bitField0_ |= 32;
            this.onChanged();
            return (Parameters.Builder)this.getParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getParametersOrBuilder() {
            return (ParametersOrBuilder)(this.parametersBuilder_ != null ? (ParametersOrBuilder)this.parametersBuilder_.getMessageOrBuilder() : this.parameters_);
         }

         private SingleFieldBuilder getParametersFieldBuilder() {
            if (this.parametersBuilder_ == null) {
               this.parametersBuilder_ = new SingleFieldBuilder(this.parameters_, this.getParentForChildren(), this.isClean());
               this.parameters_ = null;
            }

            return this.parametersBuilder_;
         }
      }
   }

   public static final class PrincipalPrivilegeSetEntry extends GeneratedMessage implements PrincipalPrivilegeSetEntryOrBuilder {
      private static final PrincipalPrivilegeSetEntry defaultInstance = new PrincipalPrivilegeSetEntry(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public PrincipalPrivilegeSetEntry parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PrincipalPrivilegeSetEntry(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int PRINCIPAL_NAME_FIELD_NUMBER = 1;
      private Object principalName_;
      public static final int PRIVILEGES_FIELD_NUMBER = 2;
      private List privileges_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private PrincipalPrivilegeSetEntry(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private PrincipalPrivilegeSetEntry(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static PrincipalPrivilegeSetEntry getDefaultInstance() {
         return defaultInstance;
      }

      public PrincipalPrivilegeSetEntry getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PrincipalPrivilegeSetEntry(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.principalName_ = input.readBytes();
                     break;
                  case 18:
                     if ((mutable_bitField0_ & 2) != 2) {
                        this.privileges_ = new ArrayList();
                        mutable_bitField0_ |= 2;
                     }

                     this.privileges_.add(input.readMessage(HbaseMetastoreProto.PrivilegeGrantInfo.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 2) == 2) {
               this.privileges_ = Collections.unmodifiableList(this.privileges_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(PrincipalPrivilegeSetEntry.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasPrincipalName() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getPrincipalName() {
         Object ref = this.principalName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.principalName_ = s;
            }

            return s;
         }
      }

      public ByteString getPrincipalNameBytes() {
         Object ref = this.principalName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.principalName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public List getPrivilegesList() {
         return this.privileges_;
      }

      public List getPrivilegesOrBuilderList() {
         return this.privileges_;
      }

      public int getPrivilegesCount() {
         return this.privileges_.size();
      }

      public PrivilegeGrantInfo getPrivileges(int index) {
         return (PrivilegeGrantInfo)this.privileges_.get(index);
      }

      public PrivilegeGrantInfoOrBuilder getPrivilegesOrBuilder(int index) {
         return (PrivilegeGrantInfoOrBuilder)this.privileges_.get(index);
      }

      private void initFields() {
         this.principalName_ = "";
         this.privileges_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasPrincipalName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getPrincipalNameBytes());
         }

         for(int i = 0; i < this.privileges_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.privileges_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getPrincipalNameBytes());
            }

            for(int i = 0; i < this.privileges_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.privileges_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static PrincipalPrivilegeSetEntry parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(data);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(data);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(InputStream input) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(input);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(input, extensionRegistry);
      }

      public static PrincipalPrivilegeSetEntry parseDelimitedFrom(InputStream input) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseDelimitedFrom(input);
      }

      public static PrincipalPrivilegeSetEntry parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(CodedInputStream input) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(input);
      }

      public static PrincipalPrivilegeSetEntry parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSetEntry)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.PrincipalPrivilegeSetEntry.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(PrincipalPrivilegeSetEntry prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements PrincipalPrivilegeSetEntryOrBuilder {
         private int bitField0_;
         private Object principalName_;
         private List privileges_;
         private RepeatedFieldBuilder privilegesBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(PrincipalPrivilegeSetEntry.class, Builder.class);
         }

         private Builder() {
            this.principalName_ = "";
            this.privileges_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.principalName_ = "";
            this.privileges_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.PrincipalPrivilegeSetEntry.alwaysUseFieldBuilders) {
               this.getPrivilegesFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.principalName_ = "";
            this.bitField0_ &= -2;
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.privilegesBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor;
         }

         public PrincipalPrivilegeSetEntry getDefaultInstanceForType() {
            return HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance();
         }

         public PrincipalPrivilegeSetEntry build() {
            PrincipalPrivilegeSetEntry result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PrincipalPrivilegeSetEntry buildPartial() {
            PrincipalPrivilegeSetEntry result = new PrincipalPrivilegeSetEntry(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.principalName_ = this.principalName_;
            if (this.privilegesBuilder_ == null) {
               if ((this.bitField0_ & 2) == 2) {
                  this.privileges_ = Collections.unmodifiableList(this.privileges_);
                  this.bitField0_ &= -3;
               }

               result.privileges_ = this.privileges_;
            } else {
               result.privileges_ = this.privilegesBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PrincipalPrivilegeSetEntry) {
               return this.mergeFrom((PrincipalPrivilegeSetEntry)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PrincipalPrivilegeSetEntry other) {
            if (other == HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPrincipalName()) {
                  this.bitField0_ |= 1;
                  this.principalName_ = other.principalName_;
                  this.onChanged();
               }

               if (this.privilegesBuilder_ == null) {
                  if (!other.privileges_.isEmpty()) {
                     if (this.privileges_.isEmpty()) {
                        this.privileges_ = other.privileges_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensurePrivilegesIsMutable();
                        this.privileges_.addAll(other.privileges_);
                     }

                     this.onChanged();
                  }
               } else if (!other.privileges_.isEmpty()) {
                  if (this.privilegesBuilder_.isEmpty()) {
                     this.privilegesBuilder_.dispose();
                     this.privilegesBuilder_ = null;
                     this.privileges_ = other.privileges_;
                     this.bitField0_ &= -3;
                     this.privilegesBuilder_ = HbaseMetastoreProto.PrincipalPrivilegeSetEntry.alwaysUseFieldBuilders ? this.getPrivilegesFieldBuilder() : null;
                  } else {
                     this.privilegesBuilder_.addAllMessages(other.privileges_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return this.hasPrincipalName();
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PrincipalPrivilegeSetEntry parsedMessage = null;

            try {
               parsedMessage = (PrincipalPrivilegeSetEntry)HbaseMetastoreProto.PrincipalPrivilegeSetEntry.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PrincipalPrivilegeSetEntry)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPrincipalName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getPrincipalName() {
            Object ref = this.principalName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.principalName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getPrincipalNameBytes() {
            Object ref = this.principalName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.principalName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setPrincipalName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.principalName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearPrincipalName() {
            this.bitField0_ &= -2;
            this.principalName_ = HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance().getPrincipalName();
            this.onChanged();
            return this;
         }

         public Builder setPrincipalNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.principalName_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensurePrivilegesIsMutable() {
            if ((this.bitField0_ & 2) != 2) {
               this.privileges_ = new ArrayList(this.privileges_);
               this.bitField0_ |= 2;
            }

         }

         public List getPrivilegesList() {
            return this.privilegesBuilder_ == null ? Collections.unmodifiableList(this.privileges_) : this.privilegesBuilder_.getMessageList();
         }

         public int getPrivilegesCount() {
            return this.privilegesBuilder_ == null ? this.privileges_.size() : this.privilegesBuilder_.getCount();
         }

         public PrivilegeGrantInfo getPrivileges(int index) {
            return this.privilegesBuilder_ == null ? (PrivilegeGrantInfo)this.privileges_.get(index) : (PrivilegeGrantInfo)this.privilegesBuilder_.getMessage(index);
         }

         public Builder setPrivileges(int index, PrivilegeGrantInfo value) {
            if (this.privilegesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePrivilegesIsMutable();
               this.privileges_.set(index, value);
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setPrivileges(int index, PrivilegeGrantInfo.Builder builderForValue) {
            if (this.privilegesBuilder_ == null) {
               this.ensurePrivilegesIsMutable();
               this.privileges_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addPrivileges(PrivilegeGrantInfo value) {
            if (this.privilegesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePrivilegesIsMutable();
               this.privileges_.add(value);
               this.onChanged();
            } else {
               this.privilegesBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addPrivileges(int index, PrivilegeGrantInfo value) {
            if (this.privilegesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePrivilegesIsMutable();
               this.privileges_.add(index, value);
               this.onChanged();
            } else {
               this.privilegesBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addPrivileges(PrivilegeGrantInfo.Builder builderForValue) {
            if (this.privilegesBuilder_ == null) {
               this.ensurePrivilegesIsMutable();
               this.privileges_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.privilegesBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addPrivileges(int index, PrivilegeGrantInfo.Builder builderForValue) {
            if (this.privilegesBuilder_ == null) {
               this.ensurePrivilegesIsMutable();
               this.privileges_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.privilegesBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllPrivileges(Iterable values) {
            if (this.privilegesBuilder_ == null) {
               this.ensurePrivilegesIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.privileges_);
               this.onChanged();
            } else {
               this.privilegesBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearPrivileges() {
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.privilegesBuilder_.clear();
            }

            return this;
         }

         public Builder removePrivileges(int index) {
            if (this.privilegesBuilder_ == null) {
               this.ensurePrivilegesIsMutable();
               this.privileges_.remove(index);
               this.onChanged();
            } else {
               this.privilegesBuilder_.remove(index);
            }

            return this;
         }

         public PrivilegeGrantInfo.Builder getPrivilegesBuilder(int index) {
            return (PrivilegeGrantInfo.Builder)this.getPrivilegesFieldBuilder().getBuilder(index);
         }

         public PrivilegeGrantInfoOrBuilder getPrivilegesOrBuilder(int index) {
            return this.privilegesBuilder_ == null ? (PrivilegeGrantInfoOrBuilder)this.privileges_.get(index) : (PrivilegeGrantInfoOrBuilder)this.privilegesBuilder_.getMessageOrBuilder(index);
         }

         public List getPrivilegesOrBuilderList() {
            return this.privilegesBuilder_ != null ? this.privilegesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.privileges_);
         }

         public PrivilegeGrantInfo.Builder addPrivilegesBuilder() {
            return (PrivilegeGrantInfo.Builder)this.getPrivilegesFieldBuilder().addBuilder(HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance());
         }

         public PrivilegeGrantInfo.Builder addPrivilegesBuilder(int index) {
            return (PrivilegeGrantInfo.Builder)this.getPrivilegesFieldBuilder().addBuilder(index, HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance());
         }

         public List getPrivilegesBuilderList() {
            return this.getPrivilegesFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getPrivilegesFieldBuilder() {
            if (this.privilegesBuilder_ == null) {
               this.privilegesBuilder_ = new RepeatedFieldBuilder(this.privileges_, (this.bitField0_ & 2) == 2, this.getParentForChildren(), this.isClean());
               this.privileges_ = null;
            }

            return this.privilegesBuilder_;
         }
      }
   }

   public static final class PrincipalPrivilegeSet extends GeneratedMessage implements PrincipalPrivilegeSetOrBuilder {
      private static final PrincipalPrivilegeSet defaultInstance = new PrincipalPrivilegeSet(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public PrincipalPrivilegeSet parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PrincipalPrivilegeSet(input, extensionRegistry);
         }
      };
      public static final int USERS_FIELD_NUMBER = 1;
      private List users_;
      public static final int ROLES_FIELD_NUMBER = 2;
      private List roles_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private PrincipalPrivilegeSet(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private PrincipalPrivilegeSet(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static PrincipalPrivilegeSet getDefaultInstance() {
         return defaultInstance;
      }

      public PrincipalPrivilegeSet getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PrincipalPrivilegeSet(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.users_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.users_.add(input.readMessage(HbaseMetastoreProto.PrincipalPrivilegeSetEntry.PARSER, extensionRegistry));
                     break;
                  case 18:
                     if ((mutable_bitField0_ & 2) != 2) {
                        this.roles_ = new ArrayList();
                        mutable_bitField0_ |= 2;
                     }

                     this.roles_.add(input.readMessage(HbaseMetastoreProto.PrincipalPrivilegeSetEntry.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.users_ = Collections.unmodifiableList(this.users_);
            }

            if ((mutable_bitField0_ & 2) == 2) {
               this.roles_ = Collections.unmodifiableList(this.roles_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable.ensureFieldAccessorsInitialized(PrincipalPrivilegeSet.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getUsersList() {
         return this.users_;
      }

      public List getUsersOrBuilderList() {
         return this.users_;
      }

      public int getUsersCount() {
         return this.users_.size();
      }

      public PrincipalPrivilegeSetEntry getUsers(int index) {
         return (PrincipalPrivilegeSetEntry)this.users_.get(index);
      }

      public PrincipalPrivilegeSetEntryOrBuilder getUsersOrBuilder(int index) {
         return (PrincipalPrivilegeSetEntryOrBuilder)this.users_.get(index);
      }

      public List getRolesList() {
         return this.roles_;
      }

      public List getRolesOrBuilderList() {
         return this.roles_;
      }

      public int getRolesCount() {
         return this.roles_.size();
      }

      public PrincipalPrivilegeSetEntry getRoles(int index) {
         return (PrincipalPrivilegeSetEntry)this.roles_.get(index);
      }

      public PrincipalPrivilegeSetEntryOrBuilder getRolesOrBuilder(int index) {
         return (PrincipalPrivilegeSetEntryOrBuilder)this.roles_.get(index);
      }

      private void initFields() {
         this.users_ = Collections.emptyList();
         this.roles_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getUsersCount(); ++i) {
               if (!this.getUsers(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getRolesCount(); ++i) {
               if (!this.getRoles(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.users_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.users_.get(i));
         }

         for(int i = 0; i < this.roles_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.roles_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.users_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.users_.get(i));
            }

            for(int i = 0; i < this.roles_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.roles_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static PrincipalPrivilegeSet parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(data);
      }

      public static PrincipalPrivilegeSet parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrincipalPrivilegeSet parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(data);
      }

      public static PrincipalPrivilegeSet parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrincipalPrivilegeSet parseFrom(InputStream input) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(input);
      }

      public static PrincipalPrivilegeSet parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(input, extensionRegistry);
      }

      public static PrincipalPrivilegeSet parseDelimitedFrom(InputStream input) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseDelimitedFrom(input);
      }

      public static PrincipalPrivilegeSet parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static PrincipalPrivilegeSet parseFrom(CodedInputStream input) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(input);
      }

      public static PrincipalPrivilegeSet parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrincipalPrivilegeSet)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.PrincipalPrivilegeSet.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(PrincipalPrivilegeSet prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements PrincipalPrivilegeSetOrBuilder {
         private int bitField0_;
         private List users_;
         private RepeatedFieldBuilder usersBuilder_;
         private List roles_;
         private RepeatedFieldBuilder rolesBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable.ensureFieldAccessorsInitialized(PrincipalPrivilegeSet.class, Builder.class);
         }

         private Builder() {
            this.users_ = Collections.emptyList();
            this.roles_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.users_ = Collections.emptyList();
            this.roles_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.PrincipalPrivilegeSet.alwaysUseFieldBuilders) {
               this.getUsersFieldBuilder();
               this.getRolesFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.usersBuilder_ == null) {
               this.users_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.usersBuilder_.clear();
            }

            if (this.rolesBuilder_ == null) {
               this.roles_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.rolesBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor;
         }

         public PrincipalPrivilegeSet getDefaultInstanceForType() {
            return HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
         }

         public PrincipalPrivilegeSet build() {
            PrincipalPrivilegeSet result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PrincipalPrivilegeSet buildPartial() {
            PrincipalPrivilegeSet result = new PrincipalPrivilegeSet(this);
            int from_bitField0_ = this.bitField0_;
            if (this.usersBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.users_ = Collections.unmodifiableList(this.users_);
                  this.bitField0_ &= -2;
               }

               result.users_ = this.users_;
            } else {
               result.users_ = this.usersBuilder_.build();
            }

            if (this.rolesBuilder_ == null) {
               if ((this.bitField0_ & 2) == 2) {
                  this.roles_ = Collections.unmodifiableList(this.roles_);
                  this.bitField0_ &= -3;
               }

               result.roles_ = this.roles_;
            } else {
               result.roles_ = this.rolesBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PrincipalPrivilegeSet) {
               return this.mergeFrom((PrincipalPrivilegeSet)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PrincipalPrivilegeSet other) {
            if (other == HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance()) {
               return this;
            } else {
               if (this.usersBuilder_ == null) {
                  if (!other.users_.isEmpty()) {
                     if (this.users_.isEmpty()) {
                        this.users_ = other.users_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureUsersIsMutable();
                        this.users_.addAll(other.users_);
                     }

                     this.onChanged();
                  }
               } else if (!other.users_.isEmpty()) {
                  if (this.usersBuilder_.isEmpty()) {
                     this.usersBuilder_.dispose();
                     this.usersBuilder_ = null;
                     this.users_ = other.users_;
                     this.bitField0_ &= -2;
                     this.usersBuilder_ = HbaseMetastoreProto.PrincipalPrivilegeSet.alwaysUseFieldBuilders ? this.getUsersFieldBuilder() : null;
                  } else {
                     this.usersBuilder_.addAllMessages(other.users_);
                  }
               }

               if (this.rolesBuilder_ == null) {
                  if (!other.roles_.isEmpty()) {
                     if (this.roles_.isEmpty()) {
                        this.roles_ = other.roles_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureRolesIsMutable();
                        this.roles_.addAll(other.roles_);
                     }

                     this.onChanged();
                  }
               } else if (!other.roles_.isEmpty()) {
                  if (this.rolesBuilder_.isEmpty()) {
                     this.rolesBuilder_.dispose();
                     this.rolesBuilder_ = null;
                     this.roles_ = other.roles_;
                     this.bitField0_ &= -3;
                     this.rolesBuilder_ = HbaseMetastoreProto.PrincipalPrivilegeSet.alwaysUseFieldBuilders ? this.getRolesFieldBuilder() : null;
                  } else {
                     this.rolesBuilder_.addAllMessages(other.roles_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getUsersCount(); ++i) {
               if (!this.getUsers(i).isInitialized()) {
                  return false;
               }
            }

            for(int i = 0; i < this.getRolesCount(); ++i) {
               if (!this.getRoles(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PrincipalPrivilegeSet parsedMessage = null;

            try {
               parsedMessage = (PrincipalPrivilegeSet)HbaseMetastoreProto.PrincipalPrivilegeSet.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PrincipalPrivilegeSet)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureUsersIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.users_ = new ArrayList(this.users_);
               this.bitField0_ |= 1;
            }

         }

         public List getUsersList() {
            return this.usersBuilder_ == null ? Collections.unmodifiableList(this.users_) : this.usersBuilder_.getMessageList();
         }

         public int getUsersCount() {
            return this.usersBuilder_ == null ? this.users_.size() : this.usersBuilder_.getCount();
         }

         public PrincipalPrivilegeSetEntry getUsers(int index) {
            return this.usersBuilder_ == null ? (PrincipalPrivilegeSetEntry)this.users_.get(index) : (PrincipalPrivilegeSetEntry)this.usersBuilder_.getMessage(index);
         }

         public Builder setUsers(int index, PrincipalPrivilegeSetEntry value) {
            if (this.usersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUsersIsMutable();
               this.users_.set(index, value);
               this.onChanged();
            } else {
               this.usersBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setUsers(int index, PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.usersBuilder_ == null) {
               this.ensureUsersIsMutable();
               this.users_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.usersBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addUsers(PrincipalPrivilegeSetEntry value) {
            if (this.usersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUsersIsMutable();
               this.users_.add(value);
               this.onChanged();
            } else {
               this.usersBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addUsers(int index, PrincipalPrivilegeSetEntry value) {
            if (this.usersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureUsersIsMutable();
               this.users_.add(index, value);
               this.onChanged();
            } else {
               this.usersBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addUsers(PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.usersBuilder_ == null) {
               this.ensureUsersIsMutable();
               this.users_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.usersBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addUsers(int index, PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.usersBuilder_ == null) {
               this.ensureUsersIsMutable();
               this.users_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.usersBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllUsers(Iterable values) {
            if (this.usersBuilder_ == null) {
               this.ensureUsersIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.users_);
               this.onChanged();
            } else {
               this.usersBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearUsers() {
            if (this.usersBuilder_ == null) {
               this.users_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.usersBuilder_.clear();
            }

            return this;
         }

         public Builder removeUsers(int index) {
            if (this.usersBuilder_ == null) {
               this.ensureUsersIsMutable();
               this.users_.remove(index);
               this.onChanged();
            } else {
               this.usersBuilder_.remove(index);
            }

            return this;
         }

         public PrincipalPrivilegeSetEntry.Builder getUsersBuilder(int index) {
            return (PrincipalPrivilegeSetEntry.Builder)this.getUsersFieldBuilder().getBuilder(index);
         }

         public PrincipalPrivilegeSetEntryOrBuilder getUsersOrBuilder(int index) {
            return this.usersBuilder_ == null ? (PrincipalPrivilegeSetEntryOrBuilder)this.users_.get(index) : (PrincipalPrivilegeSetEntryOrBuilder)this.usersBuilder_.getMessageOrBuilder(index);
         }

         public List getUsersOrBuilderList() {
            return this.usersBuilder_ != null ? this.usersBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.users_);
         }

         public PrincipalPrivilegeSetEntry.Builder addUsersBuilder() {
            return (PrincipalPrivilegeSetEntry.Builder)this.getUsersFieldBuilder().addBuilder(HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance());
         }

         public PrincipalPrivilegeSetEntry.Builder addUsersBuilder(int index) {
            return (PrincipalPrivilegeSetEntry.Builder)this.getUsersFieldBuilder().addBuilder(index, HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance());
         }

         public List getUsersBuilderList() {
            return this.getUsersFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getUsersFieldBuilder() {
            if (this.usersBuilder_ == null) {
               this.usersBuilder_ = new RepeatedFieldBuilder(this.users_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.users_ = null;
            }

            return this.usersBuilder_;
         }

         private void ensureRolesIsMutable() {
            if ((this.bitField0_ & 2) != 2) {
               this.roles_ = new ArrayList(this.roles_);
               this.bitField0_ |= 2;
            }

         }

         public List getRolesList() {
            return this.rolesBuilder_ == null ? Collections.unmodifiableList(this.roles_) : this.rolesBuilder_.getMessageList();
         }

         public int getRolesCount() {
            return this.rolesBuilder_ == null ? this.roles_.size() : this.rolesBuilder_.getCount();
         }

         public PrincipalPrivilegeSetEntry getRoles(int index) {
            return this.rolesBuilder_ == null ? (PrincipalPrivilegeSetEntry)this.roles_.get(index) : (PrincipalPrivilegeSetEntry)this.rolesBuilder_.getMessage(index);
         }

         public Builder setRoles(int index, PrincipalPrivilegeSetEntry value) {
            if (this.rolesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRolesIsMutable();
               this.roles_.set(index, value);
               this.onChanged();
            } else {
               this.rolesBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setRoles(int index, PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.rolesBuilder_ == null) {
               this.ensureRolesIsMutable();
               this.roles_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.rolesBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addRoles(PrincipalPrivilegeSetEntry value) {
            if (this.rolesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRolesIsMutable();
               this.roles_.add(value);
               this.onChanged();
            } else {
               this.rolesBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addRoles(int index, PrincipalPrivilegeSetEntry value) {
            if (this.rolesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRolesIsMutable();
               this.roles_.add(index, value);
               this.onChanged();
            } else {
               this.rolesBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addRoles(PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.rolesBuilder_ == null) {
               this.ensureRolesIsMutable();
               this.roles_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.rolesBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addRoles(int index, PrincipalPrivilegeSetEntry.Builder builderForValue) {
            if (this.rolesBuilder_ == null) {
               this.ensureRolesIsMutable();
               this.roles_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.rolesBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllRoles(Iterable values) {
            if (this.rolesBuilder_ == null) {
               this.ensureRolesIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.roles_);
               this.onChanged();
            } else {
               this.rolesBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearRoles() {
            if (this.rolesBuilder_ == null) {
               this.roles_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.rolesBuilder_.clear();
            }

            return this;
         }

         public Builder removeRoles(int index) {
            if (this.rolesBuilder_ == null) {
               this.ensureRolesIsMutable();
               this.roles_.remove(index);
               this.onChanged();
            } else {
               this.rolesBuilder_.remove(index);
            }

            return this;
         }

         public PrincipalPrivilegeSetEntry.Builder getRolesBuilder(int index) {
            return (PrincipalPrivilegeSetEntry.Builder)this.getRolesFieldBuilder().getBuilder(index);
         }

         public PrincipalPrivilegeSetEntryOrBuilder getRolesOrBuilder(int index) {
            return this.rolesBuilder_ == null ? (PrincipalPrivilegeSetEntryOrBuilder)this.roles_.get(index) : (PrincipalPrivilegeSetEntryOrBuilder)this.rolesBuilder_.getMessageOrBuilder(index);
         }

         public List getRolesOrBuilderList() {
            return this.rolesBuilder_ != null ? this.rolesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.roles_);
         }

         public PrincipalPrivilegeSetEntry.Builder addRolesBuilder() {
            return (PrincipalPrivilegeSetEntry.Builder)this.getRolesFieldBuilder().addBuilder(HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance());
         }

         public PrincipalPrivilegeSetEntry.Builder addRolesBuilder(int index) {
            return (PrincipalPrivilegeSetEntry.Builder)this.getRolesFieldBuilder().addBuilder(index, HbaseMetastoreProto.PrincipalPrivilegeSetEntry.getDefaultInstance());
         }

         public List getRolesBuilderList() {
            return this.getRolesFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getRolesFieldBuilder() {
            if (this.rolesBuilder_ == null) {
               this.rolesBuilder_ = new RepeatedFieldBuilder(this.roles_, (this.bitField0_ & 2) == 2, this.getParentForChildren(), this.isClean());
               this.roles_ = null;
            }

            return this.rolesBuilder_;
         }
      }
   }

   public static final class PrivilegeGrantInfo extends GeneratedMessage implements PrivilegeGrantInfoOrBuilder {
      private static final PrivilegeGrantInfo defaultInstance = new PrivilegeGrantInfo(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public PrivilegeGrantInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PrivilegeGrantInfo(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int PRIVILEGE_FIELD_NUMBER = 1;
      private Object privilege_;
      public static final int CREATE_TIME_FIELD_NUMBER = 2;
      private long createTime_;
      public static final int GRANTOR_FIELD_NUMBER = 3;
      private Object grantor_;
      public static final int GRANTOR_TYPE_FIELD_NUMBER = 4;
      private PrincipalType grantorType_;
      public static final int GRANT_OPTION_FIELD_NUMBER = 5;
      private boolean grantOption_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private PrivilegeGrantInfo(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private PrivilegeGrantInfo(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static PrivilegeGrantInfo getDefaultInstance() {
         return defaultInstance;
      }

      public PrivilegeGrantInfo getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PrivilegeGrantInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.privilege_ = input.readBytes();
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.createTime_ = input.readInt64();
                     break;
                  case 26:
                     this.bitField0_ |= 4;
                     this.grantor_ = input.readBytes();
                     break;
                  case 32:
                     int rawValue = input.readEnum();
                     PrincipalType value = HbaseMetastoreProto.PrincipalType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(4, rawValue);
                     } else {
                        this.bitField0_ |= 8;
                        this.grantorType_ = value;
                     }
                     break;
                  case 40:
                     this.bitField0_ |= 16;
                     this.grantOption_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PrivilegeGrantInfo.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasPrivilege() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getPrivilege() {
         Object ref = this.privilege_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.privilege_ = s;
            }

            return s;
         }
      }

      public ByteString getPrivilegeBytes() {
         Object ref = this.privilege_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.privilege_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 2) == 2;
      }

      public long getCreateTime() {
         return this.createTime_;
      }

      public boolean hasGrantor() {
         return (this.bitField0_ & 4) == 4;
      }

      public String getGrantor() {
         Object ref = this.grantor_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.grantor_ = s;
            }

            return s;
         }
      }

      public ByteString getGrantorBytes() {
         Object ref = this.grantor_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.grantor_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasGrantorType() {
         return (this.bitField0_ & 8) == 8;
      }

      public PrincipalType getGrantorType() {
         return this.grantorType_;
      }

      public boolean hasGrantOption() {
         return (this.bitField0_ & 16) == 16;
      }

      public boolean getGrantOption() {
         return this.grantOption_;
      }

      private void initFields() {
         this.privilege_ = "";
         this.createTime_ = 0L;
         this.grantor_ = "";
         this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
         this.grantOption_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getPrivilegeBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeInt64(2, this.createTime_);
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBytes(3, this.getGrantorBytes());
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeEnum(4, this.grantorType_.getNumber());
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeBool(5, this.grantOption_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getPrivilegeBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeInt64Size(2, this.createTime_);
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBytesSize(3, this.getGrantorBytes());
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeEnumSize(4, this.grantorType_.getNumber());
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeBoolSize(5, this.grantOption_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static PrivilegeGrantInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(data);
      }

      public static PrivilegeGrantInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrivilegeGrantInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(data);
      }

      public static PrivilegeGrantInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrivilegeGrantInfo parseFrom(InputStream input) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(input);
      }

      public static PrivilegeGrantInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(input, extensionRegistry);
      }

      public static PrivilegeGrantInfo parseDelimitedFrom(InputStream input) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseDelimitedFrom(input);
      }

      public static PrivilegeGrantInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static PrivilegeGrantInfo parseFrom(CodedInputStream input) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(input);
      }

      public static PrivilegeGrantInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrivilegeGrantInfo)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.PrivilegeGrantInfo.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(PrivilegeGrantInfo prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements PrivilegeGrantInfoOrBuilder {
         private int bitField0_;
         private Object privilege_;
         private long createTime_;
         private Object grantor_;
         private PrincipalType grantorType_;
         private boolean grantOption_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(PrivilegeGrantInfo.class, Builder.class);
         }

         private Builder() {
            this.privilege_ = "";
            this.grantor_ = "";
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.privilege_ = "";
            this.grantor_ = "";
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.PrivilegeGrantInfo.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.privilege_ = "";
            this.bitField0_ &= -2;
            this.createTime_ = 0L;
            this.bitField0_ &= -3;
            this.grantor_ = "";
            this.bitField0_ &= -5;
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.bitField0_ &= -9;
            this.grantOption_ = false;
            this.bitField0_ &= -17;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor;
         }

         public PrivilegeGrantInfo getDefaultInstanceForType() {
            return HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance();
         }

         public PrivilegeGrantInfo build() {
            PrivilegeGrantInfo result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PrivilegeGrantInfo buildPartial() {
            PrivilegeGrantInfo result = new PrivilegeGrantInfo(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.privilege_ = this.privilege_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.grantor_ = this.grantor_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.grantorType_ = this.grantorType_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.grantOption_ = this.grantOption_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PrivilegeGrantInfo) {
               return this.mergeFrom((PrivilegeGrantInfo)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PrivilegeGrantInfo other) {
            if (other == HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPrivilege()) {
                  this.bitField0_ |= 1;
                  this.privilege_ = other.privilege_;
                  this.onChanged();
               }

               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasGrantor()) {
                  this.bitField0_ |= 4;
                  this.grantor_ = other.grantor_;
                  this.onChanged();
               }

               if (other.hasGrantorType()) {
                  this.setGrantorType(other.getGrantorType());
               }

               if (other.hasGrantOption()) {
                  this.setGrantOption(other.getGrantOption());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PrivilegeGrantInfo parsedMessage = null;

            try {
               parsedMessage = (PrivilegeGrantInfo)HbaseMetastoreProto.PrivilegeGrantInfo.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PrivilegeGrantInfo)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPrivilege() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getPrivilege() {
            Object ref = this.privilege_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.privilege_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getPrivilegeBytes() {
            Object ref = this.privilege_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.privilege_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setPrivilege(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.privilege_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearPrivilege() {
            this.bitField0_ &= -2;
            this.privilege_ = HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance().getPrivilege();
            this.onChanged();
            return this;
         }

         public Builder setPrivilegeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.privilege_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(long value) {
            this.bitField0_ |= 2;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -3;
            this.createTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasGrantor() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getGrantor() {
            Object ref = this.grantor_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.grantor_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getGrantorBytes() {
            Object ref = this.grantor_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.grantor_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setGrantor(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.grantor_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearGrantor() {
            this.bitField0_ &= -5;
            this.grantor_ = HbaseMetastoreProto.PrivilegeGrantInfo.getDefaultInstance().getGrantor();
            this.onChanged();
            return this;
         }

         public Builder setGrantorBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.grantor_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasGrantorType() {
            return (this.bitField0_ & 8) == 8;
         }

         public PrincipalType getGrantorType() {
            return this.grantorType_;
         }

         public Builder setGrantorType(PrincipalType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.grantorType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearGrantorType() {
            this.bitField0_ &= -9;
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.onChanged();
            return this;
         }

         public boolean hasGrantOption() {
            return (this.bitField0_ & 16) == 16;
         }

         public boolean getGrantOption() {
            return this.grantOption_;
         }

         public Builder setGrantOption(boolean value) {
            this.bitField0_ |= 16;
            this.grantOption_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearGrantOption() {
            this.bitField0_ &= -17;
            this.grantOption_ = false;
            this.onChanged();
            return this;
         }
      }
   }

   public static final class RoleGrantInfo extends GeneratedMessage implements RoleGrantInfoOrBuilder {
      private static final RoleGrantInfo defaultInstance = new RoleGrantInfo(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public RoleGrantInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new RoleGrantInfo(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int PRINCIPAL_NAME_FIELD_NUMBER = 1;
      private Object principalName_;
      public static final int PRINCIPAL_TYPE_FIELD_NUMBER = 2;
      private PrincipalType principalType_;
      public static final int ADD_TIME_FIELD_NUMBER = 3;
      private long addTime_;
      public static final int GRANTOR_FIELD_NUMBER = 4;
      private Object grantor_;
      public static final int GRANTOR_TYPE_FIELD_NUMBER = 5;
      private PrincipalType grantorType_;
      public static final int GRANT_OPTION_FIELD_NUMBER = 6;
      private boolean grantOption_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private RoleGrantInfo(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private RoleGrantInfo(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static RoleGrantInfo getDefaultInstance() {
         return defaultInstance;
      }

      public RoleGrantInfo getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private RoleGrantInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.principalName_ = input.readBytes();
                     break;
                  case 16:
                     int rawValue = input.readEnum();
                     PrincipalType value = HbaseMetastoreProto.PrincipalType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(2, rawValue);
                     } else {
                        this.bitField0_ |= 2;
                        this.principalType_ = value;
                     }
                     break;
                  case 24:
                     this.bitField0_ |= 4;
                     this.addTime_ = input.readInt64();
                     break;
                  case 34:
                     this.bitField0_ |= 8;
                     this.grantor_ = input.readBytes();
                     break;
                  case 40:
                     int rawValue = input.readEnum();
                     PrincipalType value = HbaseMetastoreProto.PrincipalType.valueOf(rawValue);
                     if (value == null) {
                        unknownFields.mergeVarintField(5, rawValue);
                     } else {
                        this.bitField0_ |= 16;
                        this.grantorType_ = value;
                     }
                     break;
                  case 48:
                     this.bitField0_ |= 32;
                     this.grantOption_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleGrantInfo.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasPrincipalName() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getPrincipalName() {
         Object ref = this.principalName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.principalName_ = s;
            }

            return s;
         }
      }

      public ByteString getPrincipalNameBytes() {
         Object ref = this.principalName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.principalName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasPrincipalType() {
         return (this.bitField0_ & 2) == 2;
      }

      public PrincipalType getPrincipalType() {
         return this.principalType_;
      }

      public boolean hasAddTime() {
         return (this.bitField0_ & 4) == 4;
      }

      public long getAddTime() {
         return this.addTime_;
      }

      public boolean hasGrantor() {
         return (this.bitField0_ & 8) == 8;
      }

      public String getGrantor() {
         Object ref = this.grantor_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.grantor_ = s;
            }

            return s;
         }
      }

      public ByteString getGrantorBytes() {
         Object ref = this.grantor_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.grantor_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasGrantorType() {
         return (this.bitField0_ & 16) == 16;
      }

      public PrincipalType getGrantorType() {
         return this.grantorType_;
      }

      public boolean hasGrantOption() {
         return (this.bitField0_ & 32) == 32;
      }

      public boolean getGrantOption() {
         return this.grantOption_;
      }

      private void initFields() {
         this.principalName_ = "";
         this.principalType_ = HbaseMetastoreProto.PrincipalType.USER;
         this.addTime_ = 0L;
         this.grantor_ = "";
         this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
         this.grantOption_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasPrincipalName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasPrincipalType()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getPrincipalNameBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeEnum(2, this.principalType_.getNumber());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeInt64(3, this.addTime_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeBytes(4, this.getGrantorBytes());
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeEnum(5, this.grantorType_.getNumber());
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeBool(6, this.grantOption_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getPrincipalNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeEnumSize(2, this.principalType_.getNumber());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeInt64Size(3, this.addTime_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeBytesSize(4, this.getGrantorBytes());
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeEnumSize(5, this.grantorType_.getNumber());
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeBoolSize(6, this.grantOption_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static RoleGrantInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (RoleGrantInfo)PARSER.parseFrom(data);
      }

      public static RoleGrantInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleGrantInfo)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleGrantInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (RoleGrantInfo)PARSER.parseFrom(data);
      }

      public static RoleGrantInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleGrantInfo)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleGrantInfo parseFrom(InputStream input) throws IOException {
         return (RoleGrantInfo)PARSER.parseFrom(input);
      }

      public static RoleGrantInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfo)PARSER.parseFrom(input, extensionRegistry);
      }

      public static RoleGrantInfo parseDelimitedFrom(InputStream input) throws IOException {
         return (RoleGrantInfo)PARSER.parseDelimitedFrom(input);
      }

      public static RoleGrantInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static RoleGrantInfo parseFrom(CodedInputStream input) throws IOException {
         return (RoleGrantInfo)PARSER.parseFrom(input);
      }

      public static RoleGrantInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfo)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.RoleGrantInfo.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(RoleGrantInfo prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements RoleGrantInfoOrBuilder {
         private int bitField0_;
         private Object principalName_;
         private PrincipalType principalType_;
         private long addTime_;
         private Object grantor_;
         private PrincipalType grantorType_;
         private boolean grantOption_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleGrantInfo.class, Builder.class);
         }

         private Builder() {
            this.principalName_ = "";
            this.principalType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.grantor_ = "";
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.principalName_ = "";
            this.principalType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.grantor_ = "";
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.RoleGrantInfo.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.principalName_ = "";
            this.bitField0_ &= -2;
            this.principalType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.bitField0_ &= -3;
            this.addTime_ = 0L;
            this.bitField0_ &= -5;
            this.grantor_ = "";
            this.bitField0_ &= -9;
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.bitField0_ &= -17;
            this.grantOption_ = false;
            this.bitField0_ &= -33;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor;
         }

         public RoleGrantInfo getDefaultInstanceForType() {
            return HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance();
         }

         public RoleGrantInfo build() {
            RoleGrantInfo result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public RoleGrantInfo buildPartial() {
            RoleGrantInfo result = new RoleGrantInfo(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.principalName_ = this.principalName_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.principalType_ = this.principalType_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.addTime_ = this.addTime_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.grantor_ = this.grantor_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.grantorType_ = this.grantorType_;
            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            result.grantOption_ = this.grantOption_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof RoleGrantInfo) {
               return this.mergeFrom((RoleGrantInfo)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(RoleGrantInfo other) {
            if (other == HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPrincipalName()) {
                  this.bitField0_ |= 1;
                  this.principalName_ = other.principalName_;
                  this.onChanged();
               }

               if (other.hasPrincipalType()) {
                  this.setPrincipalType(other.getPrincipalType());
               }

               if (other.hasAddTime()) {
                  this.setAddTime(other.getAddTime());
               }

               if (other.hasGrantor()) {
                  this.bitField0_ |= 8;
                  this.grantor_ = other.grantor_;
                  this.onChanged();
               }

               if (other.hasGrantorType()) {
                  this.setGrantorType(other.getGrantorType());
               }

               if (other.hasGrantOption()) {
                  this.setGrantOption(other.getGrantOption());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasPrincipalName()) {
               return false;
            } else {
               return this.hasPrincipalType();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            RoleGrantInfo parsedMessage = null;

            try {
               parsedMessage = (RoleGrantInfo)HbaseMetastoreProto.RoleGrantInfo.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (RoleGrantInfo)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPrincipalName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getPrincipalName() {
            Object ref = this.principalName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.principalName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getPrincipalNameBytes() {
            Object ref = this.principalName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.principalName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setPrincipalName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.principalName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearPrincipalName() {
            this.bitField0_ &= -2;
            this.principalName_ = HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance().getPrincipalName();
            this.onChanged();
            return this;
         }

         public Builder setPrincipalNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.principalName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPrincipalType() {
            return (this.bitField0_ & 2) == 2;
         }

         public PrincipalType getPrincipalType() {
            return this.principalType_;
         }

         public Builder setPrincipalType(PrincipalType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.principalType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearPrincipalType() {
            this.bitField0_ &= -3;
            this.principalType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.onChanged();
            return this;
         }

         public boolean hasAddTime() {
            return (this.bitField0_ & 4) == 4;
         }

         public long getAddTime() {
            return this.addTime_;
         }

         public Builder setAddTime(long value) {
            this.bitField0_ |= 4;
            this.addTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearAddTime() {
            this.bitField0_ &= -5;
            this.addTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasGrantor() {
            return (this.bitField0_ & 8) == 8;
         }

         public String getGrantor() {
            Object ref = this.grantor_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.grantor_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getGrantorBytes() {
            Object ref = this.grantor_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.grantor_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setGrantor(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.grantor_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearGrantor() {
            this.bitField0_ &= -9;
            this.grantor_ = HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance().getGrantor();
            this.onChanged();
            return this;
         }

         public Builder setGrantorBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.grantor_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasGrantorType() {
            return (this.bitField0_ & 16) == 16;
         }

         public PrincipalType getGrantorType() {
            return this.grantorType_;
         }

         public Builder setGrantorType(PrincipalType value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.grantorType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearGrantorType() {
            this.bitField0_ &= -17;
            this.grantorType_ = HbaseMetastoreProto.PrincipalType.USER;
            this.onChanged();
            return this;
         }

         public boolean hasGrantOption() {
            return (this.bitField0_ & 32) == 32;
         }

         public boolean getGrantOption() {
            return this.grantOption_;
         }

         public Builder setGrantOption(boolean value) {
            this.bitField0_ |= 32;
            this.grantOption_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearGrantOption() {
            this.bitField0_ &= -33;
            this.grantOption_ = false;
            this.onChanged();
            return this;
         }
      }
   }

   public static final class RoleGrantInfoList extends GeneratedMessage implements RoleGrantInfoListOrBuilder {
      private static final RoleGrantInfoList defaultInstance = new RoleGrantInfoList(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public RoleGrantInfoList parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new RoleGrantInfoList(input, extensionRegistry);
         }
      };
      public static final int GRANT_INFO_FIELD_NUMBER = 1;
      private List grantInfo_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private RoleGrantInfoList(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private RoleGrantInfoList(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static RoleGrantInfoList getDefaultInstance() {
         return defaultInstance;
      }

      public RoleGrantInfoList getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private RoleGrantInfoList(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.grantInfo_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.grantInfo_.add(input.readMessage(HbaseMetastoreProto.RoleGrantInfo.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.grantInfo_ = Collections.unmodifiableList(this.grantInfo_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleGrantInfoList.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getGrantInfoList() {
         return this.grantInfo_;
      }

      public List getGrantInfoOrBuilderList() {
         return this.grantInfo_;
      }

      public int getGrantInfoCount() {
         return this.grantInfo_.size();
      }

      public RoleGrantInfo getGrantInfo(int index) {
         return (RoleGrantInfo)this.grantInfo_.get(index);
      }

      public RoleGrantInfoOrBuilder getGrantInfoOrBuilder(int index) {
         return (RoleGrantInfoOrBuilder)this.grantInfo_.get(index);
      }

      private void initFields() {
         this.grantInfo_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getGrantInfoCount(); ++i) {
               if (!this.getGrantInfo(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.grantInfo_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.grantInfo_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.grantInfo_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.grantInfo_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static RoleGrantInfoList parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (RoleGrantInfoList)PARSER.parseFrom(data);
      }

      public static RoleGrantInfoList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleGrantInfoList)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleGrantInfoList parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (RoleGrantInfoList)PARSER.parseFrom(data);
      }

      public static RoleGrantInfoList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleGrantInfoList)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleGrantInfoList parseFrom(InputStream input) throws IOException {
         return (RoleGrantInfoList)PARSER.parseFrom(input);
      }

      public static RoleGrantInfoList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfoList)PARSER.parseFrom(input, extensionRegistry);
      }

      public static RoleGrantInfoList parseDelimitedFrom(InputStream input) throws IOException {
         return (RoleGrantInfoList)PARSER.parseDelimitedFrom(input);
      }

      public static RoleGrantInfoList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfoList)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static RoleGrantInfoList parseFrom(CodedInputStream input) throws IOException {
         return (RoleGrantInfoList)PARSER.parseFrom(input);
      }

      public static RoleGrantInfoList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleGrantInfoList)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.RoleGrantInfoList.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(RoleGrantInfoList prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements RoleGrantInfoListOrBuilder {
         private int bitField0_;
         private List grantInfo_;
         private RepeatedFieldBuilder grantInfoBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleGrantInfoList.class, Builder.class);
         }

         private Builder() {
            this.grantInfo_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.grantInfo_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.RoleGrantInfoList.alwaysUseFieldBuilders) {
               this.getGrantInfoFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.grantInfoBuilder_ == null) {
               this.grantInfo_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.grantInfoBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor;
         }

         public RoleGrantInfoList getDefaultInstanceForType() {
            return HbaseMetastoreProto.RoleGrantInfoList.getDefaultInstance();
         }

         public RoleGrantInfoList build() {
            RoleGrantInfoList result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public RoleGrantInfoList buildPartial() {
            RoleGrantInfoList result = new RoleGrantInfoList(this);
            int from_bitField0_ = this.bitField0_;
            if (this.grantInfoBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.grantInfo_ = Collections.unmodifiableList(this.grantInfo_);
                  this.bitField0_ &= -2;
               }

               result.grantInfo_ = this.grantInfo_;
            } else {
               result.grantInfo_ = this.grantInfoBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof RoleGrantInfoList) {
               return this.mergeFrom((RoleGrantInfoList)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(RoleGrantInfoList other) {
            if (other == HbaseMetastoreProto.RoleGrantInfoList.getDefaultInstance()) {
               return this;
            } else {
               if (this.grantInfoBuilder_ == null) {
                  if (!other.grantInfo_.isEmpty()) {
                     if (this.grantInfo_.isEmpty()) {
                        this.grantInfo_ = other.grantInfo_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureGrantInfoIsMutable();
                        this.grantInfo_.addAll(other.grantInfo_);
                     }

                     this.onChanged();
                  }
               } else if (!other.grantInfo_.isEmpty()) {
                  if (this.grantInfoBuilder_.isEmpty()) {
                     this.grantInfoBuilder_.dispose();
                     this.grantInfoBuilder_ = null;
                     this.grantInfo_ = other.grantInfo_;
                     this.bitField0_ &= -2;
                     this.grantInfoBuilder_ = HbaseMetastoreProto.RoleGrantInfoList.alwaysUseFieldBuilders ? this.getGrantInfoFieldBuilder() : null;
                  } else {
                     this.grantInfoBuilder_.addAllMessages(other.grantInfo_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getGrantInfoCount(); ++i) {
               if (!this.getGrantInfo(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            RoleGrantInfoList parsedMessage = null;

            try {
               parsedMessage = (RoleGrantInfoList)HbaseMetastoreProto.RoleGrantInfoList.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (RoleGrantInfoList)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureGrantInfoIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.grantInfo_ = new ArrayList(this.grantInfo_);
               this.bitField0_ |= 1;
            }

         }

         public List getGrantInfoList() {
            return this.grantInfoBuilder_ == null ? Collections.unmodifiableList(this.grantInfo_) : this.grantInfoBuilder_.getMessageList();
         }

         public int getGrantInfoCount() {
            return this.grantInfoBuilder_ == null ? this.grantInfo_.size() : this.grantInfoBuilder_.getCount();
         }

         public RoleGrantInfo getGrantInfo(int index) {
            return this.grantInfoBuilder_ == null ? (RoleGrantInfo)this.grantInfo_.get(index) : (RoleGrantInfo)this.grantInfoBuilder_.getMessage(index);
         }

         public Builder setGrantInfo(int index, RoleGrantInfo value) {
            if (this.grantInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureGrantInfoIsMutable();
               this.grantInfo_.set(index, value);
               this.onChanged();
            } else {
               this.grantInfoBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setGrantInfo(int index, RoleGrantInfo.Builder builderForValue) {
            if (this.grantInfoBuilder_ == null) {
               this.ensureGrantInfoIsMutable();
               this.grantInfo_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.grantInfoBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addGrantInfo(RoleGrantInfo value) {
            if (this.grantInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureGrantInfoIsMutable();
               this.grantInfo_.add(value);
               this.onChanged();
            } else {
               this.grantInfoBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addGrantInfo(int index, RoleGrantInfo value) {
            if (this.grantInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureGrantInfoIsMutable();
               this.grantInfo_.add(index, value);
               this.onChanged();
            } else {
               this.grantInfoBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addGrantInfo(RoleGrantInfo.Builder builderForValue) {
            if (this.grantInfoBuilder_ == null) {
               this.ensureGrantInfoIsMutable();
               this.grantInfo_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.grantInfoBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addGrantInfo(int index, RoleGrantInfo.Builder builderForValue) {
            if (this.grantInfoBuilder_ == null) {
               this.ensureGrantInfoIsMutable();
               this.grantInfo_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.grantInfoBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllGrantInfo(Iterable values) {
            if (this.grantInfoBuilder_ == null) {
               this.ensureGrantInfoIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.grantInfo_);
               this.onChanged();
            } else {
               this.grantInfoBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearGrantInfo() {
            if (this.grantInfoBuilder_ == null) {
               this.grantInfo_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.grantInfoBuilder_.clear();
            }

            return this;
         }

         public Builder removeGrantInfo(int index) {
            if (this.grantInfoBuilder_ == null) {
               this.ensureGrantInfoIsMutable();
               this.grantInfo_.remove(index);
               this.onChanged();
            } else {
               this.grantInfoBuilder_.remove(index);
            }

            return this;
         }

         public RoleGrantInfo.Builder getGrantInfoBuilder(int index) {
            return (RoleGrantInfo.Builder)this.getGrantInfoFieldBuilder().getBuilder(index);
         }

         public RoleGrantInfoOrBuilder getGrantInfoOrBuilder(int index) {
            return this.grantInfoBuilder_ == null ? (RoleGrantInfoOrBuilder)this.grantInfo_.get(index) : (RoleGrantInfoOrBuilder)this.grantInfoBuilder_.getMessageOrBuilder(index);
         }

         public List getGrantInfoOrBuilderList() {
            return this.grantInfoBuilder_ != null ? this.grantInfoBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.grantInfo_);
         }

         public RoleGrantInfo.Builder addGrantInfoBuilder() {
            return (RoleGrantInfo.Builder)this.getGrantInfoFieldBuilder().addBuilder(HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance());
         }

         public RoleGrantInfo.Builder addGrantInfoBuilder(int index) {
            return (RoleGrantInfo.Builder)this.getGrantInfoFieldBuilder().addBuilder(index, HbaseMetastoreProto.RoleGrantInfo.getDefaultInstance());
         }

         public List getGrantInfoBuilderList() {
            return this.getGrantInfoFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getGrantInfoFieldBuilder() {
            if (this.grantInfoBuilder_ == null) {
               this.grantInfoBuilder_ = new RepeatedFieldBuilder(this.grantInfo_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.grantInfo_ = null;
            }

            return this.grantInfoBuilder_;
         }
      }
   }

   public static final class RoleList extends GeneratedMessage implements RoleListOrBuilder {
      private static final RoleList defaultInstance = new RoleList(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public RoleList parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new RoleList(input, extensionRegistry);
         }
      };
      public static final int ROLE_FIELD_NUMBER = 1;
      private LazyStringList role_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private RoleList(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private RoleList(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static RoleList getDefaultInstance() {
         return defaultInstance;
      }

      public RoleList getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private RoleList(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.role_ = new LazyStringArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.role_.add(input.readBytes());
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.role_ = new UnmodifiableLazyStringList(this.role_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleList.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getRoleList() {
         return this.role_;
      }

      public int getRoleCount() {
         return this.role_.size();
      }

      public String getRole(int index) {
         return (String)this.role_.get(index);
      }

      public ByteString getRoleBytes(int index) {
         return this.role_.getByteString(index);
      }

      private void initFields() {
         this.role_ = LazyStringArrayList.EMPTY;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.role_.size(); ++i) {
            output.writeBytes(1, this.role_.getByteString(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            int dataSize = 0;

            for(int i = 0; i < this.role_.size(); ++i) {
               dataSize += CodedOutputStream.computeBytesSizeNoTag(this.role_.getByteString(i));
            }

            size += dataSize;
            size += 1 * this.getRoleList().size();
            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static RoleList parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (RoleList)PARSER.parseFrom(data);
      }

      public static RoleList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleList)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleList parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (RoleList)PARSER.parseFrom(data);
      }

      public static RoleList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (RoleList)PARSER.parseFrom(data, extensionRegistry);
      }

      public static RoleList parseFrom(InputStream input) throws IOException {
         return (RoleList)PARSER.parseFrom(input);
      }

      public static RoleList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleList)PARSER.parseFrom(input, extensionRegistry);
      }

      public static RoleList parseDelimitedFrom(InputStream input) throws IOException {
         return (RoleList)PARSER.parseDelimitedFrom(input);
      }

      public static RoleList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleList)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static RoleList parseFrom(CodedInputStream input) throws IOException {
         return (RoleList)PARSER.parseFrom(input);
      }

      public static RoleList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (RoleList)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.RoleList.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(RoleList prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements RoleListOrBuilder {
         private int bitField0_;
         private LazyStringList role_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable.ensureFieldAccessorsInitialized(RoleList.class, Builder.class);
         }

         private Builder() {
            this.role_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.role_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.RoleList.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.role_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -2;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor;
         }

         public RoleList getDefaultInstanceForType() {
            return HbaseMetastoreProto.RoleList.getDefaultInstance();
         }

         public RoleList build() {
            RoleList result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public RoleList buildPartial() {
            RoleList result = new RoleList(this);
            int from_bitField0_ = this.bitField0_;
            if ((this.bitField0_ & 1) == 1) {
               this.role_ = new UnmodifiableLazyStringList(this.role_);
               this.bitField0_ &= -2;
            }

            result.role_ = this.role_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof RoleList) {
               return this.mergeFrom((RoleList)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(RoleList other) {
            if (other == HbaseMetastoreProto.RoleList.getDefaultInstance()) {
               return this;
            } else {
               if (!other.role_.isEmpty()) {
                  if (this.role_.isEmpty()) {
                     this.role_ = other.role_;
                     this.bitField0_ &= -2;
                  } else {
                     this.ensureRoleIsMutable();
                     this.role_.addAll(other.role_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            RoleList parsedMessage = null;

            try {
               parsedMessage = (RoleList)HbaseMetastoreProto.RoleList.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (RoleList)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureRoleIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.role_ = new LazyStringArrayList(this.role_);
               this.bitField0_ |= 1;
            }

         }

         public List getRoleList() {
            return Collections.unmodifiableList(this.role_);
         }

         public int getRoleCount() {
            return this.role_.size();
         }

         public String getRole(int index) {
            return (String)this.role_.get(index);
         }

         public ByteString getRoleBytes(int index) {
            return this.role_.getByteString(index);
         }

         public Builder setRole(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureRoleIsMutable();
               this.role_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public Builder addRole(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureRoleIsMutable();
               this.role_.add(value);
               this.onChanged();
               return this;
            }
         }

         public Builder addAllRole(Iterable values) {
            this.ensureRoleIsMutable();
            com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.role_);
            this.onChanged();
            return this;
         }

         public Builder clearRole() {
            this.role_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -2;
            this.onChanged();
            return this;
         }

         public Builder addRoleBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureRoleIsMutable();
               this.role_.add(value);
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class Role extends GeneratedMessage implements RoleOrBuilder {
      private static final Role defaultInstance = new Role(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Role parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Role(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int CREATE_TIME_FIELD_NUMBER = 1;
      private long createTime_;
      public static final int OWNER_NAME_FIELD_NUMBER = 2;
      private Object ownerName_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Role(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Role(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Role getDefaultInstance() {
         return defaultInstance;
      }

      public Role getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Role(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.createTime_ = input.readInt64();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.ownerName_ = input.readBytes();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable.ensureFieldAccessorsInitialized(Role.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 1) == 1;
      }

      public long getCreateTime() {
         return this.createTime_;
      }

      public boolean hasOwnerName() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getOwnerName() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.ownerName_ = s;
            }

            return s;
         }
      }

      public ByteString getOwnerNameBytes() {
         Object ref = this.ownerName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.ownerName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      private void initFields() {
         this.createTime_ = 0L;
         this.ownerName_ = "";
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeInt64(1, this.createTime_);
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getOwnerNameBytes());
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeInt64Size(1, this.createTime_);
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getOwnerNameBytes());
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Role parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Role)PARSER.parseFrom(data);
      }

      public static Role parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Role)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Role parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Role)PARSER.parseFrom(data);
      }

      public static Role parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Role)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Role parseFrom(InputStream input) throws IOException {
         return (Role)PARSER.parseFrom(input);
      }

      public static Role parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Role)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Role parseDelimitedFrom(InputStream input) throws IOException {
         return (Role)PARSER.parseDelimitedFrom(input);
      }

      public static Role parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Role)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Role parseFrom(CodedInputStream input) throws IOException {
         return (Role)PARSER.parseFrom(input);
      }

      public static Role parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Role)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Role.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Role prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements RoleOrBuilder {
         private int bitField0_;
         private long createTime_;
         private Object ownerName_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable.ensureFieldAccessorsInitialized(Role.class, Builder.class);
         }

         private Builder() {
            this.ownerName_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.ownerName_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Role.alwaysUseFieldBuilders) {
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.createTime_ = 0L;
            this.bitField0_ &= -2;
            this.ownerName_ = "";
            this.bitField0_ &= -3;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor;
         }

         public Role getDefaultInstanceForType() {
            return HbaseMetastoreProto.Role.getDefaultInstance();
         }

         public Role build() {
            Role result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Role buildPartial() {
            Role result = new Role(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.ownerName_ = this.ownerName_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Role) {
               return this.mergeFrom((Role)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Role other) {
            if (other == HbaseMetastoreProto.Role.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasOwnerName()) {
                  this.bitField0_ |= 2;
                  this.ownerName_ = other.ownerName_;
                  this.onChanged();
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Role parsedMessage = null;

            try {
               parsedMessage = (Role)HbaseMetastoreProto.Role.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Role)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 1) == 1;
         }

         public long getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(long value) {
            this.bitField0_ |= 1;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -2;
            this.createTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasOwnerName() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getOwnerName() {
            Object ref = this.ownerName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.ownerName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOwnerNameBytes() {
            Object ref = this.ownerName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.ownerName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOwnerName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwnerName() {
            this.bitField0_ &= -3;
            this.ownerName_ = HbaseMetastoreProto.Role.getDefaultInstance().getOwnerName();
            this.onChanged();
            return this;
         }

         public Builder setOwnerNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.ownerName_ = value;
               this.onChanged();
               return this;
            }
         }
      }
   }

   public static final class StorageDescriptor extends GeneratedMessage implements StorageDescriptorOrBuilder {
      private static final StorageDescriptor defaultInstance = new StorageDescriptor(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public StorageDescriptor parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new StorageDescriptor(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int COLS_FIELD_NUMBER = 1;
      private List cols_;
      public static final int INPUT_FORMAT_FIELD_NUMBER = 2;
      private Object inputFormat_;
      public static final int OUTPUT_FORMAT_FIELD_NUMBER = 3;
      private Object outputFormat_;
      public static final int IS_COMPRESSED_FIELD_NUMBER = 4;
      private boolean isCompressed_;
      public static final int NUM_BUCKETS_FIELD_NUMBER = 5;
      private int numBuckets_;
      public static final int SERDE_INFO_FIELD_NUMBER = 6;
      private SerDeInfo serdeInfo_;
      public static final int BUCKET_COLS_FIELD_NUMBER = 7;
      private LazyStringList bucketCols_;
      public static final int SORT_COLS_FIELD_NUMBER = 8;
      private List sortCols_;
      public static final int SKEWED_INFO_FIELD_NUMBER = 9;
      private SkewedInfo skewedInfo_;
      public static final int STORED_AS_SUB_DIRECTORIES_FIELD_NUMBER = 10;
      private boolean storedAsSubDirectories_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private StorageDescriptor(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private StorageDescriptor(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static StorageDescriptor getDefaultInstance() {
         return defaultInstance;
      }

      public StorageDescriptor getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private StorageDescriptor(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.cols_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.cols_.add(input.readMessage(HbaseMetastoreProto.FieldSchema.PARSER, extensionRegistry));
                     break;
                  case 18:
                     this.bitField0_ |= 1;
                     this.inputFormat_ = input.readBytes();
                     break;
                  case 26:
                     this.bitField0_ |= 2;
                     this.outputFormat_ = input.readBytes();
                     break;
                  case 32:
                     this.bitField0_ |= 4;
                     this.isCompressed_ = input.readBool();
                     break;
                  case 40:
                     this.bitField0_ |= 8;
                     this.numBuckets_ = input.readSInt32();
                     break;
                  case 50:
                     SerDeInfo.Builder subBuilder = null;
                     if ((this.bitField0_ & 16) == 16) {
                        subBuilder = this.serdeInfo_.toBuilder();
                     }

                     this.serdeInfo_ = (SerDeInfo)input.readMessage(HbaseMetastoreProto.StorageDescriptor.SerDeInfo.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.serdeInfo_);
                        this.serdeInfo_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 16;
                     break;
                  case 58:
                     if ((mutable_bitField0_ & 64) != 64) {
                        this.bucketCols_ = new LazyStringArrayList();
                        mutable_bitField0_ |= 64;
                     }

                     this.bucketCols_.add(input.readBytes());
                     break;
                  case 66:
                     if ((mutable_bitField0_ & 128) != 128) {
                        this.sortCols_ = new ArrayList();
                        mutable_bitField0_ |= 128;
                     }

                     this.sortCols_.add(input.readMessage(HbaseMetastoreProto.StorageDescriptor.Order.PARSER, extensionRegistry));
                     break;
                  case 74:
                     SkewedInfo.Builder subBuilder = null;
                     if ((this.bitField0_ & 32) == 32) {
                        subBuilder = this.skewedInfo_.toBuilder();
                     }

                     this.skewedInfo_ = (SkewedInfo)input.readMessage(HbaseMetastoreProto.StorageDescriptor.SkewedInfo.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.skewedInfo_);
                        this.skewedInfo_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 32;
                     break;
                  case 80:
                     this.bitField0_ |= 64;
                     this.storedAsSubDirectories_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.cols_ = Collections.unmodifiableList(this.cols_);
            }

            if ((mutable_bitField0_ & 64) == 64) {
               this.bucketCols_ = new UnmodifiableLazyStringList(this.bucketCols_);
            }

            if ((mutable_bitField0_ & 128) == 128) {
               this.sortCols_ = Collections.unmodifiableList(this.sortCols_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(StorageDescriptor.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getColsList() {
         return this.cols_;
      }

      public List getColsOrBuilderList() {
         return this.cols_;
      }

      public int getColsCount() {
         return this.cols_.size();
      }

      public FieldSchema getCols(int index) {
         return (FieldSchema)this.cols_.get(index);
      }

      public FieldSchemaOrBuilder getColsOrBuilder(int index) {
         return (FieldSchemaOrBuilder)this.cols_.get(index);
      }

      public boolean hasInputFormat() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getInputFormat() {
         Object ref = this.inputFormat_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.inputFormat_ = s;
            }

            return s;
         }
      }

      public ByteString getInputFormatBytes() {
         Object ref = this.inputFormat_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.inputFormat_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasOutputFormat() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getOutputFormat() {
         Object ref = this.outputFormat_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.outputFormat_ = s;
            }

            return s;
         }
      }

      public ByteString getOutputFormatBytes() {
         Object ref = this.outputFormat_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.outputFormat_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasIsCompressed() {
         return (this.bitField0_ & 4) == 4;
      }

      public boolean getIsCompressed() {
         return this.isCompressed_;
      }

      public boolean hasNumBuckets() {
         return (this.bitField0_ & 8) == 8;
      }

      public int getNumBuckets() {
         return this.numBuckets_;
      }

      public boolean hasSerdeInfo() {
         return (this.bitField0_ & 16) == 16;
      }

      public SerDeInfo getSerdeInfo() {
         return this.serdeInfo_;
      }

      public SerDeInfoOrBuilder getSerdeInfoOrBuilder() {
         return this.serdeInfo_;
      }

      public List getBucketColsList() {
         return this.bucketCols_;
      }

      public int getBucketColsCount() {
         return this.bucketCols_.size();
      }

      public String getBucketCols(int index) {
         return (String)this.bucketCols_.get(index);
      }

      public ByteString getBucketColsBytes(int index) {
         return this.bucketCols_.getByteString(index);
      }

      public List getSortColsList() {
         return this.sortCols_;
      }

      public List getSortColsOrBuilderList() {
         return this.sortCols_;
      }

      public int getSortColsCount() {
         return this.sortCols_.size();
      }

      public Order getSortCols(int index) {
         return (Order)this.sortCols_.get(index);
      }

      public OrderOrBuilder getSortColsOrBuilder(int index) {
         return (OrderOrBuilder)this.sortCols_.get(index);
      }

      public boolean hasSkewedInfo() {
         return (this.bitField0_ & 32) == 32;
      }

      public SkewedInfo getSkewedInfo() {
         return this.skewedInfo_;
      }

      public SkewedInfoOrBuilder getSkewedInfoOrBuilder() {
         return this.skewedInfo_;
      }

      public boolean hasStoredAsSubDirectories() {
         return (this.bitField0_ & 64) == 64;
      }

      public boolean getStoredAsSubDirectories() {
         return this.storedAsSubDirectories_;
      }

      private void initFields() {
         this.cols_ = Collections.emptyList();
         this.inputFormat_ = "";
         this.outputFormat_ = "";
         this.isCompressed_ = false;
         this.numBuckets_ = 0;
         this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
         this.bucketCols_ = LazyStringArrayList.EMPTY;
         this.sortCols_ = Collections.emptyList();
         this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
         this.storedAsSubDirectories_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getColsCount(); ++i) {
               if (!this.getCols(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasSerdeInfo() && !this.getSerdeInfo().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               for(int i = 0; i < this.getSortColsCount(); ++i) {
                  if (!this.getSortCols(i).isInitialized()) {
                     this.memoizedIsInitialized = 0;
                     return false;
                  }
               }

               if (this.hasSkewedInfo() && !this.getSkewedInfo().isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else {
                  this.memoizedIsInitialized = 1;
                  return true;
               }
            }
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.cols_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.cols_.get(i));
         }

         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(2, this.getInputFormatBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(3, this.getOutputFormatBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBool(4, this.isCompressed_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeSInt32(5, this.numBuckets_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeMessage(6, this.serdeInfo_);
         }

         for(int i = 0; i < this.bucketCols_.size(); ++i) {
            output.writeBytes(7, this.bucketCols_.getByteString(i));
         }

         for(int i = 0; i < this.sortCols_.size(); ++i) {
            output.writeMessage(8, (MessageLite)this.sortCols_.get(i));
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeMessage(9, this.skewedInfo_);
         }

         if ((this.bitField0_ & 64) == 64) {
            output.writeBool(10, this.storedAsSubDirectories_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.cols_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.cols_.get(i));
            }

            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(2, this.getInputFormatBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(3, this.getOutputFormatBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBoolSize(4, this.isCompressed_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeSInt32Size(5, this.numBuckets_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeMessageSize(6, this.serdeInfo_);
            }

            int dataSize = 0;

            for(int i = 0; i < this.bucketCols_.size(); ++i) {
               dataSize += CodedOutputStream.computeBytesSizeNoTag(this.bucketCols_.getByteString(i));
            }

            size += dataSize;
            size += 1 * this.getBucketColsList().size();

            for(int i = 0; i < this.sortCols_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(8, (MessageLite)this.sortCols_.get(i));
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeMessageSize(9, this.skewedInfo_);
            }

            if ((this.bitField0_ & 64) == 64) {
               size += CodedOutputStream.computeBoolSize(10, this.storedAsSubDirectories_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static StorageDescriptor parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (StorageDescriptor)PARSER.parseFrom(data);
      }

      public static StorageDescriptor parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StorageDescriptor)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StorageDescriptor parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (StorageDescriptor)PARSER.parseFrom(data);
      }

      public static StorageDescriptor parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (StorageDescriptor)PARSER.parseFrom(data, extensionRegistry);
      }

      public static StorageDescriptor parseFrom(InputStream input) throws IOException {
         return (StorageDescriptor)PARSER.parseFrom(input);
      }

      public static StorageDescriptor parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StorageDescriptor)PARSER.parseFrom(input, extensionRegistry);
      }

      public static StorageDescriptor parseDelimitedFrom(InputStream input) throws IOException {
         return (StorageDescriptor)PARSER.parseDelimitedFrom(input);
      }

      public static StorageDescriptor parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StorageDescriptor)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static StorageDescriptor parseFrom(CodedInputStream input) throws IOException {
         return (StorageDescriptor)PARSER.parseFrom(input);
      }

      public static StorageDescriptor parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (StorageDescriptor)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.StorageDescriptor.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(StorageDescriptor prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Order extends GeneratedMessage implements OrderOrBuilder {
         private static final Order defaultInstance = new Order(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public Order parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new Order(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int COLUMN_NAME_FIELD_NUMBER = 1;
         private Object columnName_;
         public static final int ORDER_FIELD_NUMBER = 2;
         private int order_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private Order(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private Order(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static Order getDefaultInstance() {
            return defaultInstance;
         }

         public Order getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Order(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.columnName_ = input.readBytes();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.order_ = input.readSInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable.ensureFieldAccessorsInitialized(Order.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasColumnName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getColumnName() {
            Object ref = this.columnName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.columnName_ = s;
               }

               return s;
            }
         }

         public ByteString getColumnNameBytes() {
            Object ref = this.columnName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.columnName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasOrder() {
            return (this.bitField0_ & 2) == 2;
         }

         public int getOrder() {
            return this.order_;
         }

         private void initFields() {
            this.columnName_ = "";
            this.order_ = 1;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasColumnName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getColumnNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeSInt32(2, this.order_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getColumnNameBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeSInt32Size(2, this.order_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static Order parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (Order)PARSER.parseFrom(data);
         }

         public static Order parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Order)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Order parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (Order)PARSER.parseFrom(data);
         }

         public static Order parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Order)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Order parseFrom(InputStream input) throws IOException {
            return (Order)PARSER.parseFrom(input);
         }

         public static Order parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Order)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Order parseDelimitedFrom(InputStream input) throws IOException {
            return (Order)PARSER.parseDelimitedFrom(input);
         }

         public static Order parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Order)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static Order parseFrom(CodedInputStream input) throws IOException {
            return (Order)PARSER.parseFrom(input);
         }

         public static Order parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Order)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.StorageDescriptor.Order.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(Order prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements OrderOrBuilder {
            private int bitField0_;
            private Object columnName_;
            private int order_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable.ensureFieldAccessorsInitialized(Order.class, Builder.class);
            }

            private Builder() {
               this.columnName_ = "";
               this.order_ = 1;
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.columnName_ = "";
               this.order_ = 1;
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.StorageDescriptor.Order.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.columnName_ = "";
               this.bitField0_ &= -2;
               this.order_ = 1;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor;
            }

            public Order getDefaultInstanceForType() {
               return HbaseMetastoreProto.StorageDescriptor.Order.getDefaultInstance();
            }

            public Order build() {
               Order result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public Order buildPartial() {
               Order result = new Order(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.columnName_ = this.columnName_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.order_ = this.order_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof Order) {
                  return this.mergeFrom((Order)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(Order other) {
               if (other == HbaseMetastoreProto.StorageDescriptor.Order.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasColumnName()) {
                     this.bitField0_ |= 1;
                     this.columnName_ = other.columnName_;
                     this.onChanged();
                  }

                  if (other.hasOrder()) {
                     this.setOrder(other.getOrder());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return this.hasColumnName();
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               Order parsedMessage = null;

               try {
                  parsedMessage = (Order)HbaseMetastoreProto.StorageDescriptor.Order.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (Order)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasColumnName() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getColumnName() {
               Object ref = this.columnName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.columnName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getColumnNameBytes() {
               Object ref = this.columnName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.columnName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setColumnName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.columnName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearColumnName() {
               this.bitField0_ &= -2;
               this.columnName_ = HbaseMetastoreProto.StorageDescriptor.Order.getDefaultInstance().getColumnName();
               this.onChanged();
               return this;
            }

            public Builder setColumnNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.columnName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasOrder() {
               return (this.bitField0_ & 2) == 2;
            }

            public int getOrder() {
               return this.order_;
            }

            public Builder setOrder(int value) {
               this.bitField0_ |= 2;
               this.order_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearOrder() {
               this.bitField0_ &= -3;
               this.order_ = 1;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class SerDeInfo extends GeneratedMessage implements SerDeInfoOrBuilder {
         private static final SerDeInfo defaultInstance = new SerDeInfo(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public SerDeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new SerDeInfo(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int NAME_FIELD_NUMBER = 1;
         private Object name_;
         public static final int SERIALIZATION_LIB_FIELD_NUMBER = 2;
         private Object serializationLib_;
         public static final int PARAMETERS_FIELD_NUMBER = 3;
         private Parameters parameters_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private SerDeInfo(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private SerDeInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static SerDeInfo getDefaultInstance() {
            return defaultInstance;
         }

         public SerDeInfo getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private SerDeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.name_ = input.readBytes();
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.serializationLib_ = input.readBytes();
                        break;
                     case 26:
                        Parameters.Builder subBuilder = null;
                        if ((this.bitField0_ & 4) == 4) {
                           subBuilder = this.parameters_.toBuilder();
                        }

                        this.parameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.parameters_);
                           this.parameters_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(SerDeInfo.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getName() {
            Object ref = this.name_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.name_ = s;
               }

               return s;
            }
         }

         public ByteString getNameBytes() {
            Object ref = this.name_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.name_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasSerializationLib() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getSerializationLib() {
            Object ref = this.serializationLib_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.serializationLib_ = s;
               }

               return s;
            }
         }

         public ByteString getSerializationLibBytes() {
            Object ref = this.serializationLib_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.serializationLib_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasParameters() {
            return (this.bitField0_ & 4) == 4;
         }

         public Parameters getParameters() {
            return this.parameters_;
         }

         public ParametersOrBuilder getParametersOrBuilder() {
            return this.parameters_;
         }

         private void initFields() {
            this.name_ = "";
            this.serializationLib_ = "";
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (this.hasParameters() && !this.getParameters().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBytes(2, this.getSerializationLibBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               output.writeMessage(3, this.parameters_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getNameBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBytesSize(2, this.getSerializationLibBytes());
               }

               if ((this.bitField0_ & 4) == 4) {
                  size += CodedOutputStream.computeMessageSize(3, this.parameters_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static SerDeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SerDeInfo)PARSER.parseFrom(data);
         }

         public static SerDeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SerDeInfo)PARSER.parseFrom(data, extensionRegistry);
         }

         public static SerDeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SerDeInfo)PARSER.parseFrom(data);
         }

         public static SerDeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SerDeInfo)PARSER.parseFrom(data, extensionRegistry);
         }

         public static SerDeInfo parseFrom(InputStream input) throws IOException {
            return (SerDeInfo)PARSER.parseFrom(input);
         }

         public static SerDeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SerDeInfo)PARSER.parseFrom(input, extensionRegistry);
         }

         public static SerDeInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (SerDeInfo)PARSER.parseDelimitedFrom(input);
         }

         public static SerDeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SerDeInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static SerDeInfo parseFrom(CodedInputStream input) throws IOException {
            return (SerDeInfo)PARSER.parseFrom(input);
         }

         public static SerDeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SerDeInfo)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.StorageDescriptor.SerDeInfo.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(SerDeInfo prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements SerDeInfoOrBuilder {
            private int bitField0_;
            private Object name_;
            private Object serializationLib_;
            private Parameters parameters_;
            private SingleFieldBuilder parametersBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(SerDeInfo.class, Builder.class);
            }

            private Builder() {
               this.name_ = "";
               this.serializationLib_ = "";
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.name_ = "";
               this.serializationLib_ = "";
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.StorageDescriptor.SerDeInfo.alwaysUseFieldBuilders) {
                  this.getParametersFieldBuilder();
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.name_ = "";
               this.bitField0_ &= -2;
               this.serializationLib_ = "";
               this.bitField0_ &= -3;
               if (this.parametersBuilder_ == null) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               } else {
                  this.parametersBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor;
            }

            public SerDeInfo getDefaultInstanceForType() {
               return HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
            }

            public SerDeInfo build() {
               SerDeInfo result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public SerDeInfo buildPartial() {
               SerDeInfo result = new SerDeInfo(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.name_ = this.name_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.serializationLib_ = this.serializationLib_;
               if ((from_bitField0_ & 4) == 4) {
                  to_bitField0_ |= 4;
               }

               if (this.parametersBuilder_ == null) {
                  result.parameters_ = this.parameters_;
               } else {
                  result.parameters_ = (Parameters)this.parametersBuilder_.build();
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof SerDeInfo) {
                  return this.mergeFrom((SerDeInfo)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(SerDeInfo other) {
               if (other == HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasName()) {
                     this.bitField0_ |= 1;
                     this.name_ = other.name_;
                     this.onChanged();
                  }

                  if (other.hasSerializationLib()) {
                     this.bitField0_ |= 2;
                     this.serializationLib_ = other.serializationLib_;
                     this.onChanged();
                  }

                  if (other.hasParameters()) {
                     this.mergeParameters(other.getParameters());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               return !this.hasParameters() || this.getParameters().isInitialized();
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               SerDeInfo parsedMessage = null;

               try {
                  parsedMessage = (SerDeInfo)HbaseMetastoreProto.StorageDescriptor.SerDeInfo.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (SerDeInfo)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasName() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getName() {
               Object ref = this.name_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.name_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getNameBytes() {
               Object ref = this.name_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.name_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.name_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearName() {
               this.bitField0_ &= -2;
               this.name_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance().getName();
               this.onChanged();
               return this;
            }

            public Builder setNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.name_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasSerializationLib() {
               return (this.bitField0_ & 2) == 2;
            }

            public String getSerializationLib() {
               Object ref = this.serializationLib_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.serializationLib_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getSerializationLibBytes() {
               Object ref = this.serializationLib_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.serializationLib_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setSerializationLib(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.serializationLib_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearSerializationLib() {
               this.bitField0_ &= -3;
               this.serializationLib_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance().getSerializationLib();
               this.onChanged();
               return this;
            }

            public Builder setSerializationLibBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.serializationLib_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasParameters() {
               return (this.bitField0_ & 4) == 4;
            }

            public Parameters getParameters() {
               return this.parametersBuilder_ == null ? this.parameters_ : (Parameters)this.parametersBuilder_.getMessage();
            }

            public Builder setParameters(Parameters value) {
               if (this.parametersBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.parameters_ = value;
                  this.onChanged();
               } else {
                  this.parametersBuilder_.setMessage(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder setParameters(Parameters.Builder builderForValue) {
               if (this.parametersBuilder_ == null) {
                  this.parameters_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.parametersBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder mergeParameters(Parameters value) {
               if (this.parametersBuilder_ == null) {
                  if ((this.bitField0_ & 4) == 4 && this.parameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                     this.parameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.parameters_).mergeFrom(value).buildPartial();
                  } else {
                     this.parameters_ = value;
                  }

                  this.onChanged();
               } else {
                  this.parametersBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder clearParameters() {
               if (this.parametersBuilder_ == null) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
                  this.onChanged();
               } else {
                  this.parametersBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public Parameters.Builder getParametersBuilder() {
               this.bitField0_ |= 4;
               this.onChanged();
               return (Parameters.Builder)this.getParametersFieldBuilder().getBuilder();
            }

            public ParametersOrBuilder getParametersOrBuilder() {
               return (ParametersOrBuilder)(this.parametersBuilder_ != null ? (ParametersOrBuilder)this.parametersBuilder_.getMessageOrBuilder() : this.parameters_);
            }

            private SingleFieldBuilder getParametersFieldBuilder() {
               if (this.parametersBuilder_ == null) {
                  this.parametersBuilder_ = new SingleFieldBuilder(this.parameters_, this.getParentForChildren(), this.isClean());
                  this.parameters_ = null;
               }

               return this.parametersBuilder_;
            }
         }
      }

      public static final class SkewedInfo extends GeneratedMessage implements SkewedInfoOrBuilder {
         private static final SkewedInfo defaultInstance = new SkewedInfo(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public SkewedInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new SkewedInfo(input, extensionRegistry);
            }
         };
         public static final int SKEWED_COL_NAMES_FIELD_NUMBER = 1;
         private LazyStringList skewedColNames_;
         public static final int SKEWED_COL_VALUES_FIELD_NUMBER = 2;
         private List skewedColValues_;
         public static final int SKEWED_COL_VALUE_LOCATION_MAPS_FIELD_NUMBER = 3;
         private List skewedColValueLocationMaps_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private SkewedInfo(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private SkewedInfo(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static SkewedInfo getDefaultInstance() {
            return defaultInstance;
         }

         public SkewedInfo getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private SkewedInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        if ((mutable_bitField0_ & 1) != 1) {
                           this.skewedColNames_ = new LazyStringArrayList();
                           mutable_bitField0_ |= 1;
                        }

                        this.skewedColNames_.add(input.readBytes());
                        break;
                     case 18:
                        if ((mutable_bitField0_ & 2) != 2) {
                           this.skewedColValues_ = new ArrayList();
                           mutable_bitField0_ |= 2;
                        }

                        this.skewedColValues_.add(input.readMessage(HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.PARSER, extensionRegistry));
                        break;
                     case 26:
                        if ((mutable_bitField0_ & 4) != 4) {
                           this.skewedColValueLocationMaps_ = new ArrayList();
                           mutable_bitField0_ |= 4;
                        }

                        this.skewedColValueLocationMaps_.add(input.readMessage(HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.PARSER, extensionRegistry));
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 1) == 1) {
                  this.skewedColNames_ = new UnmodifiableLazyStringList(this.skewedColNames_);
               }

               if ((mutable_bitField0_ & 2) == 2) {
                  this.skewedColValues_ = Collections.unmodifiableList(this.skewedColValues_);
               }

               if ((mutable_bitField0_ & 4) == 4) {
                  this.skewedColValueLocationMaps_ = Collections.unmodifiableList(this.skewedColValueLocationMaps_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedInfo.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public List getSkewedColNamesList() {
            return this.skewedColNames_;
         }

         public int getSkewedColNamesCount() {
            return this.skewedColNames_.size();
         }

         public String getSkewedColNames(int index) {
            return (String)this.skewedColNames_.get(index);
         }

         public ByteString getSkewedColNamesBytes(int index) {
            return this.skewedColNames_.getByteString(index);
         }

         public List getSkewedColValuesList() {
            return this.skewedColValues_;
         }

         public List getSkewedColValuesOrBuilderList() {
            return this.skewedColValues_;
         }

         public int getSkewedColValuesCount() {
            return this.skewedColValues_.size();
         }

         public SkewedColValueList getSkewedColValues(int index) {
            return (SkewedColValueList)this.skewedColValues_.get(index);
         }

         public SkewedColValueListOrBuilder getSkewedColValuesOrBuilder(int index) {
            return (SkewedColValueListOrBuilder)this.skewedColValues_.get(index);
         }

         public List getSkewedColValueLocationMapsList() {
            return this.skewedColValueLocationMaps_;
         }

         public List getSkewedColValueLocationMapsOrBuilderList() {
            return this.skewedColValueLocationMaps_;
         }

         public int getSkewedColValueLocationMapsCount() {
            return this.skewedColValueLocationMaps_.size();
         }

         public SkewedColValueLocationMap getSkewedColValueLocationMaps(int index) {
            return (SkewedColValueLocationMap)this.skewedColValueLocationMaps_.get(index);
         }

         public SkewedColValueLocationMapOrBuilder getSkewedColValueLocationMapsOrBuilder(int index) {
            return (SkewedColValueLocationMapOrBuilder)this.skewedColValueLocationMaps_.get(index);
         }

         private void initFields() {
            this.skewedColNames_ = LazyStringArrayList.EMPTY;
            this.skewedColValues_ = Collections.emptyList();
            this.skewedColValueLocationMaps_ = Collections.emptyList();
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else {
               for(int i = 0; i < this.getSkewedColValueLocationMapsCount(); ++i) {
                  if (!this.getSkewedColValueLocationMaps(i).isInitialized()) {
                     this.memoizedIsInitialized = 0;
                     return false;
                  }
               }

               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();

            for(int i = 0; i < this.skewedColNames_.size(); ++i) {
               output.writeBytes(1, this.skewedColNames_.getByteString(i));
            }

            for(int i = 0; i < this.skewedColValues_.size(); ++i) {
               output.writeMessage(2, (MessageLite)this.skewedColValues_.get(i));
            }

            for(int i = 0; i < this.skewedColValueLocationMaps_.size(); ++i) {
               output.writeMessage(3, (MessageLite)this.skewedColValueLocationMaps_.get(i));
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               int dataSize = 0;

               for(int i = 0; i < this.skewedColNames_.size(); ++i) {
                  dataSize += CodedOutputStream.computeBytesSizeNoTag(this.skewedColNames_.getByteString(i));
               }

               size += dataSize;
               size += 1 * this.getSkewedColNamesList().size();

               for(int i = 0; i < this.skewedColValues_.size(); ++i) {
                  size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.skewedColValues_.get(i));
               }

               for(int i = 0; i < this.skewedColValueLocationMaps_.size(); ++i) {
                  size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.skewedColValueLocationMaps_.get(i));
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static SkewedInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (SkewedInfo)PARSER.parseFrom(data);
         }

         public static SkewedInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SkewedInfo)PARSER.parseFrom(data, extensionRegistry);
         }

         public static SkewedInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (SkewedInfo)PARSER.parseFrom(data);
         }

         public static SkewedInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (SkewedInfo)PARSER.parseFrom(data, extensionRegistry);
         }

         public static SkewedInfo parseFrom(InputStream input) throws IOException {
            return (SkewedInfo)PARSER.parseFrom(input);
         }

         public static SkewedInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkewedInfo)PARSER.parseFrom(input, extensionRegistry);
         }

         public static SkewedInfo parseDelimitedFrom(InputStream input) throws IOException {
            return (SkewedInfo)PARSER.parseDelimitedFrom(input);
         }

         public static SkewedInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkewedInfo)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static SkewedInfo parseFrom(CodedInputStream input) throws IOException {
            return (SkewedInfo)PARSER.parseFrom(input);
         }

         public static SkewedInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (SkewedInfo)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(SkewedInfo prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class SkewedColValueList extends GeneratedMessage implements SkewedColValueListOrBuilder {
            private static final SkewedColValueList defaultInstance = new SkewedColValueList(true);
            private final UnknownFieldSet unknownFields;
            public static Parser PARSER = new AbstractParser() {
               public SkewedColValueList parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                  return new SkewedColValueList(input, extensionRegistry);
               }
            };
            public static final int SKEWED_COL_VALUE_FIELD_NUMBER = 1;
            private LazyStringList skewedColValue_;
            private byte memoizedIsInitialized;
            private int memoizedSerializedSize;
            private static final long serialVersionUID = 0L;

            private SkewedColValueList(GeneratedMessage.Builder builder) {
               super(builder);
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = builder.getUnknownFields();
            }

            private SkewedColValueList(boolean noInit) {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = UnknownFieldSet.getDefaultInstance();
            }

            public static SkewedColValueList getDefaultInstance() {
               return defaultInstance;
            }

            public SkewedColValueList getDefaultInstanceForType() {
               return defaultInstance;
            }

            public final UnknownFieldSet getUnknownFields() {
               return this.unknownFields;
            }

            private SkewedColValueList(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.initFields();
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch (tag) {
                        case 0:
                           done = true;
                           break;
                        case 10:
                           if ((mutable_bitField0_ & 1) != 1) {
                              this.skewedColValue_ = new LazyStringArrayList();
                              mutable_bitField0_ |= 1;
                           }

                           this.skewedColValue_.add(input.readBytes());
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException e) {
                  throw e.setUnfinishedMessage(this);
               } catch (IOException e) {
                  throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
               } finally {
                  if ((mutable_bitField0_ & 1) == 1) {
                     this.skewedColValue_ = new UnmodifiableLazyStringList(this.skewedColValue_);
                  }

                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedColValueList.class, Builder.class);
            }

            public Parser getParserForType() {
               return PARSER;
            }

            public List getSkewedColValueList() {
               return this.skewedColValue_;
            }

            public int getSkewedColValueCount() {
               return this.skewedColValue_.size();
            }

            public String getSkewedColValue(int index) {
               return (String)this.skewedColValue_.get(index);
            }

            public ByteString getSkewedColValueBytes(int index) {
               return this.skewedColValue_.getByteString(index);
            }

            private void initFields() {
               this.skewedColValue_ = LazyStringArrayList.EMPTY;
            }

            public final boolean isInitialized() {
               byte isInitialized = this.memoizedIsInitialized;
               if (isInitialized != -1) {
                  return isInitialized == 1;
               } else {
                  this.memoizedIsInitialized = 1;
                  return true;
               }
            }

            public void writeTo(CodedOutputStream output) throws IOException {
               this.getSerializedSize();

               for(int i = 0; i < this.skewedColValue_.size(); ++i) {
                  output.writeBytes(1, this.skewedColValue_.getByteString(i));
               }

               this.getUnknownFields().writeTo(output);
            }

            public int getSerializedSize() {
               int size = this.memoizedSerializedSize;
               if (size != -1) {
                  return size;
               } else {
                  size = 0;
                  int dataSize = 0;

                  for(int i = 0; i < this.skewedColValue_.size(); ++i) {
                     dataSize += CodedOutputStream.computeBytesSizeNoTag(this.skewedColValue_.getByteString(i));
                  }

                  size += dataSize;
                  size += 1 * this.getSkewedColValueList().size();
                  size += this.getUnknownFields().getSerializedSize();
                  this.memoizedSerializedSize = size;
                  return size;
               }
            }

            protected Object writeReplace() throws ObjectStreamException {
               return super.writeReplace();
            }

            public static SkewedColValueList parseFrom(ByteString data) throws InvalidProtocolBufferException {
               return (SkewedColValueList)PARSER.parseFrom(data);
            }

            public static SkewedColValueList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (SkewedColValueList)PARSER.parseFrom(data, extensionRegistry);
            }

            public static SkewedColValueList parseFrom(byte[] data) throws InvalidProtocolBufferException {
               return (SkewedColValueList)PARSER.parseFrom(data);
            }

            public static SkewedColValueList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (SkewedColValueList)PARSER.parseFrom(data, extensionRegistry);
            }

            public static SkewedColValueList parseFrom(InputStream input) throws IOException {
               return (SkewedColValueList)PARSER.parseFrom(input);
            }

            public static SkewedColValueList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueList)PARSER.parseFrom(input, extensionRegistry);
            }

            public static SkewedColValueList parseDelimitedFrom(InputStream input) throws IOException {
               return (SkewedColValueList)PARSER.parseDelimitedFrom(input);
            }

            public static SkewedColValueList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueList)PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static SkewedColValueList parseFrom(CodedInputStream input) throws IOException {
               return (SkewedColValueList)PARSER.parseFrom(input);
            }

            public static SkewedColValueList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueList)PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
               return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.Builder.create();
            }

            public Builder newBuilderForType() {
               return newBuilder();
            }

            public static Builder newBuilder(SkewedColValueList prototype) {
               return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
               return newBuilder(this);
            }

            protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
               Builder builder = new Builder(parent);
               return builder;
            }

            static {
               defaultInstance.initFields();
            }

            public static final class Builder extends GeneratedMessage.Builder implements SkewedColValueListOrBuilder {
               private int bitField0_;
               private LazyStringList skewedColValue_;

               public static final Descriptors.Descriptor getDescriptor() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor;
               }

               protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedColValueList.class, Builder.class);
               }

               private Builder() {
                  this.skewedColValue_ = LazyStringArrayList.EMPTY;
                  this.maybeForceBuilderInitialization();
               }

               private Builder(GeneratedMessage.BuilderParent parent) {
                  super(parent);
                  this.skewedColValue_ = LazyStringArrayList.EMPTY;
                  this.maybeForceBuilderInitialization();
               }

               private void maybeForceBuilderInitialization() {
                  if (HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.alwaysUseFieldBuilders) {
                  }

               }

               private static Builder create() {
                  return new Builder();
               }

               public Builder clear() {
                  super.clear();
                  this.skewedColValue_ = LazyStringArrayList.EMPTY;
                  this.bitField0_ &= -2;
                  return this;
               }

               public Builder clone() {
                  return create().mergeFrom(this.buildPartial());
               }

               public Descriptors.Descriptor getDescriptorForType() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor;
               }

               public SkewedColValueList getDefaultInstanceForType() {
                  return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.getDefaultInstance();
               }

               public SkewedColValueList build() {
                  SkewedColValueList result = this.buildPartial();
                  if (!result.isInitialized()) {
                     throw newUninitializedMessageException(result);
                  } else {
                     return result;
                  }
               }

               public SkewedColValueList buildPartial() {
                  SkewedColValueList result = new SkewedColValueList(this);
                  int from_bitField0_ = this.bitField0_;
                  if ((this.bitField0_ & 1) == 1) {
                     this.skewedColValue_ = new UnmodifiableLazyStringList(this.skewedColValue_);
                     this.bitField0_ &= -2;
                  }

                  result.skewedColValue_ = this.skewedColValue_;
                  this.onBuilt();
                  return result;
               }

               public Builder mergeFrom(Message other) {
                  if (other instanceof SkewedColValueList) {
                     return this.mergeFrom((SkewedColValueList)other);
                  } else {
                     super.mergeFrom(other);
                     return this;
                  }
               }

               public Builder mergeFrom(SkewedColValueList other) {
                  if (other == HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.getDefaultInstance()) {
                     return this;
                  } else {
                     if (!other.skewedColValue_.isEmpty()) {
                        if (this.skewedColValue_.isEmpty()) {
                           this.skewedColValue_ = other.skewedColValue_;
                           this.bitField0_ &= -2;
                        } else {
                           this.ensureSkewedColValueIsMutable();
                           this.skewedColValue_.addAll(other.skewedColValue_);
                        }

                        this.onChanged();
                     }

                     this.mergeUnknownFields(other.getUnknownFields());
                     return this;
                  }
               }

               public final boolean isInitialized() {
                  return true;
               }

               public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                  SkewedColValueList parsedMessage = null;

                  try {
                     parsedMessage = (SkewedColValueList)HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.PARSER.parsePartialFrom(input, extensionRegistry);
                  } catch (InvalidProtocolBufferException e) {
                     parsedMessage = (SkewedColValueList)e.getUnfinishedMessage();
                     throw e;
                  } finally {
                     if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                     }

                  }

                  return this;
               }

               private void ensureSkewedColValueIsMutable() {
                  if ((this.bitField0_ & 1) != 1) {
                     this.skewedColValue_ = new LazyStringArrayList(this.skewedColValue_);
                     this.bitField0_ |= 1;
                  }

               }

               public List getSkewedColValueList() {
                  return Collections.unmodifiableList(this.skewedColValue_);
               }

               public int getSkewedColValueCount() {
                  return this.skewedColValue_.size();
               }

               public String getSkewedColValue(int index) {
                  return (String)this.skewedColValue_.get(index);
               }

               public ByteString getSkewedColValueBytes(int index) {
                  return this.skewedColValue_.getByteString(index);
               }

               public Builder setSkewedColValue(int index, String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureSkewedColValueIsMutable();
                     this.skewedColValue_.set(index, value);
                     this.onChanged();
                     return this;
                  }
               }

               public Builder addSkewedColValue(String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureSkewedColValueIsMutable();
                     this.skewedColValue_.add(value);
                     this.onChanged();
                     return this;
                  }
               }

               public Builder addAllSkewedColValue(Iterable values) {
                  this.ensureSkewedColValueIsMutable();
                  com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.skewedColValue_);
                  this.onChanged();
                  return this;
               }

               public Builder clearSkewedColValue() {
                  this.skewedColValue_ = LazyStringArrayList.EMPTY;
                  this.bitField0_ &= -2;
                  this.onChanged();
                  return this;
               }

               public Builder addSkewedColValueBytes(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureSkewedColValueIsMutable();
                     this.skewedColValue_.add(value);
                     this.onChanged();
                     return this;
                  }
               }
            }
         }

         public static final class SkewedColValueLocationMap extends GeneratedMessage implements SkewedColValueLocationMapOrBuilder {
            private static final SkewedColValueLocationMap defaultInstance = new SkewedColValueLocationMap(true);
            private final UnknownFieldSet unknownFields;
            public static Parser PARSER = new AbstractParser() {
               public SkewedColValueLocationMap parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                  return new SkewedColValueLocationMap(input, extensionRegistry);
               }
            };
            private int bitField0_;
            public static final int KEY_FIELD_NUMBER = 1;
            private LazyStringList key_;
            public static final int VALUE_FIELD_NUMBER = 2;
            private Object value_;
            private byte memoizedIsInitialized;
            private int memoizedSerializedSize;
            private static final long serialVersionUID = 0L;

            private SkewedColValueLocationMap(GeneratedMessage.Builder builder) {
               super(builder);
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = builder.getUnknownFields();
            }

            private SkewedColValueLocationMap(boolean noInit) {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = UnknownFieldSet.getDefaultInstance();
            }

            public static SkewedColValueLocationMap getDefaultInstance() {
               return defaultInstance;
            }

            public SkewedColValueLocationMap getDefaultInstanceForType() {
               return defaultInstance;
            }

            public final UnknownFieldSet getUnknownFields() {
               return this.unknownFields;
            }

            private SkewedColValueLocationMap(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.initFields();
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch (tag) {
                        case 0:
                           done = true;
                           break;
                        case 10:
                           if ((mutable_bitField0_ & 1) != 1) {
                              this.key_ = new LazyStringArrayList();
                              mutable_bitField0_ |= 1;
                           }

                           this.key_.add(input.readBytes());
                           break;
                        case 18:
                           this.bitField0_ |= 1;
                           this.value_ = input.readBytes();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException e) {
                  throw e.setUnfinishedMessage(this);
               } catch (IOException e) {
                  throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
               } finally {
                  if ((mutable_bitField0_ & 1) == 1) {
                     this.key_ = new UnmodifiableLazyStringList(this.key_);
                  }

                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedColValueLocationMap.class, Builder.class);
            }

            public Parser getParserForType() {
               return PARSER;
            }

            public List getKeyList() {
               return this.key_;
            }

            public int getKeyCount() {
               return this.key_.size();
            }

            public String getKey(int index) {
               return (String)this.key_.get(index);
            }

            public ByteString getKeyBytes(int index) {
               return this.key_.getByteString(index);
            }

            public boolean hasValue() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getValue() {
               Object ref = this.value_;
               if (ref instanceof String) {
                  return (String)ref;
               } else {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.value_ = s;
                  }

                  return s;
               }
            }

            public ByteString getValueBytes() {
               Object ref = this.value_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.value_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            private void initFields() {
               this.key_ = LazyStringArrayList.EMPTY;
               this.value_ = "";
            }

            public final boolean isInitialized() {
               byte isInitialized = this.memoizedIsInitialized;
               if (isInitialized != -1) {
                  return isInitialized == 1;
               } else if (!this.hasValue()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else {
                  this.memoizedIsInitialized = 1;
                  return true;
               }
            }

            public void writeTo(CodedOutputStream output) throws IOException {
               this.getSerializedSize();

               for(int i = 0; i < this.key_.size(); ++i) {
                  output.writeBytes(1, this.key_.getByteString(i));
               }

               if ((this.bitField0_ & 1) == 1) {
                  output.writeBytes(2, this.getValueBytes());
               }

               this.getUnknownFields().writeTo(output);
            }

            public int getSerializedSize() {
               int size = this.memoizedSerializedSize;
               if (size != -1) {
                  return size;
               } else {
                  size = 0;
                  int dataSize = 0;

                  for(int i = 0; i < this.key_.size(); ++i) {
                     dataSize += CodedOutputStream.computeBytesSizeNoTag(this.key_.getByteString(i));
                  }

                  size += dataSize;
                  size += 1 * this.getKeyList().size();
                  if ((this.bitField0_ & 1) == 1) {
                     size += CodedOutputStream.computeBytesSize(2, this.getValueBytes());
                  }

                  size += this.getUnknownFields().getSerializedSize();
                  this.memoizedSerializedSize = size;
                  return size;
               }
            }

            protected Object writeReplace() throws ObjectStreamException {
               return super.writeReplace();
            }

            public static SkewedColValueLocationMap parseFrom(ByteString data) throws InvalidProtocolBufferException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(data);
            }

            public static SkewedColValueLocationMap parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(data, extensionRegistry);
            }

            public static SkewedColValueLocationMap parseFrom(byte[] data) throws InvalidProtocolBufferException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(data);
            }

            public static SkewedColValueLocationMap parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(data, extensionRegistry);
            }

            public static SkewedColValueLocationMap parseFrom(InputStream input) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(input);
            }

            public static SkewedColValueLocationMap parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(input, extensionRegistry);
            }

            public static SkewedColValueLocationMap parseDelimitedFrom(InputStream input) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseDelimitedFrom(input);
            }

            public static SkewedColValueLocationMap parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static SkewedColValueLocationMap parseFrom(CodedInputStream input) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(input);
            }

            public static SkewedColValueLocationMap parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (SkewedColValueLocationMap)PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
               return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.Builder.create();
            }

            public Builder newBuilderForType() {
               return newBuilder();
            }

            public static Builder newBuilder(SkewedColValueLocationMap prototype) {
               return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
               return newBuilder(this);
            }

            protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
               Builder builder = new Builder(parent);
               return builder;
            }

            static {
               defaultInstance.initFields();
            }

            public static final class Builder extends GeneratedMessage.Builder implements SkewedColValueLocationMapOrBuilder {
               private int bitField0_;
               private LazyStringList key_;
               private Object value_;

               public static final Descriptors.Descriptor getDescriptor() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor;
               }

               protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedColValueLocationMap.class, Builder.class);
               }

               private Builder() {
                  this.key_ = LazyStringArrayList.EMPTY;
                  this.value_ = "";
                  this.maybeForceBuilderInitialization();
               }

               private Builder(GeneratedMessage.BuilderParent parent) {
                  super(parent);
                  this.key_ = LazyStringArrayList.EMPTY;
                  this.value_ = "";
                  this.maybeForceBuilderInitialization();
               }

               private void maybeForceBuilderInitialization() {
                  if (HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.alwaysUseFieldBuilders) {
                  }

               }

               private static Builder create() {
                  return new Builder();
               }

               public Builder clear() {
                  super.clear();
                  this.key_ = LazyStringArrayList.EMPTY;
                  this.bitField0_ &= -2;
                  this.value_ = "";
                  this.bitField0_ &= -3;
                  return this;
               }

               public Builder clone() {
                  return create().mergeFrom(this.buildPartial());
               }

               public Descriptors.Descriptor getDescriptorForType() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor;
               }

               public SkewedColValueLocationMap getDefaultInstanceForType() {
                  return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.getDefaultInstance();
               }

               public SkewedColValueLocationMap build() {
                  SkewedColValueLocationMap result = this.buildPartial();
                  if (!result.isInitialized()) {
                     throw newUninitializedMessageException(result);
                  } else {
                     return result;
                  }
               }

               public SkewedColValueLocationMap buildPartial() {
                  SkewedColValueLocationMap result = new SkewedColValueLocationMap(this);
                  int from_bitField0_ = this.bitField0_;
                  int to_bitField0_ = 0;
                  if ((this.bitField0_ & 1) == 1) {
                     this.key_ = new UnmodifiableLazyStringList(this.key_);
                     this.bitField0_ &= -2;
                  }

                  result.key_ = this.key_;
                  if ((from_bitField0_ & 2) == 2) {
                     to_bitField0_ |= 1;
                  }

                  result.value_ = this.value_;
                  result.bitField0_ = to_bitField0_;
                  this.onBuilt();
                  return result;
               }

               public Builder mergeFrom(Message other) {
                  if (other instanceof SkewedColValueLocationMap) {
                     return this.mergeFrom((SkewedColValueLocationMap)other);
                  } else {
                     super.mergeFrom(other);
                     return this;
                  }
               }

               public Builder mergeFrom(SkewedColValueLocationMap other) {
                  if (other == HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.getDefaultInstance()) {
                     return this;
                  } else {
                     if (!other.key_.isEmpty()) {
                        if (this.key_.isEmpty()) {
                           this.key_ = other.key_;
                           this.bitField0_ &= -2;
                        } else {
                           this.ensureKeyIsMutable();
                           this.key_.addAll(other.key_);
                        }

                        this.onChanged();
                     }

                     if (other.hasValue()) {
                        this.bitField0_ |= 2;
                        this.value_ = other.value_;
                        this.onChanged();
                     }

                     this.mergeUnknownFields(other.getUnknownFields());
                     return this;
                  }
               }

               public final boolean isInitialized() {
                  return this.hasValue();
               }

               public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                  SkewedColValueLocationMap parsedMessage = null;

                  try {
                     parsedMessage = (SkewedColValueLocationMap)HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.PARSER.parsePartialFrom(input, extensionRegistry);
                  } catch (InvalidProtocolBufferException e) {
                     parsedMessage = (SkewedColValueLocationMap)e.getUnfinishedMessage();
                     throw e;
                  } finally {
                     if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                     }

                  }

                  return this;
               }

               private void ensureKeyIsMutable() {
                  if ((this.bitField0_ & 1) != 1) {
                     this.key_ = new LazyStringArrayList(this.key_);
                     this.bitField0_ |= 1;
                  }

               }

               public List getKeyList() {
                  return Collections.unmodifiableList(this.key_);
               }

               public int getKeyCount() {
                  return this.key_.size();
               }

               public String getKey(int index) {
                  return (String)this.key_.get(index);
               }

               public ByteString getKeyBytes(int index) {
                  return this.key_.getByteString(index);
               }

               public Builder setKey(int index, String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureKeyIsMutable();
                     this.key_.set(index, value);
                     this.onChanged();
                     return this;
                  }
               }

               public Builder addKey(String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureKeyIsMutable();
                     this.key_.add(value);
                     this.onChanged();
                     return this;
                  }
               }

               public Builder addAllKey(Iterable values) {
                  this.ensureKeyIsMutable();
                  com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.key_);
                  this.onChanged();
                  return this;
               }

               public Builder clearKey() {
                  this.key_ = LazyStringArrayList.EMPTY;
                  this.bitField0_ &= -2;
                  this.onChanged();
                  return this;
               }

               public Builder addKeyBytes(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.ensureKeyIsMutable();
                     this.key_.add(value);
                     this.onChanged();
                     return this;
                  }
               }

               public boolean hasValue() {
                  return (this.bitField0_ & 2) == 2;
               }

               public String getValue() {
                  Object ref = this.value_;
                  if (!(ref instanceof String)) {
                     String s = ((ByteString)ref).toStringUtf8();
                     this.value_ = s;
                     return s;
                  } else {
                     return (String)ref;
                  }
               }

               public ByteString getValueBytes() {
                  Object ref = this.value_;
                  if (ref instanceof String) {
                     ByteString b = ByteString.copyFromUtf8((String)ref);
                     this.value_ = b;
                     return b;
                  } else {
                     return (ByteString)ref;
                  }
               }

               public Builder setValue(String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 2;
                     this.value_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public Builder clearValue() {
                  this.bitField0_ &= -3;
                  this.value_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.getDefaultInstance().getValue();
                  this.onChanged();
                  return this;
               }

               public Builder setValueBytes(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 2;
                     this.value_ = value;
                     this.onChanged();
                     return this;
                  }
               }
            }
         }

         public static final class Builder extends GeneratedMessage.Builder implements SkewedInfoOrBuilder {
            private int bitField0_;
            private LazyStringList skewedColNames_;
            private List skewedColValues_;
            private RepeatedFieldBuilder skewedColValuesBuilder_;
            private List skewedColValueLocationMaps_;
            private RepeatedFieldBuilder skewedColValueLocationMapsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(SkewedInfo.class, Builder.class);
            }

            private Builder() {
               this.skewedColNames_ = LazyStringArrayList.EMPTY;
               this.skewedColValues_ = Collections.emptyList();
               this.skewedColValueLocationMaps_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.skewedColNames_ = LazyStringArrayList.EMPTY;
               this.skewedColValues_ = Collections.emptyList();
               this.skewedColValueLocationMaps_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.StorageDescriptor.SkewedInfo.alwaysUseFieldBuilders) {
                  this.getSkewedColValuesFieldBuilder();
                  this.getSkewedColValueLocationMapsFieldBuilder();
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.skewedColNames_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -2;
               if (this.skewedColValuesBuilder_ == null) {
                  this.skewedColValues_ = Collections.emptyList();
                  this.bitField0_ &= -3;
               } else {
                  this.skewedColValuesBuilder_.clear();
               }

               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.skewedColValueLocationMaps_ = Collections.emptyList();
                  this.bitField0_ &= -5;
               } else {
                  this.skewedColValueLocationMapsBuilder_.clear();
               }

               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor;
            }

            public SkewedInfo getDefaultInstanceForType() {
               return HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
            }

            public SkewedInfo build() {
               SkewedInfo result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public SkewedInfo buildPartial() {
               SkewedInfo result = new SkewedInfo(this);
               int from_bitField0_ = this.bitField0_;
               if ((this.bitField0_ & 1) == 1) {
                  this.skewedColNames_ = new UnmodifiableLazyStringList(this.skewedColNames_);
                  this.bitField0_ &= -2;
               }

               result.skewedColNames_ = this.skewedColNames_;
               if (this.skewedColValuesBuilder_ == null) {
                  if ((this.bitField0_ & 2) == 2) {
                     this.skewedColValues_ = Collections.unmodifiableList(this.skewedColValues_);
                     this.bitField0_ &= -3;
                  }

                  result.skewedColValues_ = this.skewedColValues_;
               } else {
                  result.skewedColValues_ = this.skewedColValuesBuilder_.build();
               }

               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  if ((this.bitField0_ & 4) == 4) {
                     this.skewedColValueLocationMaps_ = Collections.unmodifiableList(this.skewedColValueLocationMaps_);
                     this.bitField0_ &= -5;
                  }

                  result.skewedColValueLocationMaps_ = this.skewedColValueLocationMaps_;
               } else {
                  result.skewedColValueLocationMaps_ = this.skewedColValueLocationMapsBuilder_.build();
               }

               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof SkewedInfo) {
                  return this.mergeFrom((SkewedInfo)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(SkewedInfo other) {
               if (other == HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance()) {
                  return this;
               } else {
                  if (!other.skewedColNames_.isEmpty()) {
                     if (this.skewedColNames_.isEmpty()) {
                        this.skewedColNames_ = other.skewedColNames_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureSkewedColNamesIsMutable();
                        this.skewedColNames_.addAll(other.skewedColNames_);
                     }

                     this.onChanged();
                  }

                  if (this.skewedColValuesBuilder_ == null) {
                     if (!other.skewedColValues_.isEmpty()) {
                        if (this.skewedColValues_.isEmpty()) {
                           this.skewedColValues_ = other.skewedColValues_;
                           this.bitField0_ &= -3;
                        } else {
                           this.ensureSkewedColValuesIsMutable();
                           this.skewedColValues_.addAll(other.skewedColValues_);
                        }

                        this.onChanged();
                     }
                  } else if (!other.skewedColValues_.isEmpty()) {
                     if (this.skewedColValuesBuilder_.isEmpty()) {
                        this.skewedColValuesBuilder_.dispose();
                        this.skewedColValuesBuilder_ = null;
                        this.skewedColValues_ = other.skewedColValues_;
                        this.bitField0_ &= -3;
                        this.skewedColValuesBuilder_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.alwaysUseFieldBuilders ? this.getSkewedColValuesFieldBuilder() : null;
                     } else {
                        this.skewedColValuesBuilder_.addAllMessages(other.skewedColValues_);
                     }
                  }

                  if (this.skewedColValueLocationMapsBuilder_ == null) {
                     if (!other.skewedColValueLocationMaps_.isEmpty()) {
                        if (this.skewedColValueLocationMaps_.isEmpty()) {
                           this.skewedColValueLocationMaps_ = other.skewedColValueLocationMaps_;
                           this.bitField0_ &= -5;
                        } else {
                           this.ensureSkewedColValueLocationMapsIsMutable();
                           this.skewedColValueLocationMaps_.addAll(other.skewedColValueLocationMaps_);
                        }

                        this.onChanged();
                     }
                  } else if (!other.skewedColValueLocationMaps_.isEmpty()) {
                     if (this.skewedColValueLocationMapsBuilder_.isEmpty()) {
                        this.skewedColValueLocationMapsBuilder_.dispose();
                        this.skewedColValueLocationMapsBuilder_ = null;
                        this.skewedColValueLocationMaps_ = other.skewedColValueLocationMaps_;
                        this.bitField0_ &= -5;
                        this.skewedColValueLocationMapsBuilder_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.alwaysUseFieldBuilders ? this.getSkewedColValueLocationMapsFieldBuilder() : null;
                     } else {
                        this.skewedColValueLocationMapsBuilder_.addAllMessages(other.skewedColValueLocationMaps_);
                     }
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               for(int i = 0; i < this.getSkewedColValueLocationMapsCount(); ++i) {
                  if (!this.getSkewedColValueLocationMaps(i).isInitialized()) {
                     return false;
                  }
               }

               return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               SkewedInfo parsedMessage = null;

               try {
                  parsedMessage = (SkewedInfo)HbaseMetastoreProto.StorageDescriptor.SkewedInfo.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (SkewedInfo)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            private void ensureSkewedColNamesIsMutable() {
               if ((this.bitField0_ & 1) != 1) {
                  this.skewedColNames_ = new LazyStringArrayList(this.skewedColNames_);
                  this.bitField0_ |= 1;
               }

            }

            public List getSkewedColNamesList() {
               return Collections.unmodifiableList(this.skewedColNames_);
            }

            public int getSkewedColNamesCount() {
               return this.skewedColNames_.size();
            }

            public String getSkewedColNames(int index) {
               return (String)this.skewedColNames_.get(index);
            }

            public ByteString getSkewedColNamesBytes(int index) {
               return this.skewedColNames_.getByteString(index);
            }

            public Builder setSkewedColNames(int index, String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureSkewedColNamesIsMutable();
                  this.skewedColNames_.set(index, value);
                  this.onChanged();
                  return this;
               }
            }

            public Builder addSkewedColNames(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureSkewedColNamesIsMutable();
                  this.skewedColNames_.add(value);
                  this.onChanged();
                  return this;
               }
            }

            public Builder addAllSkewedColNames(Iterable values) {
               this.ensureSkewedColNamesIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.skewedColNames_);
               this.onChanged();
               return this;
            }

            public Builder clearSkewedColNames() {
               this.skewedColNames_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -2;
               this.onChanged();
               return this;
            }

            public Builder addSkewedColNamesBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureSkewedColNamesIsMutable();
                  this.skewedColNames_.add(value);
                  this.onChanged();
                  return this;
               }
            }

            private void ensureSkewedColValuesIsMutable() {
               if ((this.bitField0_ & 2) != 2) {
                  this.skewedColValues_ = new ArrayList(this.skewedColValues_);
                  this.bitField0_ |= 2;
               }

            }

            public List getSkewedColValuesList() {
               return this.skewedColValuesBuilder_ == null ? Collections.unmodifiableList(this.skewedColValues_) : this.skewedColValuesBuilder_.getMessageList();
            }

            public int getSkewedColValuesCount() {
               return this.skewedColValuesBuilder_ == null ? this.skewedColValues_.size() : this.skewedColValuesBuilder_.getCount();
            }

            public SkewedColValueList getSkewedColValues(int index) {
               return this.skewedColValuesBuilder_ == null ? (SkewedColValueList)this.skewedColValues_.get(index) : (SkewedColValueList)this.skewedColValuesBuilder_.getMessage(index);
            }

            public Builder setSkewedColValues(int index, SkewedColValueList value) {
               if (this.skewedColValuesBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.set(index, value);
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.setMessage(index, value);
               }

               return this;
            }

            public Builder setSkewedColValues(int index, SkewedColValueList.Builder builderForValue) {
               if (this.skewedColValuesBuilder_ == null) {
                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.set(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.setMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addSkewedColValues(SkewedColValueList value) {
               if (this.skewedColValuesBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.add(value);
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.addMessage(value);
               }

               return this;
            }

            public Builder addSkewedColValues(int index, SkewedColValueList value) {
               if (this.skewedColValuesBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.add(index, value);
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.addMessage(index, value);
               }

               return this;
            }

            public Builder addSkewedColValues(SkewedColValueList.Builder builderForValue) {
               if (this.skewedColValuesBuilder_ == null) {
                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.add(builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.addMessage(builderForValue.build());
               }

               return this;
            }

            public Builder addSkewedColValues(int index, SkewedColValueList.Builder builderForValue) {
               if (this.skewedColValuesBuilder_ == null) {
                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.add(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.addMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addAllSkewedColValues(Iterable values) {
               if (this.skewedColValuesBuilder_ == null) {
                  this.ensureSkewedColValuesIsMutable();
                  com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.skewedColValues_);
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.addAllMessages(values);
               }

               return this;
            }

            public Builder clearSkewedColValues() {
               if (this.skewedColValuesBuilder_ == null) {
                  this.skewedColValues_ = Collections.emptyList();
                  this.bitField0_ &= -3;
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.clear();
               }

               return this;
            }

            public Builder removeSkewedColValues(int index) {
               if (this.skewedColValuesBuilder_ == null) {
                  this.ensureSkewedColValuesIsMutable();
                  this.skewedColValues_.remove(index);
                  this.onChanged();
               } else {
                  this.skewedColValuesBuilder_.remove(index);
               }

               return this;
            }

            public SkewedColValueList.Builder getSkewedColValuesBuilder(int index) {
               return (SkewedColValueList.Builder)this.getSkewedColValuesFieldBuilder().getBuilder(index);
            }

            public SkewedColValueListOrBuilder getSkewedColValuesOrBuilder(int index) {
               return this.skewedColValuesBuilder_ == null ? (SkewedColValueListOrBuilder)this.skewedColValues_.get(index) : (SkewedColValueListOrBuilder)this.skewedColValuesBuilder_.getMessageOrBuilder(index);
            }

            public List getSkewedColValuesOrBuilderList() {
               return this.skewedColValuesBuilder_ != null ? this.skewedColValuesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.skewedColValues_);
            }

            public SkewedColValueList.Builder addSkewedColValuesBuilder() {
               return (SkewedColValueList.Builder)this.getSkewedColValuesFieldBuilder().addBuilder(HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.getDefaultInstance());
            }

            public SkewedColValueList.Builder addSkewedColValuesBuilder(int index) {
               return (SkewedColValueList.Builder)this.getSkewedColValuesFieldBuilder().addBuilder(index, HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.getDefaultInstance());
            }

            public List getSkewedColValuesBuilderList() {
               return this.getSkewedColValuesFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder getSkewedColValuesFieldBuilder() {
               if (this.skewedColValuesBuilder_ == null) {
                  this.skewedColValuesBuilder_ = new RepeatedFieldBuilder(this.skewedColValues_, (this.bitField0_ & 2) == 2, this.getParentForChildren(), this.isClean());
                  this.skewedColValues_ = null;
               }

               return this.skewedColValuesBuilder_;
            }

            private void ensureSkewedColValueLocationMapsIsMutable() {
               if ((this.bitField0_ & 4) != 4) {
                  this.skewedColValueLocationMaps_ = new ArrayList(this.skewedColValueLocationMaps_);
                  this.bitField0_ |= 4;
               }

            }

            public List getSkewedColValueLocationMapsList() {
               return this.skewedColValueLocationMapsBuilder_ == null ? Collections.unmodifiableList(this.skewedColValueLocationMaps_) : this.skewedColValueLocationMapsBuilder_.getMessageList();
            }

            public int getSkewedColValueLocationMapsCount() {
               return this.skewedColValueLocationMapsBuilder_ == null ? this.skewedColValueLocationMaps_.size() : this.skewedColValueLocationMapsBuilder_.getCount();
            }

            public SkewedColValueLocationMap getSkewedColValueLocationMaps(int index) {
               return this.skewedColValueLocationMapsBuilder_ == null ? (SkewedColValueLocationMap)this.skewedColValueLocationMaps_.get(index) : (SkewedColValueLocationMap)this.skewedColValueLocationMapsBuilder_.getMessage(index);
            }

            public Builder setSkewedColValueLocationMaps(int index, SkewedColValueLocationMap value) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.set(index, value);
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.setMessage(index, value);
               }

               return this;
            }

            public Builder setSkewedColValueLocationMaps(int index, SkewedColValueLocationMap.Builder builderForValue) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.set(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.setMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addSkewedColValueLocationMaps(SkewedColValueLocationMap value) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.add(value);
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.addMessage(value);
               }

               return this;
            }

            public Builder addSkewedColValueLocationMaps(int index, SkewedColValueLocationMap value) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.add(index, value);
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.addMessage(index, value);
               }

               return this;
            }

            public Builder addSkewedColValueLocationMaps(SkewedColValueLocationMap.Builder builderForValue) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.add(builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.addMessage(builderForValue.build());
               }

               return this;
            }

            public Builder addSkewedColValueLocationMaps(int index, SkewedColValueLocationMap.Builder builderForValue) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.add(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.addMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addAllSkewedColValueLocationMaps(Iterable values) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.ensureSkewedColValueLocationMapsIsMutable();
                  com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.skewedColValueLocationMaps_);
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.addAllMessages(values);
               }

               return this;
            }

            public Builder clearSkewedColValueLocationMaps() {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.skewedColValueLocationMaps_ = Collections.emptyList();
                  this.bitField0_ &= -5;
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.clear();
               }

               return this;
            }

            public Builder removeSkewedColValueLocationMaps(int index) {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.ensureSkewedColValueLocationMapsIsMutable();
                  this.skewedColValueLocationMaps_.remove(index);
                  this.onChanged();
               } else {
                  this.skewedColValueLocationMapsBuilder_.remove(index);
               }

               return this;
            }

            public SkewedColValueLocationMap.Builder getSkewedColValueLocationMapsBuilder(int index) {
               return (SkewedColValueLocationMap.Builder)this.getSkewedColValueLocationMapsFieldBuilder().getBuilder(index);
            }

            public SkewedColValueLocationMapOrBuilder getSkewedColValueLocationMapsOrBuilder(int index) {
               return this.skewedColValueLocationMapsBuilder_ == null ? (SkewedColValueLocationMapOrBuilder)this.skewedColValueLocationMaps_.get(index) : (SkewedColValueLocationMapOrBuilder)this.skewedColValueLocationMapsBuilder_.getMessageOrBuilder(index);
            }

            public List getSkewedColValueLocationMapsOrBuilderList() {
               return this.skewedColValueLocationMapsBuilder_ != null ? this.skewedColValueLocationMapsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.skewedColValueLocationMaps_);
            }

            public SkewedColValueLocationMap.Builder addSkewedColValueLocationMapsBuilder() {
               return (SkewedColValueLocationMap.Builder)this.getSkewedColValueLocationMapsFieldBuilder().addBuilder(HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.getDefaultInstance());
            }

            public SkewedColValueLocationMap.Builder addSkewedColValueLocationMapsBuilder(int index) {
               return (SkewedColValueLocationMap.Builder)this.getSkewedColValueLocationMapsFieldBuilder().addBuilder(index, HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.getDefaultInstance());
            }

            public List getSkewedColValueLocationMapsBuilderList() {
               return this.getSkewedColValueLocationMapsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder getSkewedColValueLocationMapsFieldBuilder() {
               if (this.skewedColValueLocationMapsBuilder_ == null) {
                  this.skewedColValueLocationMapsBuilder_ = new RepeatedFieldBuilder(this.skewedColValueLocationMaps_, (this.bitField0_ & 4) == 4, this.getParentForChildren(), this.isClean());
                  this.skewedColValueLocationMaps_ = null;
               }

               return this.skewedColValueLocationMapsBuilder_;
            }
         }

         public interface SkewedColValueListOrBuilder extends MessageOrBuilder {
            List getSkewedColValueList();

            int getSkewedColValueCount();

            String getSkewedColValue(int var1);

            ByteString getSkewedColValueBytes(int var1);
         }

         public interface SkewedColValueLocationMapOrBuilder extends MessageOrBuilder {
            List getKeyList();

            int getKeyCount();

            String getKey(int var1);

            ByteString getKeyBytes(int var1);

            boolean hasValue();

            String getValue();

            ByteString getValueBytes();
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements StorageDescriptorOrBuilder {
         private int bitField0_;
         private List cols_;
         private RepeatedFieldBuilder colsBuilder_;
         private Object inputFormat_;
         private Object outputFormat_;
         private boolean isCompressed_;
         private int numBuckets_;
         private SerDeInfo serdeInfo_;
         private SingleFieldBuilder serdeInfoBuilder_;
         private LazyStringList bucketCols_;
         private List sortCols_;
         private RepeatedFieldBuilder sortColsBuilder_;
         private SkewedInfo skewedInfo_;
         private SingleFieldBuilder skewedInfoBuilder_;
         private boolean storedAsSubDirectories_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(StorageDescriptor.class, Builder.class);
         }

         private Builder() {
            this.cols_ = Collections.emptyList();
            this.inputFormat_ = "";
            this.outputFormat_ = "";
            this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
            this.bucketCols_ = LazyStringArrayList.EMPTY;
            this.sortCols_ = Collections.emptyList();
            this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.cols_ = Collections.emptyList();
            this.inputFormat_ = "";
            this.outputFormat_ = "";
            this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
            this.bucketCols_ = LazyStringArrayList.EMPTY;
            this.sortCols_ = Collections.emptyList();
            this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.StorageDescriptor.alwaysUseFieldBuilders) {
               this.getColsFieldBuilder();
               this.getSerdeInfoFieldBuilder();
               this.getSortColsFieldBuilder();
               this.getSkewedInfoFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.colsBuilder_ == null) {
               this.cols_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.colsBuilder_.clear();
            }

            this.inputFormat_ = "";
            this.bitField0_ &= -3;
            this.outputFormat_ = "";
            this.bitField0_ &= -5;
            this.isCompressed_ = false;
            this.bitField0_ &= -9;
            this.numBuckets_ = 0;
            this.bitField0_ &= -17;
            if (this.serdeInfoBuilder_ == null) {
               this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
            } else {
               this.serdeInfoBuilder_.clear();
            }

            this.bitField0_ &= -33;
            this.bucketCols_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -65;
            if (this.sortColsBuilder_ == null) {
               this.sortCols_ = Collections.emptyList();
               this.bitField0_ &= -129;
            } else {
               this.sortColsBuilder_.clear();
            }

            if (this.skewedInfoBuilder_ == null) {
               this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
            } else {
               this.skewedInfoBuilder_.clear();
            }

            this.bitField0_ &= -257;
            this.storedAsSubDirectories_ = false;
            this.bitField0_ &= -513;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor;
         }

         public StorageDescriptor getDefaultInstanceForType() {
            return HbaseMetastoreProto.StorageDescriptor.getDefaultInstance();
         }

         public StorageDescriptor build() {
            StorageDescriptor result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public StorageDescriptor buildPartial() {
            StorageDescriptor result = new StorageDescriptor(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if (this.colsBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.cols_ = Collections.unmodifiableList(this.cols_);
                  this.bitField0_ &= -2;
               }

               result.cols_ = this.cols_;
            } else {
               result.cols_ = this.colsBuilder_.build();
            }

            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 1;
            }

            result.inputFormat_ = this.inputFormat_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 2;
            }

            result.outputFormat_ = this.outputFormat_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 4;
            }

            result.isCompressed_ = this.isCompressed_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 8;
            }

            result.numBuckets_ = this.numBuckets_;
            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 16;
            }

            if (this.serdeInfoBuilder_ == null) {
               result.serdeInfo_ = this.serdeInfo_;
            } else {
               result.serdeInfo_ = (SerDeInfo)this.serdeInfoBuilder_.build();
            }

            if ((this.bitField0_ & 64) == 64) {
               this.bucketCols_ = new UnmodifiableLazyStringList(this.bucketCols_);
               this.bitField0_ &= -65;
            }

            result.bucketCols_ = this.bucketCols_;
            if (this.sortColsBuilder_ == null) {
               if ((this.bitField0_ & 128) == 128) {
                  this.sortCols_ = Collections.unmodifiableList(this.sortCols_);
                  this.bitField0_ &= -129;
               }

               result.sortCols_ = this.sortCols_;
            } else {
               result.sortCols_ = this.sortColsBuilder_.build();
            }

            if ((from_bitField0_ & 256) == 256) {
               to_bitField0_ |= 32;
            }

            if (this.skewedInfoBuilder_ == null) {
               result.skewedInfo_ = this.skewedInfo_;
            } else {
               result.skewedInfo_ = (SkewedInfo)this.skewedInfoBuilder_.build();
            }

            if ((from_bitField0_ & 512) == 512) {
               to_bitField0_ |= 64;
            }

            result.storedAsSubDirectories_ = this.storedAsSubDirectories_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof StorageDescriptor) {
               return this.mergeFrom((StorageDescriptor)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(StorageDescriptor other) {
            if (other == HbaseMetastoreProto.StorageDescriptor.getDefaultInstance()) {
               return this;
            } else {
               if (this.colsBuilder_ == null) {
                  if (!other.cols_.isEmpty()) {
                     if (this.cols_.isEmpty()) {
                        this.cols_ = other.cols_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureColsIsMutable();
                        this.cols_.addAll(other.cols_);
                     }

                     this.onChanged();
                  }
               } else if (!other.cols_.isEmpty()) {
                  if (this.colsBuilder_.isEmpty()) {
                     this.colsBuilder_.dispose();
                     this.colsBuilder_ = null;
                     this.cols_ = other.cols_;
                     this.bitField0_ &= -2;
                     this.colsBuilder_ = HbaseMetastoreProto.StorageDescriptor.alwaysUseFieldBuilders ? this.getColsFieldBuilder() : null;
                  } else {
                     this.colsBuilder_.addAllMessages(other.cols_);
                  }
               }

               if (other.hasInputFormat()) {
                  this.bitField0_ |= 2;
                  this.inputFormat_ = other.inputFormat_;
                  this.onChanged();
               }

               if (other.hasOutputFormat()) {
                  this.bitField0_ |= 4;
                  this.outputFormat_ = other.outputFormat_;
                  this.onChanged();
               }

               if (other.hasIsCompressed()) {
                  this.setIsCompressed(other.getIsCompressed());
               }

               if (other.hasNumBuckets()) {
                  this.setNumBuckets(other.getNumBuckets());
               }

               if (other.hasSerdeInfo()) {
                  this.mergeSerdeInfo(other.getSerdeInfo());
               }

               if (!other.bucketCols_.isEmpty()) {
                  if (this.bucketCols_.isEmpty()) {
                     this.bucketCols_ = other.bucketCols_;
                     this.bitField0_ &= -65;
                  } else {
                     this.ensureBucketColsIsMutable();
                     this.bucketCols_.addAll(other.bucketCols_);
                  }

                  this.onChanged();
               }

               if (this.sortColsBuilder_ == null) {
                  if (!other.sortCols_.isEmpty()) {
                     if (this.sortCols_.isEmpty()) {
                        this.sortCols_ = other.sortCols_;
                        this.bitField0_ &= -129;
                     } else {
                        this.ensureSortColsIsMutable();
                        this.sortCols_.addAll(other.sortCols_);
                     }

                     this.onChanged();
                  }
               } else if (!other.sortCols_.isEmpty()) {
                  if (this.sortColsBuilder_.isEmpty()) {
                     this.sortColsBuilder_.dispose();
                     this.sortColsBuilder_ = null;
                     this.sortCols_ = other.sortCols_;
                     this.bitField0_ &= -129;
                     this.sortColsBuilder_ = HbaseMetastoreProto.StorageDescriptor.alwaysUseFieldBuilders ? this.getSortColsFieldBuilder() : null;
                  } else {
                     this.sortColsBuilder_.addAllMessages(other.sortCols_);
                  }
               }

               if (other.hasSkewedInfo()) {
                  this.mergeSkewedInfo(other.getSkewedInfo());
               }

               if (other.hasStoredAsSubDirectories()) {
                  this.setStoredAsSubDirectories(other.getStoredAsSubDirectories());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getColsCount(); ++i) {
               if (!this.getCols(i).isInitialized()) {
                  return false;
               }
            }

            if (this.hasSerdeInfo() && !this.getSerdeInfo().isInitialized()) {
               return false;
            } else {
               for(int i = 0; i < this.getSortColsCount(); ++i) {
                  if (!this.getSortCols(i).isInitialized()) {
                     return false;
                  }
               }

               if (this.hasSkewedInfo() && !this.getSkewedInfo().isInitialized()) {
                  return false;
               } else {
                  return true;
               }
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            StorageDescriptor parsedMessage = null;

            try {
               parsedMessage = (StorageDescriptor)HbaseMetastoreProto.StorageDescriptor.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (StorageDescriptor)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureColsIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.cols_ = new ArrayList(this.cols_);
               this.bitField0_ |= 1;
            }

         }

         public List getColsList() {
            return this.colsBuilder_ == null ? Collections.unmodifiableList(this.cols_) : this.colsBuilder_.getMessageList();
         }

         public int getColsCount() {
            return this.colsBuilder_ == null ? this.cols_.size() : this.colsBuilder_.getCount();
         }

         public FieldSchema getCols(int index) {
            return this.colsBuilder_ == null ? (FieldSchema)this.cols_.get(index) : (FieldSchema)this.colsBuilder_.getMessage(index);
         }

         public Builder setCols(int index, FieldSchema value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.set(index, value);
               this.onChanged();
            } else {
               this.colsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setCols(int index, FieldSchema.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addCols(FieldSchema value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.add(value);
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addCols(int index, FieldSchema value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.add(index, value);
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addCols(FieldSchema.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addCols(int index, FieldSchema.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllCols(Iterable values) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.cols_);
               this.onChanged();
            } else {
               this.colsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearCols() {
            if (this.colsBuilder_ == null) {
               this.cols_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.colsBuilder_.clear();
            }

            return this;
         }

         public Builder removeCols(int index) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.remove(index);
               this.onChanged();
            } else {
               this.colsBuilder_.remove(index);
            }

            return this;
         }

         public FieldSchema.Builder getColsBuilder(int index) {
            return (FieldSchema.Builder)this.getColsFieldBuilder().getBuilder(index);
         }

         public FieldSchemaOrBuilder getColsOrBuilder(int index) {
            return this.colsBuilder_ == null ? (FieldSchemaOrBuilder)this.cols_.get(index) : (FieldSchemaOrBuilder)this.colsBuilder_.getMessageOrBuilder(index);
         }

         public List getColsOrBuilderList() {
            return this.colsBuilder_ != null ? this.colsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.cols_);
         }

         public FieldSchema.Builder addColsBuilder() {
            return (FieldSchema.Builder)this.getColsFieldBuilder().addBuilder(HbaseMetastoreProto.FieldSchema.getDefaultInstance());
         }

         public FieldSchema.Builder addColsBuilder(int index) {
            return (FieldSchema.Builder)this.getColsFieldBuilder().addBuilder(index, HbaseMetastoreProto.FieldSchema.getDefaultInstance());
         }

         public List getColsBuilderList() {
            return this.getColsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getColsFieldBuilder() {
            if (this.colsBuilder_ == null) {
               this.colsBuilder_ = new RepeatedFieldBuilder(this.cols_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.cols_ = null;
            }

            return this.colsBuilder_;
         }

         public boolean hasInputFormat() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getInputFormat() {
            Object ref = this.inputFormat_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.inputFormat_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getInputFormatBytes() {
            Object ref = this.inputFormat_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.inputFormat_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setInputFormat(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputFormat_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearInputFormat() {
            this.bitField0_ &= -3;
            this.inputFormat_ = HbaseMetastoreProto.StorageDescriptor.getDefaultInstance().getInputFormat();
            this.onChanged();
            return this;
         }

         public Builder setInputFormatBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputFormat_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOutputFormat() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getOutputFormat() {
            Object ref = this.outputFormat_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.outputFormat_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOutputFormatBytes() {
            Object ref = this.outputFormat_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.outputFormat_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOutputFormat(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputFormat_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOutputFormat() {
            this.bitField0_ &= -5;
            this.outputFormat_ = HbaseMetastoreProto.StorageDescriptor.getDefaultInstance().getOutputFormat();
            this.onChanged();
            return this;
         }

         public Builder setOutputFormatBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputFormat_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasIsCompressed() {
            return (this.bitField0_ & 8) == 8;
         }

         public boolean getIsCompressed() {
            return this.isCompressed_;
         }

         public Builder setIsCompressed(boolean value) {
            this.bitField0_ |= 8;
            this.isCompressed_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearIsCompressed() {
            this.bitField0_ &= -9;
            this.isCompressed_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasNumBuckets() {
            return (this.bitField0_ & 16) == 16;
         }

         public int getNumBuckets() {
            return this.numBuckets_;
         }

         public Builder setNumBuckets(int value) {
            this.bitField0_ |= 16;
            this.numBuckets_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearNumBuckets() {
            this.bitField0_ &= -17;
            this.numBuckets_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasSerdeInfo() {
            return (this.bitField0_ & 32) == 32;
         }

         public SerDeInfo getSerdeInfo() {
            return this.serdeInfoBuilder_ == null ? this.serdeInfo_ : (SerDeInfo)this.serdeInfoBuilder_.getMessage();
         }

         public Builder setSerdeInfo(SerDeInfo value) {
            if (this.serdeInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.serdeInfo_ = value;
               this.onChanged();
            } else {
               this.serdeInfoBuilder_.setMessage(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder setSerdeInfo(SerDeInfo.Builder builderForValue) {
            if (this.serdeInfoBuilder_ == null) {
               this.serdeInfo_ = builderForValue.build();
               this.onChanged();
            } else {
               this.serdeInfoBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder mergeSerdeInfo(SerDeInfo value) {
            if (this.serdeInfoBuilder_ == null) {
               if ((this.bitField0_ & 32) == 32 && this.serdeInfo_ != HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance()) {
                  this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.newBuilder(this.serdeInfo_).mergeFrom(value).buildPartial();
               } else {
                  this.serdeInfo_ = value;
               }

               this.onChanged();
            } else {
               this.serdeInfoBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder clearSerdeInfo() {
            if (this.serdeInfoBuilder_ == null) {
               this.serdeInfo_ = HbaseMetastoreProto.StorageDescriptor.SerDeInfo.getDefaultInstance();
               this.onChanged();
            } else {
               this.serdeInfoBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public SerDeInfo.Builder getSerdeInfoBuilder() {
            this.bitField0_ |= 32;
            this.onChanged();
            return (SerDeInfo.Builder)this.getSerdeInfoFieldBuilder().getBuilder();
         }

         public SerDeInfoOrBuilder getSerdeInfoOrBuilder() {
            return (SerDeInfoOrBuilder)(this.serdeInfoBuilder_ != null ? (SerDeInfoOrBuilder)this.serdeInfoBuilder_.getMessageOrBuilder() : this.serdeInfo_);
         }

         private SingleFieldBuilder getSerdeInfoFieldBuilder() {
            if (this.serdeInfoBuilder_ == null) {
               this.serdeInfoBuilder_ = new SingleFieldBuilder(this.serdeInfo_, this.getParentForChildren(), this.isClean());
               this.serdeInfo_ = null;
            }

            return this.serdeInfoBuilder_;
         }

         private void ensureBucketColsIsMutable() {
            if ((this.bitField0_ & 64) != 64) {
               this.bucketCols_ = new LazyStringArrayList(this.bucketCols_);
               this.bitField0_ |= 64;
            }

         }

         public List getBucketColsList() {
            return Collections.unmodifiableList(this.bucketCols_);
         }

         public int getBucketColsCount() {
            return this.bucketCols_.size();
         }

         public String getBucketCols(int index) {
            return (String)this.bucketCols_.get(index);
         }

         public ByteString getBucketColsBytes(int index) {
            return this.bucketCols_.getByteString(index);
         }

         public Builder setBucketCols(int index, String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureBucketColsIsMutable();
               this.bucketCols_.set(index, value);
               this.onChanged();
               return this;
            }
         }

         public Builder addBucketCols(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureBucketColsIsMutable();
               this.bucketCols_.add(value);
               this.onChanged();
               return this;
            }
         }

         public Builder addAllBucketCols(Iterable values) {
            this.ensureBucketColsIsMutable();
            com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.bucketCols_);
            this.onChanged();
            return this;
         }

         public Builder clearBucketCols() {
            this.bucketCols_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -65;
            this.onChanged();
            return this;
         }

         public Builder addBucketColsBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.ensureBucketColsIsMutable();
               this.bucketCols_.add(value);
               this.onChanged();
               return this;
            }
         }

         private void ensureSortColsIsMutable() {
            if ((this.bitField0_ & 128) != 128) {
               this.sortCols_ = new ArrayList(this.sortCols_);
               this.bitField0_ |= 128;
            }

         }

         public List getSortColsList() {
            return this.sortColsBuilder_ == null ? Collections.unmodifiableList(this.sortCols_) : this.sortColsBuilder_.getMessageList();
         }

         public int getSortColsCount() {
            return this.sortColsBuilder_ == null ? this.sortCols_.size() : this.sortColsBuilder_.getCount();
         }

         public Order getSortCols(int index) {
            return this.sortColsBuilder_ == null ? (Order)this.sortCols_.get(index) : (Order)this.sortColsBuilder_.getMessage(index);
         }

         public Builder setSortCols(int index, Order value) {
            if (this.sortColsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureSortColsIsMutable();
               this.sortCols_.set(index, value);
               this.onChanged();
            } else {
               this.sortColsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setSortCols(int index, Order.Builder builderForValue) {
            if (this.sortColsBuilder_ == null) {
               this.ensureSortColsIsMutable();
               this.sortCols_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.sortColsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addSortCols(Order value) {
            if (this.sortColsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureSortColsIsMutable();
               this.sortCols_.add(value);
               this.onChanged();
            } else {
               this.sortColsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addSortCols(int index, Order value) {
            if (this.sortColsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureSortColsIsMutable();
               this.sortCols_.add(index, value);
               this.onChanged();
            } else {
               this.sortColsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addSortCols(Order.Builder builderForValue) {
            if (this.sortColsBuilder_ == null) {
               this.ensureSortColsIsMutable();
               this.sortCols_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.sortColsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addSortCols(int index, Order.Builder builderForValue) {
            if (this.sortColsBuilder_ == null) {
               this.ensureSortColsIsMutable();
               this.sortCols_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.sortColsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllSortCols(Iterable values) {
            if (this.sortColsBuilder_ == null) {
               this.ensureSortColsIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.sortCols_);
               this.onChanged();
            } else {
               this.sortColsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearSortCols() {
            if (this.sortColsBuilder_ == null) {
               this.sortCols_ = Collections.emptyList();
               this.bitField0_ &= -129;
               this.onChanged();
            } else {
               this.sortColsBuilder_.clear();
            }

            return this;
         }

         public Builder removeSortCols(int index) {
            if (this.sortColsBuilder_ == null) {
               this.ensureSortColsIsMutable();
               this.sortCols_.remove(index);
               this.onChanged();
            } else {
               this.sortColsBuilder_.remove(index);
            }

            return this;
         }

         public Order.Builder getSortColsBuilder(int index) {
            return (Order.Builder)this.getSortColsFieldBuilder().getBuilder(index);
         }

         public OrderOrBuilder getSortColsOrBuilder(int index) {
            return this.sortColsBuilder_ == null ? (OrderOrBuilder)this.sortCols_.get(index) : (OrderOrBuilder)this.sortColsBuilder_.getMessageOrBuilder(index);
         }

         public List getSortColsOrBuilderList() {
            return this.sortColsBuilder_ != null ? this.sortColsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.sortCols_);
         }

         public Order.Builder addSortColsBuilder() {
            return (Order.Builder)this.getSortColsFieldBuilder().addBuilder(HbaseMetastoreProto.StorageDescriptor.Order.getDefaultInstance());
         }

         public Order.Builder addSortColsBuilder(int index) {
            return (Order.Builder)this.getSortColsFieldBuilder().addBuilder(index, HbaseMetastoreProto.StorageDescriptor.Order.getDefaultInstance());
         }

         public List getSortColsBuilderList() {
            return this.getSortColsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getSortColsFieldBuilder() {
            if (this.sortColsBuilder_ == null) {
               this.sortColsBuilder_ = new RepeatedFieldBuilder(this.sortCols_, (this.bitField0_ & 128) == 128, this.getParentForChildren(), this.isClean());
               this.sortCols_ = null;
            }

            return this.sortColsBuilder_;
         }

         public boolean hasSkewedInfo() {
            return (this.bitField0_ & 256) == 256;
         }

         public SkewedInfo getSkewedInfo() {
            return this.skewedInfoBuilder_ == null ? this.skewedInfo_ : (SkewedInfo)this.skewedInfoBuilder_.getMessage();
         }

         public Builder setSkewedInfo(SkewedInfo value) {
            if (this.skewedInfoBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.skewedInfo_ = value;
               this.onChanged();
            } else {
               this.skewedInfoBuilder_.setMessage(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder setSkewedInfo(SkewedInfo.Builder builderForValue) {
            if (this.skewedInfoBuilder_ == null) {
               this.skewedInfo_ = builderForValue.build();
               this.onChanged();
            } else {
               this.skewedInfoBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder mergeSkewedInfo(SkewedInfo value) {
            if (this.skewedInfoBuilder_ == null) {
               if ((this.bitField0_ & 256) == 256 && this.skewedInfo_ != HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance()) {
                  this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.newBuilder(this.skewedInfo_).mergeFrom(value).buildPartial();
               } else {
                  this.skewedInfo_ = value;
               }

               this.onChanged();
            } else {
               this.skewedInfoBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder clearSkewedInfo() {
            if (this.skewedInfoBuilder_ == null) {
               this.skewedInfo_ = HbaseMetastoreProto.StorageDescriptor.SkewedInfo.getDefaultInstance();
               this.onChanged();
            } else {
               this.skewedInfoBuilder_.clear();
            }

            this.bitField0_ &= -257;
            return this;
         }

         public SkewedInfo.Builder getSkewedInfoBuilder() {
            this.bitField0_ |= 256;
            this.onChanged();
            return (SkewedInfo.Builder)this.getSkewedInfoFieldBuilder().getBuilder();
         }

         public SkewedInfoOrBuilder getSkewedInfoOrBuilder() {
            return (SkewedInfoOrBuilder)(this.skewedInfoBuilder_ != null ? (SkewedInfoOrBuilder)this.skewedInfoBuilder_.getMessageOrBuilder() : this.skewedInfo_);
         }

         private SingleFieldBuilder getSkewedInfoFieldBuilder() {
            if (this.skewedInfoBuilder_ == null) {
               this.skewedInfoBuilder_ = new SingleFieldBuilder(this.skewedInfo_, this.getParentForChildren(), this.isClean());
               this.skewedInfo_ = null;
            }

            return this.skewedInfoBuilder_;
         }

         public boolean hasStoredAsSubDirectories() {
            return (this.bitField0_ & 512) == 512;
         }

         public boolean getStoredAsSubDirectories() {
            return this.storedAsSubDirectories_;
         }

         public Builder setStoredAsSubDirectories(boolean value) {
            this.bitField0_ |= 512;
            this.storedAsSubDirectories_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearStoredAsSubDirectories() {
            this.bitField0_ &= -513;
            this.storedAsSubDirectories_ = false;
            this.onChanged();
            return this;
         }
      }

      public interface OrderOrBuilder extends MessageOrBuilder {
         boolean hasColumnName();

         String getColumnName();

         ByteString getColumnNameBytes();

         boolean hasOrder();

         int getOrder();
      }

      public interface SerDeInfoOrBuilder extends MessageOrBuilder {
         boolean hasName();

         String getName();

         ByteString getNameBytes();

         boolean hasSerializationLib();

         String getSerializationLib();

         ByteString getSerializationLibBytes();

         boolean hasParameters();

         Parameters getParameters();

         ParametersOrBuilder getParametersOrBuilder();
      }

      public interface SkewedInfoOrBuilder extends MessageOrBuilder {
         List getSkewedColNamesList();

         int getSkewedColNamesCount();

         String getSkewedColNames(int var1);

         ByteString getSkewedColNamesBytes(int var1);

         List getSkewedColValuesList();

         SkewedInfo.SkewedColValueList getSkewedColValues(int var1);

         int getSkewedColValuesCount();

         List getSkewedColValuesOrBuilderList();

         SkewedInfo.SkewedColValueListOrBuilder getSkewedColValuesOrBuilder(int var1);

         List getSkewedColValueLocationMapsList();

         SkewedInfo.SkewedColValueLocationMap getSkewedColValueLocationMaps(int var1);

         int getSkewedColValueLocationMapsCount();

         List getSkewedColValueLocationMapsOrBuilderList();

         SkewedInfo.SkewedColValueLocationMapOrBuilder getSkewedColValueLocationMapsOrBuilder(int var1);
      }
   }

   public static final class Table extends GeneratedMessage implements TableOrBuilder {
      private static final Table defaultInstance = new Table(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Table parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Table(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int OWNER_FIELD_NUMBER = 1;
      private Object owner_;
      public static final int CREATE_TIME_FIELD_NUMBER = 2;
      private long createTime_;
      public static final int LAST_ACCESS_TIME_FIELD_NUMBER = 3;
      private long lastAccessTime_;
      public static final int RETENTION_FIELD_NUMBER = 4;
      private long retention_;
      public static final int LOCATION_FIELD_NUMBER = 5;
      private Object location_;
      public static final int SD_PARAMETERS_FIELD_NUMBER = 6;
      private Parameters sdParameters_;
      public static final int SD_HASH_FIELD_NUMBER = 7;
      private ByteString sdHash_;
      public static final int PARTITION_KEYS_FIELD_NUMBER = 8;
      private List partitionKeys_;
      public static final int PARAMETERS_FIELD_NUMBER = 9;
      private Parameters parameters_;
      public static final int VIEW_ORIGINAL_TEXT_FIELD_NUMBER = 10;
      private Object viewOriginalText_;
      public static final int VIEW_EXPANDED_TEXT_FIELD_NUMBER = 11;
      private Object viewExpandedText_;
      public static final int TABLE_TYPE_FIELD_NUMBER = 12;
      private Object tableType_;
      public static final int PRIVILEGES_FIELD_NUMBER = 13;
      private PrincipalPrivilegeSet privileges_;
      public static final int IS_TEMPORARY_FIELD_NUMBER = 14;
      private boolean isTemporary_;
      public static final int IS_REWRITE_ENABLED_FIELD_NUMBER = 15;
      private boolean isRewriteEnabled_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Table(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Table(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Table getDefaultInstance() {
         return defaultInstance;
      }

      public Table getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Table(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.owner_ = input.readBytes();
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.createTime_ = input.readInt64();
                     break;
                  case 24:
                     this.bitField0_ |= 4;
                     this.lastAccessTime_ = input.readInt64();
                     break;
                  case 32:
                     this.bitField0_ |= 8;
                     this.retention_ = input.readInt64();
                     break;
                  case 42:
                     this.bitField0_ |= 16;
                     this.location_ = input.readBytes();
                     break;
                  case 50:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 32) == 32) {
                        subBuilder = this.sdParameters_.toBuilder();
                     }

                     this.sdParameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.sdParameters_);
                        this.sdParameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 32;
                     break;
                  case 58:
                     this.bitField0_ |= 64;
                     this.sdHash_ = input.readBytes();
                     break;
                  case 66:
                     if ((mutable_bitField0_ & 128) != 128) {
                        this.partitionKeys_ = new ArrayList();
                        mutable_bitField0_ |= 128;
                     }

                     this.partitionKeys_.add(input.readMessage(HbaseMetastoreProto.FieldSchema.PARSER, extensionRegistry));
                     break;
                  case 74:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 128) == 128) {
                        subBuilder = this.parameters_.toBuilder();
                     }

                     this.parameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.parameters_);
                        this.parameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 128;
                     break;
                  case 82:
                     this.bitField0_ |= 256;
                     this.viewOriginalText_ = input.readBytes();
                     break;
                  case 90:
                     this.bitField0_ |= 512;
                     this.viewExpandedText_ = input.readBytes();
                     break;
                  case 98:
                     this.bitField0_ |= 1024;
                     this.tableType_ = input.readBytes();
                     break;
                  case 106:
                     PrincipalPrivilegeSet.Builder subBuilder = null;
                     if ((this.bitField0_ & 2048) == 2048) {
                        subBuilder = this.privileges_.toBuilder();
                     }

                     this.privileges_ = (PrincipalPrivilegeSet)input.readMessage(HbaseMetastoreProto.PrincipalPrivilegeSet.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.privileges_);
                        this.privileges_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 2048;
                     break;
                  case 112:
                     this.bitField0_ |= 4096;
                     this.isTemporary_ = input.readBool();
                     break;
                  case 120:
                     this.bitField0_ |= 8192;
                     this.isRewriteEnabled_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 128) == 128) {
               this.partitionKeys_ = Collections.unmodifiableList(this.partitionKeys_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable.ensureFieldAccessorsInitialized(Table.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasOwner() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getOwner() {
         Object ref = this.owner_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.owner_ = s;
            }

            return s;
         }
      }

      public ByteString getOwnerBytes() {
         Object ref = this.owner_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.owner_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 2) == 2;
      }

      public long getCreateTime() {
         return this.createTime_;
      }

      public boolean hasLastAccessTime() {
         return (this.bitField0_ & 4) == 4;
      }

      public long getLastAccessTime() {
         return this.lastAccessTime_;
      }

      public boolean hasRetention() {
         return (this.bitField0_ & 8) == 8;
      }

      public long getRetention() {
         return this.retention_;
      }

      public boolean hasLocation() {
         return (this.bitField0_ & 16) == 16;
      }

      public String getLocation() {
         Object ref = this.location_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.location_ = s;
            }

            return s;
         }
      }

      public ByteString getLocationBytes() {
         Object ref = this.location_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.location_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSdParameters() {
         return (this.bitField0_ & 32) == 32;
      }

      public Parameters getSdParameters() {
         return this.sdParameters_;
      }

      public ParametersOrBuilder getSdParametersOrBuilder() {
         return this.sdParameters_;
      }

      public boolean hasSdHash() {
         return (this.bitField0_ & 64) == 64;
      }

      public ByteString getSdHash() {
         return this.sdHash_;
      }

      public List getPartitionKeysList() {
         return this.partitionKeys_;
      }

      public List getPartitionKeysOrBuilderList() {
         return this.partitionKeys_;
      }

      public int getPartitionKeysCount() {
         return this.partitionKeys_.size();
      }

      public FieldSchema getPartitionKeys(int index) {
         return (FieldSchema)this.partitionKeys_.get(index);
      }

      public FieldSchemaOrBuilder getPartitionKeysOrBuilder(int index) {
         return (FieldSchemaOrBuilder)this.partitionKeys_.get(index);
      }

      public boolean hasParameters() {
         return (this.bitField0_ & 128) == 128;
      }

      public Parameters getParameters() {
         return this.parameters_;
      }

      public ParametersOrBuilder getParametersOrBuilder() {
         return this.parameters_;
      }

      public boolean hasViewOriginalText() {
         return (this.bitField0_ & 256) == 256;
      }

      public String getViewOriginalText() {
         Object ref = this.viewOriginalText_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.viewOriginalText_ = s;
            }

            return s;
         }
      }

      public ByteString getViewOriginalTextBytes() {
         Object ref = this.viewOriginalText_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.viewOriginalText_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasViewExpandedText() {
         return (this.bitField0_ & 512) == 512;
      }

      public String getViewExpandedText() {
         Object ref = this.viewExpandedText_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.viewExpandedText_ = s;
            }

            return s;
         }
      }

      public ByteString getViewExpandedTextBytes() {
         Object ref = this.viewExpandedText_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.viewExpandedText_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasTableType() {
         return (this.bitField0_ & 1024) == 1024;
      }

      public String getTableType() {
         Object ref = this.tableType_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.tableType_ = s;
            }

            return s;
         }
      }

      public ByteString getTableTypeBytes() {
         Object ref = this.tableType_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.tableType_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasPrivileges() {
         return (this.bitField0_ & 2048) == 2048;
      }

      public PrincipalPrivilegeSet getPrivileges() {
         return this.privileges_;
      }

      public PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder() {
         return this.privileges_;
      }

      public boolean hasIsTemporary() {
         return (this.bitField0_ & 4096) == 4096;
      }

      public boolean getIsTemporary() {
         return this.isTemporary_;
      }

      public boolean hasIsRewriteEnabled() {
         return (this.bitField0_ & 8192) == 8192;
      }

      public boolean getIsRewriteEnabled() {
         return this.isRewriteEnabled_;
      }

      private void initFields() {
         this.owner_ = "";
         this.createTime_ = 0L;
         this.lastAccessTime_ = 0L;
         this.retention_ = 0L;
         this.location_ = "";
         this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.sdHash_ = ByteString.EMPTY;
         this.partitionKeys_ = Collections.emptyList();
         this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.viewOriginalText_ = "";
         this.viewExpandedText_ = "";
         this.tableType_ = "";
         this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
         this.isTemporary_ = false;
         this.isRewriteEnabled_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasSdHash()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            for(int i = 0; i < this.getPartitionKeysCount(); ++i) {
               if (!this.getPartitionKeys(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasParameters() && !this.getParameters().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (this.hasPrivileges() && !this.getPrivileges().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getOwnerBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeInt64(2, this.createTime_);
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeInt64(3, this.lastAccessTime_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeInt64(4, this.retention_);
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeBytes(5, this.getLocationBytes());
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeMessage(6, this.sdParameters_);
         }

         if ((this.bitField0_ & 64) == 64) {
            output.writeBytes(7, this.sdHash_);
         }

         for(int i = 0; i < this.partitionKeys_.size(); ++i) {
            output.writeMessage(8, (MessageLite)this.partitionKeys_.get(i));
         }

         if ((this.bitField0_ & 128) == 128) {
            output.writeMessage(9, this.parameters_);
         }

         if ((this.bitField0_ & 256) == 256) {
            output.writeBytes(10, this.getViewOriginalTextBytes());
         }

         if ((this.bitField0_ & 512) == 512) {
            output.writeBytes(11, this.getViewExpandedTextBytes());
         }

         if ((this.bitField0_ & 1024) == 1024) {
            output.writeBytes(12, this.getTableTypeBytes());
         }

         if ((this.bitField0_ & 2048) == 2048) {
            output.writeMessage(13, this.privileges_);
         }

         if ((this.bitField0_ & 4096) == 4096) {
            output.writeBool(14, this.isTemporary_);
         }

         if ((this.bitField0_ & 8192) == 8192) {
            output.writeBool(15, this.isRewriteEnabled_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getOwnerBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeInt64Size(2, this.createTime_);
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeInt64Size(3, this.lastAccessTime_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeInt64Size(4, this.retention_);
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeBytesSize(5, this.getLocationBytes());
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeMessageSize(6, this.sdParameters_);
            }

            if ((this.bitField0_ & 64) == 64) {
               size += CodedOutputStream.computeBytesSize(7, this.sdHash_);
            }

            for(int i = 0; i < this.partitionKeys_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(8, (MessageLite)this.partitionKeys_.get(i));
            }

            if ((this.bitField0_ & 128) == 128) {
               size += CodedOutputStream.computeMessageSize(9, this.parameters_);
            }

            if ((this.bitField0_ & 256) == 256) {
               size += CodedOutputStream.computeBytesSize(10, this.getViewOriginalTextBytes());
            }

            if ((this.bitField0_ & 512) == 512) {
               size += CodedOutputStream.computeBytesSize(11, this.getViewExpandedTextBytes());
            }

            if ((this.bitField0_ & 1024) == 1024) {
               size += CodedOutputStream.computeBytesSize(12, this.getTableTypeBytes());
            }

            if ((this.bitField0_ & 2048) == 2048) {
               size += CodedOutputStream.computeMessageSize(13, this.privileges_);
            }

            if ((this.bitField0_ & 4096) == 4096) {
               size += CodedOutputStream.computeBoolSize(14, this.isTemporary_);
            }

            if ((this.bitField0_ & 8192) == 8192) {
               size += CodedOutputStream.computeBoolSize(15, this.isRewriteEnabled_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Table parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Table)PARSER.parseFrom(data);
      }

      public static Table parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Table)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Table parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Table)PARSER.parseFrom(data);
      }

      public static Table parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Table)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Table parseFrom(InputStream input) throws IOException {
         return (Table)PARSER.parseFrom(input);
      }

      public static Table parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Table)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Table parseDelimitedFrom(InputStream input) throws IOException {
         return (Table)PARSER.parseDelimitedFrom(input);
      }

      public static Table parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Table)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Table parseFrom(CodedInputStream input) throws IOException {
         return (Table)PARSER.parseFrom(input);
      }

      public static Table parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Table)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Table.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Table prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements TableOrBuilder {
         private int bitField0_;
         private Object owner_;
         private long createTime_;
         private long lastAccessTime_;
         private long retention_;
         private Object location_;
         private Parameters sdParameters_;
         private SingleFieldBuilder sdParametersBuilder_;
         private ByteString sdHash_;
         private List partitionKeys_;
         private RepeatedFieldBuilder partitionKeysBuilder_;
         private Parameters parameters_;
         private SingleFieldBuilder parametersBuilder_;
         private Object viewOriginalText_;
         private Object viewExpandedText_;
         private Object tableType_;
         private PrincipalPrivilegeSet privileges_;
         private SingleFieldBuilder privilegesBuilder_;
         private boolean isTemporary_;
         private boolean isRewriteEnabled_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable.ensureFieldAccessorsInitialized(Table.class, Builder.class);
         }

         private Builder() {
            this.owner_ = "";
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.sdHash_ = ByteString.EMPTY;
            this.partitionKeys_ = Collections.emptyList();
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.viewOriginalText_ = "";
            this.viewExpandedText_ = "";
            this.tableType_ = "";
            this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.owner_ = "";
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.sdHash_ = ByteString.EMPTY;
            this.partitionKeys_ = Collections.emptyList();
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.viewOriginalText_ = "";
            this.viewExpandedText_ = "";
            this.tableType_ = "";
            this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Table.alwaysUseFieldBuilders) {
               this.getSdParametersFieldBuilder();
               this.getPartitionKeysFieldBuilder();
               this.getParametersFieldBuilder();
               this.getPrivilegesFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.owner_ = "";
            this.bitField0_ &= -2;
            this.createTime_ = 0L;
            this.bitField0_ &= -3;
            this.lastAccessTime_ = 0L;
            this.bitField0_ &= -5;
            this.retention_ = 0L;
            this.bitField0_ &= -9;
            this.location_ = "";
            this.bitField0_ &= -17;
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -33;
            this.sdHash_ = ByteString.EMPTY;
            this.bitField0_ &= -65;
            if (this.partitionKeysBuilder_ == null) {
               this.partitionKeys_ = Collections.emptyList();
               this.bitField0_ &= -129;
            } else {
               this.partitionKeysBuilder_.clear();
            }

            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -257;
            this.viewOriginalText_ = "";
            this.bitField0_ &= -513;
            this.viewExpandedText_ = "";
            this.bitField0_ &= -1025;
            this.tableType_ = "";
            this.bitField0_ &= -2049;
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
            } else {
               this.privilegesBuilder_.clear();
            }

            this.bitField0_ &= -4097;
            this.isTemporary_ = false;
            this.bitField0_ &= -8193;
            this.isRewriteEnabled_ = false;
            this.bitField0_ &= -16385;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor;
         }

         public Table getDefaultInstanceForType() {
            return HbaseMetastoreProto.Table.getDefaultInstance();
         }

         public Table build() {
            Table result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Table buildPartial() {
            Table result = new Table(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.owner_ = this.owner_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.lastAccessTime_ = this.lastAccessTime_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.retention_ = this.retention_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            result.location_ = this.location_;
            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            if (this.sdParametersBuilder_ == null) {
               result.sdParameters_ = this.sdParameters_;
            } else {
               result.sdParameters_ = (Parameters)this.sdParametersBuilder_.build();
            }

            if ((from_bitField0_ & 64) == 64) {
               to_bitField0_ |= 64;
            }

            result.sdHash_ = this.sdHash_;
            if (this.partitionKeysBuilder_ == null) {
               if ((this.bitField0_ & 128) == 128) {
                  this.partitionKeys_ = Collections.unmodifiableList(this.partitionKeys_);
                  this.bitField0_ &= -129;
               }

               result.partitionKeys_ = this.partitionKeys_;
            } else {
               result.partitionKeys_ = this.partitionKeysBuilder_.build();
            }

            if ((from_bitField0_ & 256) == 256) {
               to_bitField0_ |= 128;
            }

            if (this.parametersBuilder_ == null) {
               result.parameters_ = this.parameters_;
            } else {
               result.parameters_ = (Parameters)this.parametersBuilder_.build();
            }

            if ((from_bitField0_ & 512) == 512) {
               to_bitField0_ |= 256;
            }

            result.viewOriginalText_ = this.viewOriginalText_;
            if ((from_bitField0_ & 1024) == 1024) {
               to_bitField0_ |= 512;
            }

            result.viewExpandedText_ = this.viewExpandedText_;
            if ((from_bitField0_ & 2048) == 2048) {
               to_bitField0_ |= 1024;
            }

            result.tableType_ = this.tableType_;
            if ((from_bitField0_ & 4096) == 4096) {
               to_bitField0_ |= 2048;
            }

            if (this.privilegesBuilder_ == null) {
               result.privileges_ = this.privileges_;
            } else {
               result.privileges_ = (PrincipalPrivilegeSet)this.privilegesBuilder_.build();
            }

            if ((from_bitField0_ & 8192) == 8192) {
               to_bitField0_ |= 4096;
            }

            result.isTemporary_ = this.isTemporary_;
            if ((from_bitField0_ & 16384) == 16384) {
               to_bitField0_ |= 8192;
            }

            result.isRewriteEnabled_ = this.isRewriteEnabled_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Table) {
               return this.mergeFrom((Table)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Table other) {
            if (other == HbaseMetastoreProto.Table.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasOwner()) {
                  this.bitField0_ |= 1;
                  this.owner_ = other.owner_;
                  this.onChanged();
               }

               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasLastAccessTime()) {
                  this.setLastAccessTime(other.getLastAccessTime());
               }

               if (other.hasRetention()) {
                  this.setRetention(other.getRetention());
               }

               if (other.hasLocation()) {
                  this.bitField0_ |= 16;
                  this.location_ = other.location_;
                  this.onChanged();
               }

               if (other.hasSdParameters()) {
                  this.mergeSdParameters(other.getSdParameters());
               }

               if (other.hasSdHash()) {
                  this.setSdHash(other.getSdHash());
               }

               if (this.partitionKeysBuilder_ == null) {
                  if (!other.partitionKeys_.isEmpty()) {
                     if (this.partitionKeys_.isEmpty()) {
                        this.partitionKeys_ = other.partitionKeys_;
                        this.bitField0_ &= -129;
                     } else {
                        this.ensurePartitionKeysIsMutable();
                        this.partitionKeys_.addAll(other.partitionKeys_);
                     }

                     this.onChanged();
                  }
               } else if (!other.partitionKeys_.isEmpty()) {
                  if (this.partitionKeysBuilder_.isEmpty()) {
                     this.partitionKeysBuilder_.dispose();
                     this.partitionKeysBuilder_ = null;
                     this.partitionKeys_ = other.partitionKeys_;
                     this.bitField0_ &= -129;
                     this.partitionKeysBuilder_ = HbaseMetastoreProto.Table.alwaysUseFieldBuilders ? this.getPartitionKeysFieldBuilder() : null;
                  } else {
                     this.partitionKeysBuilder_.addAllMessages(other.partitionKeys_);
                  }
               }

               if (other.hasParameters()) {
                  this.mergeParameters(other.getParameters());
               }

               if (other.hasViewOriginalText()) {
                  this.bitField0_ |= 512;
                  this.viewOriginalText_ = other.viewOriginalText_;
                  this.onChanged();
               }

               if (other.hasViewExpandedText()) {
                  this.bitField0_ |= 1024;
                  this.viewExpandedText_ = other.viewExpandedText_;
                  this.onChanged();
               }

               if (other.hasTableType()) {
                  this.bitField0_ |= 2048;
                  this.tableType_ = other.tableType_;
                  this.onChanged();
               }

               if (other.hasPrivileges()) {
                  this.mergePrivileges(other.getPrivileges());
               }

               if (other.hasIsTemporary()) {
                  this.setIsTemporary(other.getIsTemporary());
               }

               if (other.hasIsRewriteEnabled()) {
                  this.setIsRewriteEnabled(other.getIsRewriteEnabled());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasSdHash()) {
               return false;
            } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
               return false;
            } else {
               for(int i = 0; i < this.getPartitionKeysCount(); ++i) {
                  if (!this.getPartitionKeys(i).isInitialized()) {
                     return false;
                  }
               }

               if (this.hasParameters() && !this.getParameters().isInitialized()) {
                  return false;
               } else if (this.hasPrivileges() && !this.getPrivileges().isInitialized()) {
                  return false;
               } else {
                  return true;
               }
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Table parsedMessage = null;

            try {
               parsedMessage = (Table)HbaseMetastoreProto.Table.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Table)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasOwner() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getOwner() {
            Object ref = this.owner_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.owner_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOwnerBytes() {
            Object ref = this.owner_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.owner_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOwner(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.owner_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOwner() {
            this.bitField0_ &= -2;
            this.owner_ = HbaseMetastoreProto.Table.getDefaultInstance().getOwner();
            this.onChanged();
            return this;
         }

         public Builder setOwnerBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.owner_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 2) == 2;
         }

         public long getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(long value) {
            this.bitField0_ |= 2;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -3;
            this.createTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasLastAccessTime() {
            return (this.bitField0_ & 4) == 4;
         }

         public long getLastAccessTime() {
            return this.lastAccessTime_;
         }

         public Builder setLastAccessTime(long value) {
            this.bitField0_ |= 4;
            this.lastAccessTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearLastAccessTime() {
            this.bitField0_ &= -5;
            this.lastAccessTime_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasRetention() {
            return (this.bitField0_ & 8) == 8;
         }

         public long getRetention() {
            return this.retention_;
         }

         public Builder setRetention(long value) {
            this.bitField0_ |= 8;
            this.retention_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearRetention() {
            this.bitField0_ &= -9;
            this.retention_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasLocation() {
            return (this.bitField0_ & 16) == 16;
         }

         public String getLocation() {
            Object ref = this.location_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.location_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getLocationBytes() {
            Object ref = this.location_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.location_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setLocation(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearLocation() {
            this.bitField0_ &= -17;
            this.location_ = HbaseMetastoreProto.Table.getDefaultInstance().getLocation();
            this.onChanged();
            return this;
         }

         public Builder setLocationBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSdParameters() {
            return (this.bitField0_ & 32) == 32;
         }

         public Parameters getSdParameters() {
            return this.sdParametersBuilder_ == null ? this.sdParameters_ : (Parameters)this.sdParametersBuilder_.getMessage();
         }

         public Builder setSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.sdParameters_ = value;
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder setSdParameters(Parameters.Builder builderForValue) {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder mergeSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if ((this.bitField0_ & 32) == 32 && this.sdParameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.sdParameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.sdParameters_).mergeFrom(value).buildPartial();
               } else {
                  this.sdParameters_ = value;
               }

               this.onChanged();
            } else {
               this.sdParametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 32;
            return this;
         }

         public Builder clearSdParameters() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -33;
            return this;
         }

         public Parameters.Builder getSdParametersBuilder() {
            this.bitField0_ |= 32;
            this.onChanged();
            return (Parameters.Builder)this.getSdParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getSdParametersOrBuilder() {
            return (ParametersOrBuilder)(this.sdParametersBuilder_ != null ? (ParametersOrBuilder)this.sdParametersBuilder_.getMessageOrBuilder() : this.sdParameters_);
         }

         private SingleFieldBuilder getSdParametersFieldBuilder() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParametersBuilder_ = new SingleFieldBuilder(this.sdParameters_, this.getParentForChildren(), this.isClean());
               this.sdParameters_ = null;
            }

            return this.sdParametersBuilder_;
         }

         public boolean hasSdHash() {
            return (this.bitField0_ & 64) == 64;
         }

         public ByteString getSdHash() {
            return this.sdHash_;
         }

         public Builder setSdHash(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.sdHash_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearSdHash() {
            this.bitField0_ &= -65;
            this.sdHash_ = HbaseMetastoreProto.Table.getDefaultInstance().getSdHash();
            this.onChanged();
            return this;
         }

         private void ensurePartitionKeysIsMutable() {
            if ((this.bitField0_ & 128) != 128) {
               this.partitionKeys_ = new ArrayList(this.partitionKeys_);
               this.bitField0_ |= 128;
            }

         }

         public List getPartitionKeysList() {
            return this.partitionKeysBuilder_ == null ? Collections.unmodifiableList(this.partitionKeys_) : this.partitionKeysBuilder_.getMessageList();
         }

         public int getPartitionKeysCount() {
            return this.partitionKeysBuilder_ == null ? this.partitionKeys_.size() : this.partitionKeysBuilder_.getCount();
         }

         public FieldSchema getPartitionKeys(int index) {
            return this.partitionKeysBuilder_ == null ? (FieldSchema)this.partitionKeys_.get(index) : (FieldSchema)this.partitionKeysBuilder_.getMessage(index);
         }

         public Builder setPartitionKeys(int index, FieldSchema value) {
            if (this.partitionKeysBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.set(index, value);
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setPartitionKeys(int index, FieldSchema.Builder builderForValue) {
            if (this.partitionKeysBuilder_ == null) {
               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addPartitionKeys(FieldSchema value) {
            if (this.partitionKeysBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.add(value);
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addPartitionKeys(int index, FieldSchema value) {
            if (this.partitionKeysBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.add(index, value);
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addPartitionKeys(FieldSchema.Builder builderForValue) {
            if (this.partitionKeysBuilder_ == null) {
               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addPartitionKeys(int index, FieldSchema.Builder builderForValue) {
            if (this.partitionKeysBuilder_ == null) {
               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllPartitionKeys(Iterable values) {
            if (this.partitionKeysBuilder_ == null) {
               this.ensurePartitionKeysIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.partitionKeys_);
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearPartitionKeys() {
            if (this.partitionKeysBuilder_ == null) {
               this.partitionKeys_ = Collections.emptyList();
               this.bitField0_ &= -129;
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.clear();
            }

            return this;
         }

         public Builder removePartitionKeys(int index) {
            if (this.partitionKeysBuilder_ == null) {
               this.ensurePartitionKeysIsMutable();
               this.partitionKeys_.remove(index);
               this.onChanged();
            } else {
               this.partitionKeysBuilder_.remove(index);
            }

            return this;
         }

         public FieldSchema.Builder getPartitionKeysBuilder(int index) {
            return (FieldSchema.Builder)this.getPartitionKeysFieldBuilder().getBuilder(index);
         }

         public FieldSchemaOrBuilder getPartitionKeysOrBuilder(int index) {
            return this.partitionKeysBuilder_ == null ? (FieldSchemaOrBuilder)this.partitionKeys_.get(index) : (FieldSchemaOrBuilder)this.partitionKeysBuilder_.getMessageOrBuilder(index);
         }

         public List getPartitionKeysOrBuilderList() {
            return this.partitionKeysBuilder_ != null ? this.partitionKeysBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.partitionKeys_);
         }

         public FieldSchema.Builder addPartitionKeysBuilder() {
            return (FieldSchema.Builder)this.getPartitionKeysFieldBuilder().addBuilder(HbaseMetastoreProto.FieldSchema.getDefaultInstance());
         }

         public FieldSchema.Builder addPartitionKeysBuilder(int index) {
            return (FieldSchema.Builder)this.getPartitionKeysFieldBuilder().addBuilder(index, HbaseMetastoreProto.FieldSchema.getDefaultInstance());
         }

         public List getPartitionKeysBuilderList() {
            return this.getPartitionKeysFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getPartitionKeysFieldBuilder() {
            if (this.partitionKeysBuilder_ == null) {
               this.partitionKeysBuilder_ = new RepeatedFieldBuilder(this.partitionKeys_, (this.bitField0_ & 128) == 128, this.getParentForChildren(), this.isClean());
               this.partitionKeys_ = null;
            }

            return this.partitionKeysBuilder_;
         }

         public boolean hasParameters() {
            return (this.bitField0_ & 256) == 256;
         }

         public Parameters getParameters() {
            return this.parametersBuilder_ == null ? this.parameters_ : (Parameters)this.parametersBuilder_.getMessage();
         }

         public Builder setParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.parameters_ = value;
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder setParameters(Parameters.Builder builderForValue) {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder mergeParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if ((this.bitField0_ & 256) == 256 && this.parameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.parameters_).mergeFrom(value).buildPartial();
               } else {
                  this.parameters_ = value;
               }

               this.onChanged();
            } else {
               this.parametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 256;
            return this;
         }

         public Builder clearParameters() {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -257;
            return this;
         }

         public Parameters.Builder getParametersBuilder() {
            this.bitField0_ |= 256;
            this.onChanged();
            return (Parameters.Builder)this.getParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getParametersOrBuilder() {
            return (ParametersOrBuilder)(this.parametersBuilder_ != null ? (ParametersOrBuilder)this.parametersBuilder_.getMessageOrBuilder() : this.parameters_);
         }

         private SingleFieldBuilder getParametersFieldBuilder() {
            if (this.parametersBuilder_ == null) {
               this.parametersBuilder_ = new SingleFieldBuilder(this.parameters_, this.getParentForChildren(), this.isClean());
               this.parameters_ = null;
            }

            return this.parametersBuilder_;
         }

         public boolean hasViewOriginalText() {
            return (this.bitField0_ & 512) == 512;
         }

         public String getViewOriginalText() {
            Object ref = this.viewOriginalText_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.viewOriginalText_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getViewOriginalTextBytes() {
            Object ref = this.viewOriginalText_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.viewOriginalText_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setViewOriginalText(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 512;
               this.viewOriginalText_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearViewOriginalText() {
            this.bitField0_ &= -513;
            this.viewOriginalText_ = HbaseMetastoreProto.Table.getDefaultInstance().getViewOriginalText();
            this.onChanged();
            return this;
         }

         public Builder setViewOriginalTextBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 512;
               this.viewOriginalText_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasViewExpandedText() {
            return (this.bitField0_ & 1024) == 1024;
         }

         public String getViewExpandedText() {
            Object ref = this.viewExpandedText_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.viewExpandedText_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getViewExpandedTextBytes() {
            Object ref = this.viewExpandedText_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.viewExpandedText_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setViewExpandedText(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1024;
               this.viewExpandedText_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearViewExpandedText() {
            this.bitField0_ &= -1025;
            this.viewExpandedText_ = HbaseMetastoreProto.Table.getDefaultInstance().getViewExpandedText();
            this.onChanged();
            return this;
         }

         public Builder setViewExpandedTextBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1024;
               this.viewExpandedText_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasTableType() {
            return (this.bitField0_ & 2048) == 2048;
         }

         public String getTableType() {
            Object ref = this.tableType_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.tableType_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getTableTypeBytes() {
            Object ref = this.tableType_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.tableType_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setTableType(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.tableType_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearTableType() {
            this.bitField0_ &= -2049;
            this.tableType_ = HbaseMetastoreProto.Table.getDefaultInstance().getTableType();
            this.onChanged();
            return this;
         }

         public Builder setTableTypeBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.tableType_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPrivileges() {
            return (this.bitField0_ & 4096) == 4096;
         }

         public PrincipalPrivilegeSet getPrivileges() {
            return this.privilegesBuilder_ == null ? this.privileges_ : (PrincipalPrivilegeSet)this.privilegesBuilder_.getMessage();
         }

         public Builder setPrivileges(PrincipalPrivilegeSet value) {
            if (this.privilegesBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.privileges_ = value;
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(value);
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder setPrivileges(PrincipalPrivilegeSet.Builder builderForValue) {
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = builderForValue.build();
               this.onChanged();
            } else {
               this.privilegesBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder mergePrivileges(PrincipalPrivilegeSet value) {
            if (this.privilegesBuilder_ == null) {
               if ((this.bitField0_ & 4096) == 4096 && this.privileges_ != HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance()) {
                  this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.newBuilder(this.privileges_).mergeFrom(value).buildPartial();
               } else {
                  this.privileges_ = value;
               }

               this.onChanged();
            } else {
               this.privilegesBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 4096;
            return this;
         }

         public Builder clearPrivileges() {
            if (this.privilegesBuilder_ == null) {
               this.privileges_ = HbaseMetastoreProto.PrincipalPrivilegeSet.getDefaultInstance();
               this.onChanged();
            } else {
               this.privilegesBuilder_.clear();
            }

            this.bitField0_ &= -4097;
            return this;
         }

         public PrincipalPrivilegeSet.Builder getPrivilegesBuilder() {
            this.bitField0_ |= 4096;
            this.onChanged();
            return (PrincipalPrivilegeSet.Builder)this.getPrivilegesFieldBuilder().getBuilder();
         }

         public PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder() {
            return (PrincipalPrivilegeSetOrBuilder)(this.privilegesBuilder_ != null ? (PrincipalPrivilegeSetOrBuilder)this.privilegesBuilder_.getMessageOrBuilder() : this.privileges_);
         }

         private SingleFieldBuilder getPrivilegesFieldBuilder() {
            if (this.privilegesBuilder_ == null) {
               this.privilegesBuilder_ = new SingleFieldBuilder(this.privileges_, this.getParentForChildren(), this.isClean());
               this.privileges_ = null;
            }

            return this.privilegesBuilder_;
         }

         public boolean hasIsTemporary() {
            return (this.bitField0_ & 8192) == 8192;
         }

         public boolean getIsTemporary() {
            return this.isTemporary_;
         }

         public Builder setIsTemporary(boolean value) {
            this.bitField0_ |= 8192;
            this.isTemporary_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearIsTemporary() {
            this.bitField0_ &= -8193;
            this.isTemporary_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasIsRewriteEnabled() {
            return (this.bitField0_ & 16384) == 16384;
         }

         public boolean getIsRewriteEnabled() {
            return this.isRewriteEnabled_;
         }

         public Builder setIsRewriteEnabled(boolean value) {
            this.bitField0_ |= 16384;
            this.isRewriteEnabled_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearIsRewriteEnabled() {
            this.bitField0_ &= -16385;
            this.isRewriteEnabled_ = false;
            this.onChanged();
            return this;
         }
      }
   }

   public static final class Index extends GeneratedMessage implements IndexOrBuilder {
      private static final Index defaultInstance = new Index(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public Index parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new Index(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int INDEXHANDLERCLASS_FIELD_NUMBER = 1;
      private Object indexHandlerClass_;
      public static final int DBNAME_FIELD_NUMBER = 2;
      private Object dbName_;
      public static final int ORIGTABLENAME_FIELD_NUMBER = 3;
      private Object origTableName_;
      public static final int LOCATION_FIELD_NUMBER = 4;
      private Object location_;
      public static final int SD_PARAMETERS_FIELD_NUMBER = 5;
      private Parameters sdParameters_;
      public static final int CREATETIME_FIELD_NUMBER = 6;
      private int createTime_;
      public static final int LASTACCESSTIME_FIELD_NUMBER = 7;
      private int lastAccessTime_;
      public static final int INDEXTABLENAME_FIELD_NUMBER = 8;
      private Object indexTableName_;
      public static final int SD_HASH_FIELD_NUMBER = 9;
      private ByteString sdHash_;
      public static final int PARAMETERS_FIELD_NUMBER = 10;
      private Parameters parameters_;
      public static final int DEFERREDREBUILD_FIELD_NUMBER = 11;
      private boolean deferredRebuild_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private Index(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private Index(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static Index getDefaultInstance() {
         return defaultInstance;
      }

      public Index getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private Index(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.indexHandlerClass_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.dbName_ = input.readBytes();
                     break;
                  case 26:
                     this.bitField0_ |= 4;
                     this.origTableName_ = input.readBytes();
                     break;
                  case 34:
                     this.bitField0_ |= 8;
                     this.location_ = input.readBytes();
                     break;
                  case 42:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 16) == 16) {
                        subBuilder = this.sdParameters_.toBuilder();
                     }

                     this.sdParameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.sdParameters_);
                        this.sdParameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 16;
                     break;
                  case 48:
                     this.bitField0_ |= 32;
                     this.createTime_ = input.readInt32();
                     break;
                  case 56:
                     this.bitField0_ |= 64;
                     this.lastAccessTime_ = input.readInt32();
                     break;
                  case 66:
                     this.bitField0_ |= 128;
                     this.indexTableName_ = input.readBytes();
                     break;
                  case 74:
                     this.bitField0_ |= 256;
                     this.sdHash_ = input.readBytes();
                     break;
                  case 82:
                     Parameters.Builder subBuilder = null;
                     if ((this.bitField0_ & 512) == 512) {
                        subBuilder = this.parameters_.toBuilder();
                     }

                     this.parameters_ = (Parameters)input.readMessage(HbaseMetastoreProto.Parameters.PARSER, extensionRegistry);
                     if (subBuilder != null) {
                        subBuilder.mergeFrom(this.parameters_);
                        this.parameters_ = subBuilder.buildPartial();
                     }

                     this.bitField0_ |= 512;
                     break;
                  case 88:
                     this.bitField0_ |= 1024;
                     this.deferredRebuild_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable.ensureFieldAccessorsInitialized(Index.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasIndexHandlerClass() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getIndexHandlerClass() {
         Object ref = this.indexHandlerClass_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.indexHandlerClass_ = s;
            }

            return s;
         }
      }

      public ByteString getIndexHandlerClassBytes() {
         Object ref = this.indexHandlerClass_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.indexHandlerClass_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasDbName() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getDbName() {
         Object ref = this.dbName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.dbName_ = s;
            }

            return s;
         }
      }

      public ByteString getDbNameBytes() {
         Object ref = this.dbName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.dbName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasOrigTableName() {
         return (this.bitField0_ & 4) == 4;
      }

      public String getOrigTableName() {
         Object ref = this.origTableName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.origTableName_ = s;
            }

            return s;
         }
      }

      public ByteString getOrigTableNameBytes() {
         Object ref = this.origTableName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.origTableName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasLocation() {
         return (this.bitField0_ & 8) == 8;
      }

      public String getLocation() {
         Object ref = this.location_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.location_ = s;
            }

            return s;
         }
      }

      public ByteString getLocationBytes() {
         Object ref = this.location_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.location_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSdParameters() {
         return (this.bitField0_ & 16) == 16;
      }

      public Parameters getSdParameters() {
         return this.sdParameters_;
      }

      public ParametersOrBuilder getSdParametersOrBuilder() {
         return this.sdParameters_;
      }

      public boolean hasCreateTime() {
         return (this.bitField0_ & 32) == 32;
      }

      public int getCreateTime() {
         return this.createTime_;
      }

      public boolean hasLastAccessTime() {
         return (this.bitField0_ & 64) == 64;
      }

      public int getLastAccessTime() {
         return this.lastAccessTime_;
      }

      public boolean hasIndexTableName() {
         return (this.bitField0_ & 128) == 128;
      }

      public String getIndexTableName() {
         Object ref = this.indexTableName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.indexTableName_ = s;
            }

            return s;
         }
      }

      public ByteString getIndexTableNameBytes() {
         Object ref = this.indexTableName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.indexTableName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasSdHash() {
         return (this.bitField0_ & 256) == 256;
      }

      public ByteString getSdHash() {
         return this.sdHash_;
      }

      public boolean hasParameters() {
         return (this.bitField0_ & 512) == 512;
      }

      public Parameters getParameters() {
         return this.parameters_;
      }

      public ParametersOrBuilder getParametersOrBuilder() {
         return this.parameters_;
      }

      public boolean hasDeferredRebuild() {
         return (this.bitField0_ & 1024) == 1024;
      }

      public boolean getDeferredRebuild() {
         return this.deferredRebuild_;
      }

      private void initFields() {
         this.indexHandlerClass_ = "";
         this.dbName_ = "";
         this.origTableName_ = "";
         this.location_ = "";
         this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.createTime_ = 0;
         this.lastAccessTime_ = 0;
         this.indexTableName_ = "";
         this.sdHash_ = ByteString.EMPTY;
         this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
         this.deferredRebuild_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasDbName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasOrigTableName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (this.hasParameters() && !this.getParameters().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getIndexHandlerClassBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getDbNameBytes());
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBytes(3, this.getOrigTableNameBytes());
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeBytes(4, this.getLocationBytes());
         }

         if ((this.bitField0_ & 16) == 16) {
            output.writeMessage(5, this.sdParameters_);
         }

         if ((this.bitField0_ & 32) == 32) {
            output.writeInt32(6, this.createTime_);
         }

         if ((this.bitField0_ & 64) == 64) {
            output.writeInt32(7, this.lastAccessTime_);
         }

         if ((this.bitField0_ & 128) == 128) {
            output.writeBytes(8, this.getIndexTableNameBytes());
         }

         if ((this.bitField0_ & 256) == 256) {
            output.writeBytes(9, this.sdHash_);
         }

         if ((this.bitField0_ & 512) == 512) {
            output.writeMessage(10, this.parameters_);
         }

         if ((this.bitField0_ & 1024) == 1024) {
            output.writeBool(11, this.deferredRebuild_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getIndexHandlerClassBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getDbNameBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBytesSize(3, this.getOrigTableNameBytes());
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeBytesSize(4, this.getLocationBytes());
            }

            if ((this.bitField0_ & 16) == 16) {
               size += CodedOutputStream.computeMessageSize(5, this.sdParameters_);
            }

            if ((this.bitField0_ & 32) == 32) {
               size += CodedOutputStream.computeInt32Size(6, this.createTime_);
            }

            if ((this.bitField0_ & 64) == 64) {
               size += CodedOutputStream.computeInt32Size(7, this.lastAccessTime_);
            }

            if ((this.bitField0_ & 128) == 128) {
               size += CodedOutputStream.computeBytesSize(8, this.getIndexTableNameBytes());
            }

            if ((this.bitField0_ & 256) == 256) {
               size += CodedOutputStream.computeBytesSize(9, this.sdHash_);
            }

            if ((this.bitField0_ & 512) == 512) {
               size += CodedOutputStream.computeMessageSize(10, this.parameters_);
            }

            if ((this.bitField0_ & 1024) == 1024) {
               size += CodedOutputStream.computeBoolSize(11, this.deferredRebuild_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static Index parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (Index)PARSER.parseFrom(data);
      }

      public static Index parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Index)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Index parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (Index)PARSER.parseFrom(data);
      }

      public static Index parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (Index)PARSER.parseFrom(data, extensionRegistry);
      }

      public static Index parseFrom(InputStream input) throws IOException {
         return (Index)PARSER.parseFrom(input);
      }

      public static Index parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Index)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Index parseDelimitedFrom(InputStream input) throws IOException {
         return (Index)PARSER.parseDelimitedFrom(input);
      }

      public static Index parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Index)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static Index parseFrom(CodedInputStream input) throws IOException {
         return (Index)PARSER.parseFrom(input);
      }

      public static Index parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (Index)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.Index.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(Index prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Builder extends GeneratedMessage.Builder implements IndexOrBuilder {
         private int bitField0_;
         private Object indexHandlerClass_;
         private Object dbName_;
         private Object origTableName_;
         private Object location_;
         private Parameters sdParameters_;
         private SingleFieldBuilder sdParametersBuilder_;
         private int createTime_;
         private int lastAccessTime_;
         private Object indexTableName_;
         private ByteString sdHash_;
         private Parameters parameters_;
         private SingleFieldBuilder parametersBuilder_;
         private boolean deferredRebuild_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable.ensureFieldAccessorsInitialized(Index.class, Builder.class);
         }

         private Builder() {
            this.indexHandlerClass_ = "";
            this.dbName_ = "";
            this.origTableName_ = "";
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.indexTableName_ = "";
            this.sdHash_ = ByteString.EMPTY;
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.indexHandlerClass_ = "";
            this.dbName_ = "";
            this.origTableName_ = "";
            this.location_ = "";
            this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.indexTableName_ = "";
            this.sdHash_ = ByteString.EMPTY;
            this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.Index.alwaysUseFieldBuilders) {
               this.getSdParametersFieldBuilder();
               this.getParametersFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.indexHandlerClass_ = "";
            this.bitField0_ &= -2;
            this.dbName_ = "";
            this.bitField0_ &= -3;
            this.origTableName_ = "";
            this.bitField0_ &= -5;
            this.location_ = "";
            this.bitField0_ &= -9;
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -17;
            this.createTime_ = 0;
            this.bitField0_ &= -33;
            this.lastAccessTime_ = 0;
            this.bitField0_ &= -65;
            this.indexTableName_ = "";
            this.bitField0_ &= -129;
            this.sdHash_ = ByteString.EMPTY;
            this.bitField0_ &= -257;
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -513;
            this.deferredRebuild_ = false;
            this.bitField0_ &= -1025;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor;
         }

         public Index getDefaultInstanceForType() {
            return HbaseMetastoreProto.Index.getDefaultInstance();
         }

         public Index build() {
            Index result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public Index buildPartial() {
            Index result = new Index(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.indexHandlerClass_ = this.indexHandlerClass_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.dbName_ = this.dbName_;
            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 4;
            }

            result.origTableName_ = this.origTableName_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 8;
            }

            result.location_ = this.location_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 16;
            }

            if (this.sdParametersBuilder_ == null) {
               result.sdParameters_ = this.sdParameters_;
            } else {
               result.sdParameters_ = (Parameters)this.sdParametersBuilder_.build();
            }

            if ((from_bitField0_ & 32) == 32) {
               to_bitField0_ |= 32;
            }

            result.createTime_ = this.createTime_;
            if ((from_bitField0_ & 64) == 64) {
               to_bitField0_ |= 64;
            }

            result.lastAccessTime_ = this.lastAccessTime_;
            if ((from_bitField0_ & 128) == 128) {
               to_bitField0_ |= 128;
            }

            result.indexTableName_ = this.indexTableName_;
            if ((from_bitField0_ & 256) == 256) {
               to_bitField0_ |= 256;
            }

            result.sdHash_ = this.sdHash_;
            if ((from_bitField0_ & 512) == 512) {
               to_bitField0_ |= 512;
            }

            if (this.parametersBuilder_ == null) {
               result.parameters_ = this.parameters_;
            } else {
               result.parameters_ = (Parameters)this.parametersBuilder_.build();
            }

            if ((from_bitField0_ & 1024) == 1024) {
               to_bitField0_ |= 1024;
            }

            result.deferredRebuild_ = this.deferredRebuild_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof Index) {
               return this.mergeFrom((Index)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(Index other) {
            if (other == HbaseMetastoreProto.Index.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasIndexHandlerClass()) {
                  this.bitField0_ |= 1;
                  this.indexHandlerClass_ = other.indexHandlerClass_;
                  this.onChanged();
               }

               if (other.hasDbName()) {
                  this.bitField0_ |= 2;
                  this.dbName_ = other.dbName_;
                  this.onChanged();
               }

               if (other.hasOrigTableName()) {
                  this.bitField0_ |= 4;
                  this.origTableName_ = other.origTableName_;
                  this.onChanged();
               }

               if (other.hasLocation()) {
                  this.bitField0_ |= 8;
                  this.location_ = other.location_;
                  this.onChanged();
               }

               if (other.hasSdParameters()) {
                  this.mergeSdParameters(other.getSdParameters());
               }

               if (other.hasCreateTime()) {
                  this.setCreateTime(other.getCreateTime());
               }

               if (other.hasLastAccessTime()) {
                  this.setLastAccessTime(other.getLastAccessTime());
               }

               if (other.hasIndexTableName()) {
                  this.bitField0_ |= 128;
                  this.indexTableName_ = other.indexTableName_;
                  this.onChanged();
               }

               if (other.hasSdHash()) {
                  this.setSdHash(other.getSdHash());
               }

               if (other.hasParameters()) {
                  this.mergeParameters(other.getParameters());
               }

               if (other.hasDeferredRebuild()) {
                  this.setDeferredRebuild(other.getDeferredRebuild());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasDbName()) {
               return false;
            } else if (!this.hasOrigTableName()) {
               return false;
            } else if (this.hasSdParameters() && !this.getSdParameters().isInitialized()) {
               return false;
            } else {
               return !this.hasParameters() || this.getParameters().isInitialized();
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            Index parsedMessage = null;

            try {
               parsedMessage = (Index)HbaseMetastoreProto.Index.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (Index)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasIndexHandlerClass() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getIndexHandlerClass() {
            Object ref = this.indexHandlerClass_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.indexHandlerClass_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getIndexHandlerClassBytes() {
            Object ref = this.indexHandlerClass_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.indexHandlerClass_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setIndexHandlerClass(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.indexHandlerClass_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearIndexHandlerClass() {
            this.bitField0_ &= -2;
            this.indexHandlerClass_ = HbaseMetastoreProto.Index.getDefaultInstance().getIndexHandlerClass();
            this.onChanged();
            return this;
         }

         public Builder setIndexHandlerClassBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.indexHandlerClass_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasDbName() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getDbName() {
            Object ref = this.dbName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.dbName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getDbNameBytes() {
            Object ref = this.dbName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.dbName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setDbName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.dbName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearDbName() {
            this.bitField0_ &= -3;
            this.dbName_ = HbaseMetastoreProto.Index.getDefaultInstance().getDbName();
            this.onChanged();
            return this;
         }

         public Builder setDbNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.dbName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOrigTableName() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getOrigTableName() {
            Object ref = this.origTableName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.origTableName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getOrigTableNameBytes() {
            Object ref = this.origTableName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.origTableName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setOrigTableName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.origTableName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearOrigTableName() {
            this.bitField0_ &= -5;
            this.origTableName_ = HbaseMetastoreProto.Index.getDefaultInstance().getOrigTableName();
            this.onChanged();
            return this;
         }

         public Builder setOrigTableNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.origTableName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasLocation() {
            return (this.bitField0_ & 8) == 8;
         }

         public String getLocation() {
            Object ref = this.location_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.location_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getLocationBytes() {
            Object ref = this.location_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.location_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setLocation(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearLocation() {
            this.bitField0_ &= -9;
            this.location_ = HbaseMetastoreProto.Index.getDefaultInstance().getLocation();
            this.onChanged();
            return this;
         }

         public Builder setLocationBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.location_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSdParameters() {
            return (this.bitField0_ & 16) == 16;
         }

         public Parameters getSdParameters() {
            return this.sdParametersBuilder_ == null ? this.sdParameters_ : (Parameters)this.sdParametersBuilder_.getMessage();
         }

         public Builder setSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.sdParameters_ = value;
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder setSdParameters(Parameters.Builder builderForValue) {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder mergeSdParameters(Parameters value) {
            if (this.sdParametersBuilder_ == null) {
               if ((this.bitField0_ & 16) == 16 && this.sdParameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.sdParameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.sdParameters_).mergeFrom(value).buildPartial();
               } else {
                  this.sdParameters_ = value;
               }

               this.onChanged();
            } else {
               this.sdParametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 16;
            return this;
         }

         public Builder clearSdParameters() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.sdParametersBuilder_.clear();
            }

            this.bitField0_ &= -17;
            return this;
         }

         public Parameters.Builder getSdParametersBuilder() {
            this.bitField0_ |= 16;
            this.onChanged();
            return (Parameters.Builder)this.getSdParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getSdParametersOrBuilder() {
            return (ParametersOrBuilder)(this.sdParametersBuilder_ != null ? (ParametersOrBuilder)this.sdParametersBuilder_.getMessageOrBuilder() : this.sdParameters_);
         }

         private SingleFieldBuilder getSdParametersFieldBuilder() {
            if (this.sdParametersBuilder_ == null) {
               this.sdParametersBuilder_ = new SingleFieldBuilder(this.sdParameters_, this.getParentForChildren(), this.isClean());
               this.sdParameters_ = null;
            }

            return this.sdParametersBuilder_;
         }

         public boolean hasCreateTime() {
            return (this.bitField0_ & 32) == 32;
         }

         public int getCreateTime() {
            return this.createTime_;
         }

         public Builder setCreateTime(int value) {
            this.bitField0_ |= 32;
            this.createTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearCreateTime() {
            this.bitField0_ &= -33;
            this.createTime_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasLastAccessTime() {
            return (this.bitField0_ & 64) == 64;
         }

         public int getLastAccessTime() {
            return this.lastAccessTime_;
         }

         public Builder setLastAccessTime(int value) {
            this.bitField0_ |= 64;
            this.lastAccessTime_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearLastAccessTime() {
            this.bitField0_ &= -65;
            this.lastAccessTime_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasIndexTableName() {
            return (this.bitField0_ & 128) == 128;
         }

         public String getIndexTableName() {
            Object ref = this.indexTableName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.indexTableName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getIndexTableNameBytes() {
            Object ref = this.indexTableName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.indexTableName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setIndexTableName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.indexTableName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearIndexTableName() {
            this.bitField0_ &= -129;
            this.indexTableName_ = HbaseMetastoreProto.Index.getDefaultInstance().getIndexTableName();
            this.onChanged();
            return this;
         }

         public Builder setIndexTableNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 128;
               this.indexTableName_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSdHash() {
            return (this.bitField0_ & 256) == 256;
         }

         public ByteString getSdHash() {
            return this.sdHash_;
         }

         public Builder setSdHash(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.sdHash_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearSdHash() {
            this.bitField0_ &= -257;
            this.sdHash_ = HbaseMetastoreProto.Index.getDefaultInstance().getSdHash();
            this.onChanged();
            return this;
         }

         public boolean hasParameters() {
            return (this.bitField0_ & 512) == 512;
         }

         public Parameters getParameters() {
            return this.parametersBuilder_ == null ? this.parameters_ : (Parameters)this.parametersBuilder_.getMessage();
         }

         public Builder setParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.parameters_ = value;
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder setParameters(Parameters.Builder builderForValue) {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = builderForValue.build();
               this.onChanged();
            } else {
               this.parametersBuilder_.setMessage(builderForValue.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder mergeParameters(Parameters value) {
            if (this.parametersBuilder_ == null) {
               if ((this.bitField0_ & 512) == 512 && this.parameters_ != HbaseMetastoreProto.Parameters.getDefaultInstance()) {
                  this.parameters_ = HbaseMetastoreProto.Parameters.newBuilder(this.parameters_).mergeFrom(value).buildPartial();
               } else {
                  this.parameters_ = value;
               }

               this.onChanged();
            } else {
               this.parametersBuilder_.mergeFrom(value);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public Builder clearParameters() {
            if (this.parametersBuilder_ == null) {
               this.parameters_ = HbaseMetastoreProto.Parameters.getDefaultInstance();
               this.onChanged();
            } else {
               this.parametersBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public Parameters.Builder getParametersBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return (Parameters.Builder)this.getParametersFieldBuilder().getBuilder();
         }

         public ParametersOrBuilder getParametersOrBuilder() {
            return (ParametersOrBuilder)(this.parametersBuilder_ != null ? (ParametersOrBuilder)this.parametersBuilder_.getMessageOrBuilder() : this.parameters_);
         }

         private SingleFieldBuilder getParametersFieldBuilder() {
            if (this.parametersBuilder_ == null) {
               this.parametersBuilder_ = new SingleFieldBuilder(this.parameters_, this.getParentForChildren(), this.isClean());
               this.parameters_ = null;
            }

            return this.parametersBuilder_;
         }

         public boolean hasDeferredRebuild() {
            return (this.bitField0_ & 1024) == 1024;
         }

         public boolean getDeferredRebuild() {
            return this.deferredRebuild_;
         }

         public Builder setDeferredRebuild(boolean value) {
            this.bitField0_ |= 1024;
            this.deferredRebuild_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearDeferredRebuild() {
            this.bitField0_ &= -1025;
            this.deferredRebuild_ = false;
            this.onChanged();
            return this;
         }
      }
   }

   public static final class PartitionKeyComparator extends GeneratedMessage implements PartitionKeyComparatorOrBuilder {
      private static final PartitionKeyComparator defaultInstance = new PartitionKeyComparator(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public PartitionKeyComparator parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PartitionKeyComparator(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int NAMES_FIELD_NUMBER = 1;
      private Object names_;
      public static final int TYPES_FIELD_NUMBER = 2;
      private Object types_;
      public static final int OP_FIELD_NUMBER = 3;
      private List op_;
      public static final int RANGE_FIELD_NUMBER = 4;
      private List range_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private PartitionKeyComparator(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private PartitionKeyComparator(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static PartitionKeyComparator getDefaultInstance() {
         return defaultInstance;
      }

      public PartitionKeyComparator getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PartitionKeyComparator(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.names_ = input.readBytes();
                     break;
                  case 18:
                     this.bitField0_ |= 2;
                     this.types_ = input.readBytes();
                     break;
                  case 26:
                     if ((mutable_bitField0_ & 4) != 4) {
                        this.op_ = new ArrayList();
                        mutable_bitField0_ |= 4;
                     }

                     this.op_.add(input.readMessage(HbaseMetastoreProto.PartitionKeyComparator.Operator.PARSER, extensionRegistry));
                     break;
                  case 34:
                     if ((mutable_bitField0_ & 8) != 8) {
                        this.range_ = new ArrayList();
                        mutable_bitField0_ |= 8;
                     }

                     this.range_.add(input.readMessage(HbaseMetastoreProto.PartitionKeyComparator.Range.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 4) == 4) {
               this.op_ = Collections.unmodifiableList(this.op_);
            }

            if ((mutable_bitField0_ & 8) == 8) {
               this.range_ = Collections.unmodifiableList(this.range_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable.ensureFieldAccessorsInitialized(PartitionKeyComparator.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasNames() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getNames() {
         Object ref = this.names_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.names_ = s;
            }

            return s;
         }
      }

      public ByteString getNamesBytes() {
         Object ref = this.names_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.names_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public boolean hasTypes() {
         return (this.bitField0_ & 2) == 2;
      }

      public String getTypes() {
         Object ref = this.types_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.types_ = s;
            }

            return s;
         }
      }

      public ByteString getTypesBytes() {
         Object ref = this.types_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.types_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public List getOpList() {
         return this.op_;
      }

      public List getOpOrBuilderList() {
         return this.op_;
      }

      public int getOpCount() {
         return this.op_.size();
      }

      public Operator getOp(int index) {
         return (Operator)this.op_.get(index);
      }

      public OperatorOrBuilder getOpOrBuilder(int index) {
         return (OperatorOrBuilder)this.op_.get(index);
      }

      public List getRangeList() {
         return this.range_;
      }

      public List getRangeOrBuilderList() {
         return this.range_;
      }

      public int getRangeCount() {
         return this.range_.size();
      }

      public Range getRange(int index) {
         return (Range)this.range_.get(index);
      }

      public RangeOrBuilder getRangeOrBuilder(int index) {
         return (RangeOrBuilder)this.range_.get(index);
      }

      private void initFields() {
         this.names_ = "";
         this.types_ = "";
         this.op_ = Collections.emptyList();
         this.range_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasNames()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else if (!this.hasTypes()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            for(int i = 0; i < this.getOpCount(); ++i) {
               if (!this.getOp(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(int i = 0; i < this.getRangeCount(); ++i) {
               if (!this.getRange(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getNamesBytes());
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBytes(2, this.getTypesBytes());
         }

         for(int i = 0; i < this.op_.size(); ++i) {
            output.writeMessage(3, (MessageLite)this.op_.get(i));
         }

         for(int i = 0; i < this.range_.size(); ++i) {
            output.writeMessage(4, (MessageLite)this.range_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getNamesBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBytesSize(2, this.getTypesBytes());
            }

            for(int i = 0; i < this.op_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.op_.get(i));
            }

            for(int i = 0; i < this.range_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.range_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static PartitionKeyComparator parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PartitionKeyComparator)PARSER.parseFrom(data);
      }

      public static PartitionKeyComparator parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PartitionKeyComparator)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PartitionKeyComparator parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PartitionKeyComparator)PARSER.parseFrom(data);
      }

      public static PartitionKeyComparator parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PartitionKeyComparator)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PartitionKeyComparator parseFrom(InputStream input) throws IOException {
         return (PartitionKeyComparator)PARSER.parseFrom(input);
      }

      public static PartitionKeyComparator parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PartitionKeyComparator)PARSER.parseFrom(input, extensionRegistry);
      }

      public static PartitionKeyComparator parseDelimitedFrom(InputStream input) throws IOException {
         return (PartitionKeyComparator)PARSER.parseDelimitedFrom(input);
      }

      public static PartitionKeyComparator parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PartitionKeyComparator)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static PartitionKeyComparator parseFrom(CodedInputStream input) throws IOException {
         return (PartitionKeyComparator)PARSER.parseFrom(input);
      }

      public static PartitionKeyComparator parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PartitionKeyComparator)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.PartitionKeyComparator.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(PartitionKeyComparator prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class Mark extends GeneratedMessage implements MarkOrBuilder {
         private static final Mark defaultInstance = new Mark(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public Mark parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new Mark(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int VALUE_FIELD_NUMBER = 1;
         private Object value_;
         public static final int INCLUSIVE_FIELD_NUMBER = 2;
         private boolean inclusive_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private Mark(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private Mark(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static Mark getDefaultInstance() {
            return defaultInstance;
         }

         public Mark getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Mark(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.value_ = input.readBytes();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.inclusive_ = input.readBool();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable.ensureFieldAccessorsInitialized(Mark.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasValue() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getValue() {
            Object ref = this.value_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.value_ = s;
               }

               return s;
            }
         }

         public ByteString getValueBytes() {
            Object ref = this.value_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.value_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasInclusive() {
            return (this.bitField0_ & 2) == 2;
         }

         public boolean getInclusive() {
            return this.inclusive_;
         }

         private void initFields() {
            this.value_ = "";
            this.inclusive_ = false;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasValue()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasInclusive()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getValueBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBool(2, this.inclusive_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getValueBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBoolSize(2, this.inclusive_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static Mark parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (Mark)PARSER.parseFrom(data);
         }

         public static Mark parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Mark)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Mark parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (Mark)PARSER.parseFrom(data);
         }

         public static Mark parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Mark)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Mark parseFrom(InputStream input) throws IOException {
            return (Mark)PARSER.parseFrom(input);
         }

         public static Mark parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Mark)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Mark parseDelimitedFrom(InputStream input) throws IOException {
            return (Mark)PARSER.parseDelimitedFrom(input);
         }

         public static Mark parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Mark)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static Mark parseFrom(CodedInputStream input) throws IOException {
            return (Mark)PARSER.parseFrom(input);
         }

         public static Mark parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Mark)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.PartitionKeyComparator.Mark.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(Mark prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements MarkOrBuilder {
            private int bitField0_;
            private Object value_;
            private boolean inclusive_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable.ensureFieldAccessorsInitialized(Mark.class, Builder.class);
            }

            private Builder() {
               this.value_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.value_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.PartitionKeyComparator.Mark.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.value_ = "";
               this.bitField0_ &= -2;
               this.inclusive_ = false;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor;
            }

            public Mark getDefaultInstanceForType() {
               return HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
            }

            public Mark build() {
               Mark result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public Mark buildPartial() {
               Mark result = new Mark(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.value_ = this.value_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.inclusive_ = this.inclusive_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof Mark) {
                  return this.mergeFrom((Mark)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(Mark other) {
               if (other == HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasValue()) {
                     this.bitField0_ |= 1;
                     this.value_ = other.value_;
                     this.onChanged();
                  }

                  if (other.hasInclusive()) {
                     this.setInclusive(other.getInclusive());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasValue()) {
                  return false;
               } else {
                  return this.hasInclusive();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               Mark parsedMessage = null;

               try {
                  parsedMessage = (Mark)HbaseMetastoreProto.PartitionKeyComparator.Mark.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (Mark)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasValue() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getValue() {
               Object ref = this.value_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.value_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getValueBytes() {
               Object ref = this.value_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.value_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setValue(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.value_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearValue() {
               this.bitField0_ &= -2;
               this.value_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance().getValue();
               this.onChanged();
               return this;
            }

            public Builder setValueBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.value_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasInclusive() {
               return (this.bitField0_ & 2) == 2;
            }

            public boolean getInclusive() {
               return this.inclusive_;
            }

            public Builder setInclusive(boolean value) {
               this.bitField0_ |= 2;
               this.inclusive_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearInclusive() {
               this.bitField0_ &= -3;
               this.inclusive_ = false;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class Range extends GeneratedMessage implements RangeOrBuilder {
         private static final Range defaultInstance = new Range(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public Range parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new Range(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int KEY_FIELD_NUMBER = 1;
         private Object key_;
         public static final int START_FIELD_NUMBER = 2;
         private Mark start_;
         public static final int END_FIELD_NUMBER = 3;
         private Mark end_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private Range(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private Range(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static Range getDefaultInstance() {
            return defaultInstance;
         }

         public Range getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Range(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.key_ = input.readBytes();
                        break;
                     case 18:
                        Mark.Builder subBuilder = null;
                        if ((this.bitField0_ & 2) == 2) {
                           subBuilder = this.start_.toBuilder();
                        }

                        this.start_ = (Mark)input.readMessage(HbaseMetastoreProto.PartitionKeyComparator.Mark.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.start_);
                           this.start_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 2;
                        break;
                     case 26:
                        Mark.Builder subBuilder = null;
                        if ((this.bitField0_ & 4) == 4) {
                           subBuilder = this.end_.toBuilder();
                        }

                        this.end_ = (Mark)input.readMessage(HbaseMetastoreProto.PartitionKeyComparator.Mark.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                           subBuilder.mergeFrom(this.end_);
                           this.end_ = subBuilder.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable.ensureFieldAccessorsInitialized(Range.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasKey() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getKey() {
            Object ref = this.key_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.key_ = s;
               }

               return s;
            }
         }

         public ByteString getKeyBytes() {
            Object ref = this.key_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.key_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasStart() {
            return (this.bitField0_ & 2) == 2;
         }

         public Mark getStart() {
            return this.start_;
         }

         public MarkOrBuilder getStartOrBuilder() {
            return this.start_;
         }

         public boolean hasEnd() {
            return (this.bitField0_ & 4) == 4;
         }

         public Mark getEnd() {
            return this.end_;
         }

         public MarkOrBuilder getEndOrBuilder() {
            return this.end_;
         }

         private void initFields() {
            this.key_ = "";
            this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
            this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasKey()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (this.hasStart() && !this.getStart().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (this.hasEnd() && !this.getEnd().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getKeyBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeMessage(2, this.start_);
            }

            if ((this.bitField0_ & 4) == 4) {
               output.writeMessage(3, this.end_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getKeyBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeMessageSize(2, this.start_);
               }

               if ((this.bitField0_ & 4) == 4) {
                  size += CodedOutputStream.computeMessageSize(3, this.end_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static Range parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (Range)PARSER.parseFrom(data);
         }

         public static Range parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Range)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Range parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (Range)PARSER.parseFrom(data);
         }

         public static Range parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Range)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Range parseFrom(InputStream input) throws IOException {
            return (Range)PARSER.parseFrom(input);
         }

         public static Range parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Range)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Range parseDelimitedFrom(InputStream input) throws IOException {
            return (Range)PARSER.parseDelimitedFrom(input);
         }

         public static Range parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Range)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static Range parseFrom(CodedInputStream input) throws IOException {
            return (Range)PARSER.parseFrom(input);
         }

         public static Range parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Range)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.PartitionKeyComparator.Range.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(Range prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements RangeOrBuilder {
            private int bitField0_;
            private Object key_;
            private Mark start_;
            private SingleFieldBuilder startBuilder_;
            private Mark end_;
            private SingleFieldBuilder endBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable.ensureFieldAccessorsInitialized(Range.class, Builder.class);
            }

            private Builder() {
               this.key_ = "";
               this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.key_ = "";
               this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.PartitionKeyComparator.Range.alwaysUseFieldBuilders) {
                  this.getStartFieldBuilder();
                  this.getEndFieldBuilder();
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.key_ = "";
               this.bitField0_ &= -2;
               if (this.startBuilder_ == null) {
                  this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               } else {
                  this.startBuilder_.clear();
               }

               this.bitField0_ &= -3;
               if (this.endBuilder_ == null) {
                  this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
               } else {
                  this.endBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor;
            }

            public Range getDefaultInstanceForType() {
               return HbaseMetastoreProto.PartitionKeyComparator.Range.getDefaultInstance();
            }

            public Range build() {
               Range result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public Range buildPartial() {
               Range result = new Range(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.key_ = this.key_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               if (this.startBuilder_ == null) {
                  result.start_ = this.start_;
               } else {
                  result.start_ = (Mark)this.startBuilder_.build();
               }

               if ((from_bitField0_ & 4) == 4) {
                  to_bitField0_ |= 4;
               }

               if (this.endBuilder_ == null) {
                  result.end_ = this.end_;
               } else {
                  result.end_ = (Mark)this.endBuilder_.build();
               }

               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof Range) {
                  return this.mergeFrom((Range)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(Range other) {
               if (other == HbaseMetastoreProto.PartitionKeyComparator.Range.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasKey()) {
                     this.bitField0_ |= 1;
                     this.key_ = other.key_;
                     this.onChanged();
                  }

                  if (other.hasStart()) {
                     this.mergeStart(other.getStart());
                  }

                  if (other.hasEnd()) {
                     this.mergeEnd(other.getEnd());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasKey()) {
                  return false;
               } else if (this.hasStart() && !this.getStart().isInitialized()) {
                  return false;
               } else {
                  return !this.hasEnd() || this.getEnd().isInitialized();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               Range parsedMessage = null;

               try {
                  parsedMessage = (Range)HbaseMetastoreProto.PartitionKeyComparator.Range.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (Range)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasKey() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getKey() {
               Object ref = this.key_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.key_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getKeyBytes() {
               Object ref = this.key_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.key_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setKey(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.key_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearKey() {
               this.bitField0_ &= -2;
               this.key_ = HbaseMetastoreProto.PartitionKeyComparator.Range.getDefaultInstance().getKey();
               this.onChanged();
               return this;
            }

            public Builder setKeyBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.key_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasStart() {
               return (this.bitField0_ & 2) == 2;
            }

            public Mark getStart() {
               return this.startBuilder_ == null ? this.start_ : (Mark)this.startBuilder_.getMessage();
            }

            public Builder setStart(Mark value) {
               if (this.startBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.start_ = value;
                  this.onChanged();
               } else {
                  this.startBuilder_.setMessage(value);
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder setStart(Mark.Builder builderForValue) {
               if (this.startBuilder_ == null) {
                  this.start_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.startBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder mergeStart(Mark value) {
               if (this.startBuilder_ == null) {
                  if ((this.bitField0_ & 2) == 2 && this.start_ != HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance()) {
                     this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.newBuilder(this.start_).mergeFrom(value).buildPartial();
                  } else {
                     this.start_ = value;
                  }

                  this.onChanged();
               } else {
                  this.startBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 2;
               return this;
            }

            public Builder clearStart() {
               if (this.startBuilder_ == null) {
                  this.start_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
                  this.onChanged();
               } else {
                  this.startBuilder_.clear();
               }

               this.bitField0_ &= -3;
               return this;
            }

            public Mark.Builder getStartBuilder() {
               this.bitField0_ |= 2;
               this.onChanged();
               return (Mark.Builder)this.getStartFieldBuilder().getBuilder();
            }

            public MarkOrBuilder getStartOrBuilder() {
               return (MarkOrBuilder)(this.startBuilder_ != null ? (MarkOrBuilder)this.startBuilder_.getMessageOrBuilder() : this.start_);
            }

            private SingleFieldBuilder getStartFieldBuilder() {
               if (this.startBuilder_ == null) {
                  this.startBuilder_ = new SingleFieldBuilder(this.start_, this.getParentForChildren(), this.isClean());
                  this.start_ = null;
               }

               return this.startBuilder_;
            }

            public boolean hasEnd() {
               return (this.bitField0_ & 4) == 4;
            }

            public Mark getEnd() {
               return this.endBuilder_ == null ? this.end_ : (Mark)this.endBuilder_.getMessage();
            }

            public Builder setEnd(Mark value) {
               if (this.endBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.end_ = value;
                  this.onChanged();
               } else {
                  this.endBuilder_.setMessage(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder setEnd(Mark.Builder builderForValue) {
               if (this.endBuilder_ == null) {
                  this.end_ = builderForValue.build();
                  this.onChanged();
               } else {
                  this.endBuilder_.setMessage(builderForValue.build());
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder mergeEnd(Mark value) {
               if (this.endBuilder_ == null) {
                  if ((this.bitField0_ & 4) == 4 && this.end_ != HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance()) {
                     this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.newBuilder(this.end_).mergeFrom(value).buildPartial();
                  } else {
                     this.end_ = value;
                  }

                  this.onChanged();
               } else {
                  this.endBuilder_.mergeFrom(value);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public Builder clearEnd() {
               if (this.endBuilder_ == null) {
                  this.end_ = HbaseMetastoreProto.PartitionKeyComparator.Mark.getDefaultInstance();
                  this.onChanged();
               } else {
                  this.endBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public Mark.Builder getEndBuilder() {
               this.bitField0_ |= 4;
               this.onChanged();
               return (Mark.Builder)this.getEndFieldBuilder().getBuilder();
            }

            public MarkOrBuilder getEndOrBuilder() {
               return (MarkOrBuilder)(this.endBuilder_ != null ? (MarkOrBuilder)this.endBuilder_.getMessageOrBuilder() : this.end_);
            }

            private SingleFieldBuilder getEndFieldBuilder() {
               if (this.endBuilder_ == null) {
                  this.endBuilder_ = new SingleFieldBuilder(this.end_, this.getParentForChildren(), this.isClean());
                  this.end_ = null;
               }

               return this.endBuilder_;
            }
         }
      }

      public static final class Operator extends GeneratedMessage implements OperatorOrBuilder {
         private static final Operator defaultInstance = new Operator(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public Operator parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new Operator(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int TYPE_FIELD_NUMBER = 1;
         private Type type_;
         public static final int KEY_FIELD_NUMBER = 2;
         private Object key_;
         public static final int VAL_FIELD_NUMBER = 3;
         private Object val_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private Operator(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private Operator(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static Operator getDefaultInstance() {
            return defaultInstance;
         }

         public Operator getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Operator(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 8:
                        int rawValue = input.readEnum();
                        Type value = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.valueOf(rawValue);
                        if (value == null) {
                           unknownFields.mergeVarintField(1, rawValue);
                        } else {
                           this.bitField0_ |= 1;
                           this.type_ = value;
                        }
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.key_ = input.readBytes();
                        break;
                     case 26:
                        this.bitField0_ |= 4;
                        this.val_ = input.readBytes();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable.ensureFieldAccessorsInitialized(Operator.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasType() {
            return (this.bitField0_ & 1) == 1;
         }

         public Type getType() {
            return this.type_;
         }

         public boolean hasKey() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getKey() {
            Object ref = this.key_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.key_ = s;
               }

               return s;
            }
         }

         public ByteString getKeyBytes() {
            Object ref = this.key_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.key_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasVal() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getVal() {
            Object ref = this.val_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.val_ = s;
               }

               return s;
            }
         }

         public ByteString getValBytes() {
            Object ref = this.val_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.val_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         private void initFields() {
            this.type_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.LIKE;
            this.key_ = "";
            this.val_ = "";
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasType()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasKey()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasVal()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeEnum(1, this.type_.getNumber());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBytes(2, this.getKeyBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               output.writeBytes(3, this.getValBytes());
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBytesSize(2, this.getKeyBytes());
               }

               if ((this.bitField0_ & 4) == 4) {
                  size += CodedOutputStream.computeBytesSize(3, this.getValBytes());
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static Operator parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (Operator)PARSER.parseFrom(data);
         }

         public static Operator parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Operator)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Operator parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (Operator)PARSER.parseFrom(data);
         }

         public static Operator parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (Operator)PARSER.parseFrom(data, extensionRegistry);
         }

         public static Operator parseFrom(InputStream input) throws IOException {
            return (Operator)PARSER.parseFrom(input);
         }

         public static Operator parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Operator)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Operator parseDelimitedFrom(InputStream input) throws IOException {
            return (Operator)PARSER.parseDelimitedFrom(input);
         }

         public static Operator parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Operator)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static Operator parseFrom(CodedInputStream input) throws IOException {
            return (Operator)PARSER.parseFrom(input);
         }

         public static Operator parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (Operator)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.PartitionKeyComparator.Operator.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(Operator prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static enum Type implements ProtocolMessageEnum {
            LIKE(0, 0),
            NOTEQUALS(1, 1);

            public static final int LIKE_VALUE = 0;
            public static final int NOTEQUALS_VALUE = 1;
            private static Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
               public Type findValueByNumber(int number) {
                  return HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.valueOf(number);
               }
            };
            private static final Type[] VALUES = values();
            private final int index;
            private final int value;

            public final int getNumber() {
               return this.value;
            }

            public static Type valueOf(int value) {
               switch (value) {
                  case 0:
                     return LIKE;
                  case 1:
                     return NOTEQUALS;
                  default:
                     return null;
               }
            }

            public static Internal.EnumLiteMap internalGetValueMap() {
               return internalValueMap;
            }

            public final Descriptors.EnumValueDescriptor getValueDescriptor() {
               return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.index);
            }

            public final Descriptors.EnumDescriptor getDescriptorForType() {
               return getDescriptor();
            }

            public static final Descriptors.EnumDescriptor getDescriptor() {
               return (Descriptors.EnumDescriptor)HbaseMetastoreProto.PartitionKeyComparator.Operator.getDescriptor().getEnumTypes().get(0);
            }

            public static Type valueOf(Descriptors.EnumValueDescriptor desc) {
               if (desc.getType() != getDescriptor()) {
                  throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
               } else {
                  return VALUES[desc.getIndex()];
               }
            }

            private Type(int index, int value) {
               this.index = index;
               this.value = value;
            }
         }

         public static final class Builder extends GeneratedMessage.Builder implements OperatorOrBuilder {
            private int bitField0_;
            private Type type_;
            private Object key_;
            private Object val_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable.ensureFieldAccessorsInitialized(Operator.class, Builder.class);
            }

            private Builder() {
               this.type_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.LIKE;
               this.key_ = "";
               this.val_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.type_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.LIKE;
               this.key_ = "";
               this.val_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.PartitionKeyComparator.Operator.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.type_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.LIKE;
               this.bitField0_ &= -2;
               this.key_ = "";
               this.bitField0_ &= -3;
               this.val_ = "";
               this.bitField0_ &= -5;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor;
            }

            public Operator getDefaultInstanceForType() {
               return HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance();
            }

            public Operator build() {
               Operator result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public Operator buildPartial() {
               Operator result = new Operator(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.type_ = this.type_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.key_ = this.key_;
               if ((from_bitField0_ & 4) == 4) {
                  to_bitField0_ |= 4;
               }

               result.val_ = this.val_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof Operator) {
                  return this.mergeFrom((Operator)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(Operator other) {
               if (other == HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasType()) {
                     this.setType(other.getType());
                  }

                  if (other.hasKey()) {
                     this.bitField0_ |= 2;
                     this.key_ = other.key_;
                     this.onChanged();
                  }

                  if (other.hasVal()) {
                     this.bitField0_ |= 4;
                     this.val_ = other.val_;
                     this.onChanged();
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasType()) {
                  return false;
               } else if (!this.hasKey()) {
                  return false;
               } else {
                  return this.hasVal();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               Operator parsedMessage = null;

               try {
                  parsedMessage = (Operator)HbaseMetastoreProto.PartitionKeyComparator.Operator.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (Operator)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasType() {
               return (this.bitField0_ & 1) == 1;
            }

            public Type getType() {
               return this.type_;
            }

            public Builder setType(Type value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.type_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearType() {
               this.bitField0_ &= -2;
               this.type_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.Type.LIKE;
               this.onChanged();
               return this;
            }

            public boolean hasKey() {
               return (this.bitField0_ & 2) == 2;
            }

            public String getKey() {
               Object ref = this.key_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.key_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getKeyBytes() {
               Object ref = this.key_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.key_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setKey(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.key_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearKey() {
               this.bitField0_ &= -3;
               this.key_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance().getKey();
               this.onChanged();
               return this;
            }

            public Builder setKeyBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.key_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasVal() {
               return (this.bitField0_ & 4) == 4;
            }

            public String getVal() {
               Object ref = this.val_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.val_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getValBytes() {
               Object ref = this.val_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.val_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setVal(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.val_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearVal() {
               this.bitField0_ &= -5;
               this.val_ = HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance().getVal();
               this.onChanged();
               return this;
            }

            public Builder setValBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.val_ = value;
                  this.onChanged();
                  return this;
               }
            }
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements PartitionKeyComparatorOrBuilder {
         private int bitField0_;
         private Object names_;
         private Object types_;
         private List op_;
         private RepeatedFieldBuilder opBuilder_;
         private List range_;
         private RepeatedFieldBuilder rangeBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable.ensureFieldAccessorsInitialized(PartitionKeyComparator.class, Builder.class);
         }

         private Builder() {
            this.names_ = "";
            this.types_ = "";
            this.op_ = Collections.emptyList();
            this.range_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.names_ = "";
            this.types_ = "";
            this.op_ = Collections.emptyList();
            this.range_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.PartitionKeyComparator.alwaysUseFieldBuilders) {
               this.getOpFieldBuilder();
               this.getRangeFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.names_ = "";
            this.bitField0_ &= -2;
            this.types_ = "";
            this.bitField0_ &= -3;
            if (this.opBuilder_ == null) {
               this.op_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.opBuilder_.clear();
            }

            if (this.rangeBuilder_ == null) {
               this.range_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.rangeBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor;
         }

         public PartitionKeyComparator getDefaultInstanceForType() {
            return HbaseMetastoreProto.PartitionKeyComparator.getDefaultInstance();
         }

         public PartitionKeyComparator build() {
            PartitionKeyComparator result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PartitionKeyComparator buildPartial() {
            PartitionKeyComparator result = new PartitionKeyComparator(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.names_ = this.names_;
            if ((from_bitField0_ & 2) == 2) {
               to_bitField0_ |= 2;
            }

            result.types_ = this.types_;
            if (this.opBuilder_ == null) {
               if ((this.bitField0_ & 4) == 4) {
                  this.op_ = Collections.unmodifiableList(this.op_);
                  this.bitField0_ &= -5;
               }

               result.op_ = this.op_;
            } else {
               result.op_ = this.opBuilder_.build();
            }

            if (this.rangeBuilder_ == null) {
               if ((this.bitField0_ & 8) == 8) {
                  this.range_ = Collections.unmodifiableList(this.range_);
                  this.bitField0_ &= -9;
               }

               result.range_ = this.range_;
            } else {
               result.range_ = this.rangeBuilder_.build();
            }

            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PartitionKeyComparator) {
               return this.mergeFrom((PartitionKeyComparator)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PartitionKeyComparator other) {
            if (other == HbaseMetastoreProto.PartitionKeyComparator.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasNames()) {
                  this.bitField0_ |= 1;
                  this.names_ = other.names_;
                  this.onChanged();
               }

               if (other.hasTypes()) {
                  this.bitField0_ |= 2;
                  this.types_ = other.types_;
                  this.onChanged();
               }

               if (this.opBuilder_ == null) {
                  if (!other.op_.isEmpty()) {
                     if (this.op_.isEmpty()) {
                        this.op_ = other.op_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureOpIsMutable();
                        this.op_.addAll(other.op_);
                     }

                     this.onChanged();
                  }
               } else if (!other.op_.isEmpty()) {
                  if (this.opBuilder_.isEmpty()) {
                     this.opBuilder_.dispose();
                     this.opBuilder_ = null;
                     this.op_ = other.op_;
                     this.bitField0_ &= -5;
                     this.opBuilder_ = HbaseMetastoreProto.PartitionKeyComparator.alwaysUseFieldBuilders ? this.getOpFieldBuilder() : null;
                  } else {
                     this.opBuilder_.addAllMessages(other.op_);
                  }
               }

               if (this.rangeBuilder_ == null) {
                  if (!other.range_.isEmpty()) {
                     if (this.range_.isEmpty()) {
                        this.range_ = other.range_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureRangeIsMutable();
                        this.range_.addAll(other.range_);
                     }

                     this.onChanged();
                  }
               } else if (!other.range_.isEmpty()) {
                  if (this.rangeBuilder_.isEmpty()) {
                     this.rangeBuilder_.dispose();
                     this.rangeBuilder_ = null;
                     this.range_ = other.range_;
                     this.bitField0_ &= -9;
                     this.rangeBuilder_ = HbaseMetastoreProto.PartitionKeyComparator.alwaysUseFieldBuilders ? this.getRangeFieldBuilder() : null;
                  } else {
                     this.rangeBuilder_.addAllMessages(other.range_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasNames()) {
               return false;
            } else if (!this.hasTypes()) {
               return false;
            } else {
               for(int i = 0; i < this.getOpCount(); ++i) {
                  if (!this.getOp(i).isInitialized()) {
                     return false;
                  }
               }

               for(int i = 0; i < this.getRangeCount(); ++i) {
                  if (!this.getRange(i).isInitialized()) {
                     return false;
                  }
               }

               return true;
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PartitionKeyComparator parsedMessage = null;

            try {
               parsedMessage = (PartitionKeyComparator)HbaseMetastoreProto.PartitionKeyComparator.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PartitionKeyComparator)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasNames() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getNames() {
            Object ref = this.names_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.names_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getNamesBytes() {
            Object ref = this.names_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.names_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setNames(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.names_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearNames() {
            this.bitField0_ &= -2;
            this.names_ = HbaseMetastoreProto.PartitionKeyComparator.getDefaultInstance().getNames();
            this.onChanged();
            return this;
         }

         public Builder setNamesBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.names_ = value;
               this.onChanged();
               return this;
            }
         }

         public boolean hasTypes() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getTypes() {
            Object ref = this.types_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.types_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getTypesBytes() {
            Object ref = this.types_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.types_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setTypes(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.types_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearTypes() {
            this.bitField0_ &= -3;
            this.types_ = HbaseMetastoreProto.PartitionKeyComparator.getDefaultInstance().getTypes();
            this.onChanged();
            return this;
         }

         public Builder setTypesBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.types_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureOpIsMutable() {
            if ((this.bitField0_ & 4) != 4) {
               this.op_ = new ArrayList(this.op_);
               this.bitField0_ |= 4;
            }

         }

         public List getOpList() {
            return this.opBuilder_ == null ? Collections.unmodifiableList(this.op_) : this.opBuilder_.getMessageList();
         }

         public int getOpCount() {
            return this.opBuilder_ == null ? this.op_.size() : this.opBuilder_.getCount();
         }

         public Operator getOp(int index) {
            return this.opBuilder_ == null ? (Operator)this.op_.get(index) : (Operator)this.opBuilder_.getMessage(index);
         }

         public Builder setOp(int index, Operator value) {
            if (this.opBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOpIsMutable();
               this.op_.set(index, value);
               this.onChanged();
            } else {
               this.opBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setOp(int index, Operator.Builder builderForValue) {
            if (this.opBuilder_ == null) {
               this.ensureOpIsMutable();
               this.op_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.opBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addOp(Operator value) {
            if (this.opBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOpIsMutable();
               this.op_.add(value);
               this.onChanged();
            } else {
               this.opBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addOp(int index, Operator value) {
            if (this.opBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureOpIsMutable();
               this.op_.add(index, value);
               this.onChanged();
            } else {
               this.opBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addOp(Operator.Builder builderForValue) {
            if (this.opBuilder_ == null) {
               this.ensureOpIsMutable();
               this.op_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.opBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addOp(int index, Operator.Builder builderForValue) {
            if (this.opBuilder_ == null) {
               this.ensureOpIsMutable();
               this.op_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.opBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllOp(Iterable values) {
            if (this.opBuilder_ == null) {
               this.ensureOpIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.op_);
               this.onChanged();
            } else {
               this.opBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearOp() {
            if (this.opBuilder_ == null) {
               this.op_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.opBuilder_.clear();
            }

            return this;
         }

         public Builder removeOp(int index) {
            if (this.opBuilder_ == null) {
               this.ensureOpIsMutable();
               this.op_.remove(index);
               this.onChanged();
            } else {
               this.opBuilder_.remove(index);
            }

            return this;
         }

         public Operator.Builder getOpBuilder(int index) {
            return (Operator.Builder)this.getOpFieldBuilder().getBuilder(index);
         }

         public OperatorOrBuilder getOpOrBuilder(int index) {
            return this.opBuilder_ == null ? (OperatorOrBuilder)this.op_.get(index) : (OperatorOrBuilder)this.opBuilder_.getMessageOrBuilder(index);
         }

         public List getOpOrBuilderList() {
            return this.opBuilder_ != null ? this.opBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.op_);
         }

         public Operator.Builder addOpBuilder() {
            return (Operator.Builder)this.getOpFieldBuilder().addBuilder(HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance());
         }

         public Operator.Builder addOpBuilder(int index) {
            return (Operator.Builder)this.getOpFieldBuilder().addBuilder(index, HbaseMetastoreProto.PartitionKeyComparator.Operator.getDefaultInstance());
         }

         public List getOpBuilderList() {
            return this.getOpFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getOpFieldBuilder() {
            if (this.opBuilder_ == null) {
               this.opBuilder_ = new RepeatedFieldBuilder(this.op_, (this.bitField0_ & 4) == 4, this.getParentForChildren(), this.isClean());
               this.op_ = null;
            }

            return this.opBuilder_;
         }

         private void ensureRangeIsMutable() {
            if ((this.bitField0_ & 8) != 8) {
               this.range_ = new ArrayList(this.range_);
               this.bitField0_ |= 8;
            }

         }

         public List getRangeList() {
            return this.rangeBuilder_ == null ? Collections.unmodifiableList(this.range_) : this.rangeBuilder_.getMessageList();
         }

         public int getRangeCount() {
            return this.rangeBuilder_ == null ? this.range_.size() : this.rangeBuilder_.getCount();
         }

         public Range getRange(int index) {
            return this.rangeBuilder_ == null ? (Range)this.range_.get(index) : (Range)this.rangeBuilder_.getMessage(index);
         }

         public Builder setRange(int index, Range value) {
            if (this.rangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRangeIsMutable();
               this.range_.set(index, value);
               this.onChanged();
            } else {
               this.rangeBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setRange(int index, Range.Builder builderForValue) {
            if (this.rangeBuilder_ == null) {
               this.ensureRangeIsMutable();
               this.range_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.rangeBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addRange(Range value) {
            if (this.rangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRangeIsMutable();
               this.range_.add(value);
               this.onChanged();
            } else {
               this.rangeBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addRange(int index, Range value) {
            if (this.rangeBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureRangeIsMutable();
               this.range_.add(index, value);
               this.onChanged();
            } else {
               this.rangeBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addRange(Range.Builder builderForValue) {
            if (this.rangeBuilder_ == null) {
               this.ensureRangeIsMutable();
               this.range_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.rangeBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addRange(int index, Range.Builder builderForValue) {
            if (this.rangeBuilder_ == null) {
               this.ensureRangeIsMutable();
               this.range_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.rangeBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllRange(Iterable values) {
            if (this.rangeBuilder_ == null) {
               this.ensureRangeIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.range_);
               this.onChanged();
            } else {
               this.rangeBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearRange() {
            if (this.rangeBuilder_ == null) {
               this.range_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.rangeBuilder_.clear();
            }

            return this;
         }

         public Builder removeRange(int index) {
            if (this.rangeBuilder_ == null) {
               this.ensureRangeIsMutable();
               this.range_.remove(index);
               this.onChanged();
            } else {
               this.rangeBuilder_.remove(index);
            }

            return this;
         }

         public Range.Builder getRangeBuilder(int index) {
            return (Range.Builder)this.getRangeFieldBuilder().getBuilder(index);
         }

         public RangeOrBuilder getRangeOrBuilder(int index) {
            return this.rangeBuilder_ == null ? (RangeOrBuilder)this.range_.get(index) : (RangeOrBuilder)this.rangeBuilder_.getMessageOrBuilder(index);
         }

         public List getRangeOrBuilderList() {
            return this.rangeBuilder_ != null ? this.rangeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.range_);
         }

         public Range.Builder addRangeBuilder() {
            return (Range.Builder)this.getRangeFieldBuilder().addBuilder(HbaseMetastoreProto.PartitionKeyComparator.Range.getDefaultInstance());
         }

         public Range.Builder addRangeBuilder(int index) {
            return (Range.Builder)this.getRangeFieldBuilder().addBuilder(index, HbaseMetastoreProto.PartitionKeyComparator.Range.getDefaultInstance());
         }

         public List getRangeBuilderList() {
            return this.getRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getRangeFieldBuilder() {
            if (this.rangeBuilder_ == null) {
               this.rangeBuilder_ = new RepeatedFieldBuilder(this.range_, (this.bitField0_ & 8) == 8, this.getParentForChildren(), this.isClean());
               this.range_ = null;
            }

            return this.rangeBuilder_;
         }
      }

      public interface MarkOrBuilder extends MessageOrBuilder {
         boolean hasValue();

         String getValue();

         ByteString getValueBytes();

         boolean hasInclusive();

         boolean getInclusive();
      }

      public interface OperatorOrBuilder extends MessageOrBuilder {
         boolean hasType();

         Operator.Type getType();

         boolean hasKey();

         String getKey();

         ByteString getKeyBytes();

         boolean hasVal();

         String getVal();

         ByteString getValBytes();
      }

      public interface RangeOrBuilder extends MessageOrBuilder {
         boolean hasKey();

         String getKey();

         ByteString getKeyBytes();

         boolean hasStart();

         Mark getStart();

         MarkOrBuilder getStartOrBuilder();

         boolean hasEnd();

         Mark getEnd();

         MarkOrBuilder getEndOrBuilder();
      }
   }

   public static final class PrimaryKey extends GeneratedMessage implements PrimaryKeyOrBuilder {
      private static final PrimaryKey defaultInstance = new PrimaryKey(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public PrimaryKey parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new PrimaryKey(input, extensionRegistry);
         }
      };
      private int bitField0_;
      public static final int PK_NAME_FIELD_NUMBER = 1;
      private Object pkName_;
      public static final int COLS_FIELD_NUMBER = 2;
      private List cols_;
      public static final int ENABLE_CONSTRAINT_FIELD_NUMBER = 3;
      private boolean enableConstraint_;
      public static final int VALIDATE_CONSTRAINT_FIELD_NUMBER = 4;
      private boolean validateConstraint_;
      public static final int RELY_CONSTRAINT_FIELD_NUMBER = 5;
      private boolean relyConstraint_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private PrimaryKey(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private PrimaryKey(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static PrimaryKey getDefaultInstance() {
         return defaultInstance;
      }

      public PrimaryKey getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private PrimaryKey(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     this.bitField0_ |= 1;
                     this.pkName_ = input.readBytes();
                     break;
                  case 18:
                     if ((mutable_bitField0_ & 2) != 2) {
                        this.cols_ = new ArrayList();
                        mutable_bitField0_ |= 2;
                     }

                     this.cols_.add(input.readMessage(HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.PARSER, extensionRegistry));
                     break;
                  case 24:
                     this.bitField0_ |= 2;
                     this.enableConstraint_ = input.readBool();
                     break;
                  case 32:
                     this.bitField0_ |= 4;
                     this.validateConstraint_ = input.readBool();
                     break;
                  case 40:
                     this.bitField0_ |= 8;
                     this.relyConstraint_ = input.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 2) == 2) {
               this.cols_ = Collections.unmodifiableList(this.cols_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_fieldAccessorTable.ensureFieldAccessorsInitialized(PrimaryKey.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public boolean hasPkName() {
         return (this.bitField0_ & 1) == 1;
      }

      public String getPkName() {
         Object ref = this.pkName_;
         if (ref instanceof String) {
            return (String)ref;
         } else {
            ByteString bs = (ByteString)ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
               this.pkName_ = s;
            }

            return s;
         }
      }

      public ByteString getPkNameBytes() {
         Object ref = this.pkName_;
         if (ref instanceof String) {
            ByteString b = ByteString.copyFromUtf8((String)ref);
            this.pkName_ = b;
            return b;
         } else {
            return (ByteString)ref;
         }
      }

      public List getColsList() {
         return this.cols_;
      }

      public List getColsOrBuilderList() {
         return this.cols_;
      }

      public int getColsCount() {
         return this.cols_.size();
      }

      public PrimaryKeyColumn getCols(int index) {
         return (PrimaryKeyColumn)this.cols_.get(index);
      }

      public PrimaryKeyColumnOrBuilder getColsOrBuilder(int index) {
         return (PrimaryKeyColumnOrBuilder)this.cols_.get(index);
      }

      public boolean hasEnableConstraint() {
         return (this.bitField0_ & 2) == 2;
      }

      public boolean getEnableConstraint() {
         return this.enableConstraint_;
      }

      public boolean hasValidateConstraint() {
         return (this.bitField0_ & 4) == 4;
      }

      public boolean getValidateConstraint() {
         return this.validateConstraint_;
      }

      public boolean hasRelyConstraint() {
         return (this.bitField0_ & 8) == 8;
      }

      public boolean getRelyConstraint() {
         return this.relyConstraint_;
      }

      private void initFields() {
         this.pkName_ = "";
         this.cols_ = Collections.emptyList();
         this.enableConstraint_ = false;
         this.validateConstraint_ = false;
         this.relyConstraint_ = false;
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else if (!this.hasPkName()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            for(int i = 0; i < this.getColsCount(); ++i) {
               if (!this.getCols(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();
         if ((this.bitField0_ & 1) == 1) {
            output.writeBytes(1, this.getPkNameBytes());
         }

         for(int i = 0; i < this.cols_.size(); ++i) {
            output.writeMessage(2, (MessageLite)this.cols_.get(i));
         }

         if ((this.bitField0_ & 2) == 2) {
            output.writeBool(3, this.enableConstraint_);
         }

         if ((this.bitField0_ & 4) == 4) {
            output.writeBool(4, this.validateConstraint_);
         }

         if ((this.bitField0_ & 8) == 8) {
            output.writeBool(5, this.relyConstraint_);
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;
            if ((this.bitField0_ & 1) == 1) {
               size += CodedOutputStream.computeBytesSize(1, this.getPkNameBytes());
            }

            for(int i = 0; i < this.cols_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.cols_.get(i));
            }

            if ((this.bitField0_ & 2) == 2) {
               size += CodedOutputStream.computeBoolSize(3, this.enableConstraint_);
            }

            if ((this.bitField0_ & 4) == 4) {
               size += CodedOutputStream.computeBoolSize(4, this.validateConstraint_);
            }

            if ((this.bitField0_ & 8) == 8) {
               size += CodedOutputStream.computeBoolSize(5, this.relyConstraint_);
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static PrimaryKey parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (PrimaryKey)PARSER.parseFrom(data);
      }

      public static PrimaryKey parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrimaryKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrimaryKey parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (PrimaryKey)PARSER.parseFrom(data);
      }

      public static PrimaryKey parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (PrimaryKey)PARSER.parseFrom(data, extensionRegistry);
      }

      public static PrimaryKey parseFrom(InputStream input) throws IOException {
         return (PrimaryKey)PARSER.parseFrom(input);
      }

      public static PrimaryKey parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrimaryKey)PARSER.parseFrom(input, extensionRegistry);
      }

      public static PrimaryKey parseDelimitedFrom(InputStream input) throws IOException {
         return (PrimaryKey)PARSER.parseDelimitedFrom(input);
      }

      public static PrimaryKey parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrimaryKey)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static PrimaryKey parseFrom(CodedInputStream input) throws IOException {
         return (PrimaryKey)PARSER.parseFrom(input);
      }

      public static PrimaryKey parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (PrimaryKey)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.PrimaryKey.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(PrimaryKey prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class PrimaryKeyColumn extends GeneratedMessage implements PrimaryKeyColumnOrBuilder {
         private static final PrimaryKeyColumn defaultInstance = new PrimaryKeyColumn(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public PrimaryKeyColumn parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new PrimaryKeyColumn(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int COLUMN_NAME_FIELD_NUMBER = 1;
         private Object columnName_;
         public static final int KEY_SEQ_FIELD_NUMBER = 2;
         private int keySeq_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private PrimaryKeyColumn(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private PrimaryKeyColumn(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static PrimaryKeyColumn getDefaultInstance() {
            return defaultInstance;
         }

         public PrimaryKeyColumn getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private PrimaryKeyColumn(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.columnName_ = input.readBytes();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.keySeq_ = input.readSInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_fieldAccessorTable.ensureFieldAccessorsInitialized(PrimaryKeyColumn.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasColumnName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getColumnName() {
            Object ref = this.columnName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.columnName_ = s;
               }

               return s;
            }
         }

         public ByteString getColumnNameBytes() {
            Object ref = this.columnName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.columnName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasKeySeq() {
            return (this.bitField0_ & 2) == 2;
         }

         public int getKeySeq() {
            return this.keySeq_;
         }

         private void initFields() {
            this.columnName_ = "";
            this.keySeq_ = 0;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasColumnName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasKeySeq()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getColumnNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeSInt32(2, this.keySeq_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getColumnNameBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeSInt32Size(2, this.keySeq_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static PrimaryKeyColumn parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (PrimaryKeyColumn)PARSER.parseFrom(data);
         }

         public static PrimaryKeyColumn parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PrimaryKeyColumn)PARSER.parseFrom(data, extensionRegistry);
         }

         public static PrimaryKeyColumn parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (PrimaryKeyColumn)PARSER.parseFrom(data);
         }

         public static PrimaryKeyColumn parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (PrimaryKeyColumn)PARSER.parseFrom(data, extensionRegistry);
         }

         public static PrimaryKeyColumn parseFrom(InputStream input) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseFrom(input);
         }

         public static PrimaryKeyColumn parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseFrom(input, extensionRegistry);
         }

         public static PrimaryKeyColumn parseDelimitedFrom(InputStream input) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseDelimitedFrom(input);
         }

         public static PrimaryKeyColumn parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static PrimaryKeyColumn parseFrom(CodedInputStream input) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseFrom(input);
         }

         public static PrimaryKeyColumn parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (PrimaryKeyColumn)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(PrimaryKeyColumn prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class Builder extends GeneratedMessage.Builder implements PrimaryKeyColumnOrBuilder {
            private int bitField0_;
            private Object columnName_;
            private int keySeq_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_fieldAccessorTable.ensureFieldAccessorsInitialized(PrimaryKeyColumn.class, Builder.class);
            }

            private Builder() {
               this.columnName_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.columnName_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.alwaysUseFieldBuilders) {
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.columnName_ = "";
               this.bitField0_ &= -2;
               this.keySeq_ = 0;
               this.bitField0_ &= -3;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_PrimaryKeyColumn_descriptor;
            }

            public PrimaryKeyColumn getDefaultInstanceForType() {
               return HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.getDefaultInstance();
            }

            public PrimaryKeyColumn build() {
               PrimaryKeyColumn result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public PrimaryKeyColumn buildPartial() {
               PrimaryKeyColumn result = new PrimaryKeyColumn(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.columnName_ = this.columnName_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.keySeq_ = this.keySeq_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof PrimaryKeyColumn) {
                  return this.mergeFrom((PrimaryKeyColumn)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(PrimaryKeyColumn other) {
               if (other == HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasColumnName()) {
                     this.bitField0_ |= 1;
                     this.columnName_ = other.columnName_;
                     this.onChanged();
                  }

                  if (other.hasKeySeq()) {
                     this.setKeySeq(other.getKeySeq());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasColumnName()) {
                  return false;
               } else {
                  return this.hasKeySeq();
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               PrimaryKeyColumn parsedMessage = null;

               try {
                  parsedMessage = (PrimaryKeyColumn)HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (PrimaryKeyColumn)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasColumnName() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getColumnName() {
               Object ref = this.columnName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.columnName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getColumnNameBytes() {
               Object ref = this.columnName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.columnName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setColumnName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.columnName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearColumnName() {
               this.bitField0_ &= -2;
               this.columnName_ = HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.getDefaultInstance().getColumnName();
               this.onChanged();
               return this;
            }

            public Builder setColumnNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.columnName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasKeySeq() {
               return (this.bitField0_ & 2) == 2;
            }

            public int getKeySeq() {
               return this.keySeq_;
            }

            public Builder setKeySeq(int value) {
               this.bitField0_ |= 2;
               this.keySeq_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearKeySeq() {
               this.bitField0_ &= -3;
               this.keySeq_ = 0;
               this.onChanged();
               return this;
            }
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements PrimaryKeyOrBuilder {
         private int bitField0_;
         private Object pkName_;
         private List cols_;
         private RepeatedFieldBuilder colsBuilder_;
         private boolean enableConstraint_;
         private boolean validateConstraint_;
         private boolean relyConstraint_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_fieldAccessorTable.ensureFieldAccessorsInitialized(PrimaryKey.class, Builder.class);
         }

         private Builder() {
            this.pkName_ = "";
            this.cols_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.pkName_ = "";
            this.cols_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.PrimaryKey.alwaysUseFieldBuilders) {
               this.getColsFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            this.pkName_ = "";
            this.bitField0_ &= -2;
            if (this.colsBuilder_ == null) {
               this.cols_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.colsBuilder_.clear();
            }

            this.enableConstraint_ = false;
            this.bitField0_ &= -5;
            this.validateConstraint_ = false;
            this.bitField0_ &= -9;
            this.relyConstraint_ = false;
            this.bitField0_ &= -17;
            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_PrimaryKey_descriptor;
         }

         public PrimaryKey getDefaultInstanceForType() {
            return HbaseMetastoreProto.PrimaryKey.getDefaultInstance();
         }

         public PrimaryKey build() {
            PrimaryKey result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public PrimaryKey buildPartial() {
            PrimaryKey result = new PrimaryKey(this);
            int from_bitField0_ = this.bitField0_;
            int to_bitField0_ = 0;
            if ((from_bitField0_ & 1) == 1) {
               to_bitField0_ |= 1;
            }

            result.pkName_ = this.pkName_;
            if (this.colsBuilder_ == null) {
               if ((this.bitField0_ & 2) == 2) {
                  this.cols_ = Collections.unmodifiableList(this.cols_);
                  this.bitField0_ &= -3;
               }

               result.cols_ = this.cols_;
            } else {
               result.cols_ = this.colsBuilder_.build();
            }

            if ((from_bitField0_ & 4) == 4) {
               to_bitField0_ |= 2;
            }

            result.enableConstraint_ = this.enableConstraint_;
            if ((from_bitField0_ & 8) == 8) {
               to_bitField0_ |= 4;
            }

            result.validateConstraint_ = this.validateConstraint_;
            if ((from_bitField0_ & 16) == 16) {
               to_bitField0_ |= 8;
            }

            result.relyConstraint_ = this.relyConstraint_;
            result.bitField0_ = to_bitField0_;
            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof PrimaryKey) {
               return this.mergeFrom((PrimaryKey)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(PrimaryKey other) {
            if (other == HbaseMetastoreProto.PrimaryKey.getDefaultInstance()) {
               return this;
            } else {
               if (other.hasPkName()) {
                  this.bitField0_ |= 1;
                  this.pkName_ = other.pkName_;
                  this.onChanged();
               }

               if (this.colsBuilder_ == null) {
                  if (!other.cols_.isEmpty()) {
                     if (this.cols_.isEmpty()) {
                        this.cols_ = other.cols_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureColsIsMutable();
                        this.cols_.addAll(other.cols_);
                     }

                     this.onChanged();
                  }
               } else if (!other.cols_.isEmpty()) {
                  if (this.colsBuilder_.isEmpty()) {
                     this.colsBuilder_.dispose();
                     this.colsBuilder_ = null;
                     this.cols_ = other.cols_;
                     this.bitField0_ &= -3;
                     this.colsBuilder_ = HbaseMetastoreProto.PrimaryKey.alwaysUseFieldBuilders ? this.getColsFieldBuilder() : null;
                  } else {
                     this.colsBuilder_.addAllMessages(other.cols_);
                  }
               }

               if (other.hasEnableConstraint()) {
                  this.setEnableConstraint(other.getEnableConstraint());
               }

               if (other.hasValidateConstraint()) {
                  this.setValidateConstraint(other.getValidateConstraint());
               }

               if (other.hasRelyConstraint()) {
                  this.setRelyConstraint(other.getRelyConstraint());
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            if (!this.hasPkName()) {
               return false;
            } else {
               for(int i = 0; i < this.getColsCount(); ++i) {
                  if (!this.getCols(i).isInitialized()) {
                     return false;
                  }
               }

               return true;
            }
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            PrimaryKey parsedMessage = null;

            try {
               parsedMessage = (PrimaryKey)HbaseMetastoreProto.PrimaryKey.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (PrimaryKey)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         public boolean hasPkName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getPkName() {
            Object ref = this.pkName_;
            if (!(ref instanceof String)) {
               String s = ((ByteString)ref).toStringUtf8();
               this.pkName_ = s;
               return s;
            } else {
               return (String)ref;
            }
         }

         public ByteString getPkNameBytes() {
            Object ref = this.pkName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.pkName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public Builder setPkName(String value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.pkName_ = value;
               this.onChanged();
               return this;
            }
         }

         public Builder clearPkName() {
            this.bitField0_ &= -2;
            this.pkName_ = HbaseMetastoreProto.PrimaryKey.getDefaultInstance().getPkName();
            this.onChanged();
            return this;
         }

         public Builder setPkNameBytes(ByteString value) {
            if (value == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.pkName_ = value;
               this.onChanged();
               return this;
            }
         }

         private void ensureColsIsMutable() {
            if ((this.bitField0_ & 2) != 2) {
               this.cols_ = new ArrayList(this.cols_);
               this.bitField0_ |= 2;
            }

         }

         public List getColsList() {
            return this.colsBuilder_ == null ? Collections.unmodifiableList(this.cols_) : this.colsBuilder_.getMessageList();
         }

         public int getColsCount() {
            return this.colsBuilder_ == null ? this.cols_.size() : this.colsBuilder_.getCount();
         }

         public PrimaryKeyColumn getCols(int index) {
            return this.colsBuilder_ == null ? (PrimaryKeyColumn)this.cols_.get(index) : (PrimaryKeyColumn)this.colsBuilder_.getMessage(index);
         }

         public Builder setCols(int index, PrimaryKeyColumn value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.set(index, value);
               this.onChanged();
            } else {
               this.colsBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setCols(int index, PrimaryKeyColumn.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addCols(PrimaryKeyColumn value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.add(value);
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addCols(int index, PrimaryKeyColumn value) {
            if (this.colsBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureColsIsMutable();
               this.cols_.add(index, value);
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addCols(PrimaryKeyColumn.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addCols(int index, PrimaryKeyColumn.Builder builderForValue) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.colsBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllCols(Iterable values) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.cols_);
               this.onChanged();
            } else {
               this.colsBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearCols() {
            if (this.colsBuilder_ == null) {
               this.cols_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.colsBuilder_.clear();
            }

            return this;
         }

         public Builder removeCols(int index) {
            if (this.colsBuilder_ == null) {
               this.ensureColsIsMutable();
               this.cols_.remove(index);
               this.onChanged();
            } else {
               this.colsBuilder_.remove(index);
            }

            return this;
         }

         public PrimaryKeyColumn.Builder getColsBuilder(int index) {
            return (PrimaryKeyColumn.Builder)this.getColsFieldBuilder().getBuilder(index);
         }

         public PrimaryKeyColumnOrBuilder getColsOrBuilder(int index) {
            return this.colsBuilder_ == null ? (PrimaryKeyColumnOrBuilder)this.cols_.get(index) : (PrimaryKeyColumnOrBuilder)this.colsBuilder_.getMessageOrBuilder(index);
         }

         public List getColsOrBuilderList() {
            return this.colsBuilder_ != null ? this.colsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.cols_);
         }

         public PrimaryKeyColumn.Builder addColsBuilder() {
            return (PrimaryKeyColumn.Builder)this.getColsFieldBuilder().addBuilder(HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.getDefaultInstance());
         }

         public PrimaryKeyColumn.Builder addColsBuilder(int index) {
            return (PrimaryKeyColumn.Builder)this.getColsFieldBuilder().addBuilder(index, HbaseMetastoreProto.PrimaryKey.PrimaryKeyColumn.getDefaultInstance());
         }

         public List getColsBuilderList() {
            return this.getColsFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getColsFieldBuilder() {
            if (this.colsBuilder_ == null) {
               this.colsBuilder_ = new RepeatedFieldBuilder(this.cols_, (this.bitField0_ & 2) == 2, this.getParentForChildren(), this.isClean());
               this.cols_ = null;
            }

            return this.colsBuilder_;
         }

         public boolean hasEnableConstraint() {
            return (this.bitField0_ & 4) == 4;
         }

         public boolean getEnableConstraint() {
            return this.enableConstraint_;
         }

         public Builder setEnableConstraint(boolean value) {
            this.bitField0_ |= 4;
            this.enableConstraint_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearEnableConstraint() {
            this.bitField0_ &= -5;
            this.enableConstraint_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasValidateConstraint() {
            return (this.bitField0_ & 8) == 8;
         }

         public boolean getValidateConstraint() {
            return this.validateConstraint_;
         }

         public Builder setValidateConstraint(boolean value) {
            this.bitField0_ |= 8;
            this.validateConstraint_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearValidateConstraint() {
            this.bitField0_ &= -9;
            this.validateConstraint_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasRelyConstraint() {
            return (this.bitField0_ & 16) == 16;
         }

         public boolean getRelyConstraint() {
            return this.relyConstraint_;
         }

         public Builder setRelyConstraint(boolean value) {
            this.bitField0_ |= 16;
            this.relyConstraint_ = value;
            this.onChanged();
            return this;
         }

         public Builder clearRelyConstraint() {
            this.bitField0_ &= -17;
            this.relyConstraint_ = false;
            this.onChanged();
            return this;
         }
      }

      public interface PrimaryKeyColumnOrBuilder extends MessageOrBuilder {
         boolean hasColumnName();

         String getColumnName();

         ByteString getColumnNameBytes();

         boolean hasKeySeq();

         int getKeySeq();
      }
   }

   public static final class ForeignKeys extends GeneratedMessage implements ForeignKeysOrBuilder {
      private static final ForeignKeys defaultInstance = new ForeignKeys(true);
      private final UnknownFieldSet unknownFields;
      public static Parser PARSER = new AbstractParser() {
         public ForeignKeys parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return new ForeignKeys(input, extensionRegistry);
         }
      };
      public static final int FKS_FIELD_NUMBER = 1;
      private List fks_;
      private byte memoizedIsInitialized;
      private int memoizedSerializedSize;
      private static final long serialVersionUID = 0L;

      private ForeignKeys(GeneratedMessage.Builder builder) {
         super(builder);
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = builder.getUnknownFields();
      }

      private ForeignKeys(boolean noInit) {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.unknownFields = UnknownFieldSet.getDefaultInstance();
      }

      public static ForeignKeys getDefaultInstance() {
         return defaultInstance;
      }

      public ForeignKeys getDefaultInstanceForType() {
         return defaultInstance;
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ForeignKeys(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         this.memoizedIsInitialized = -1;
         this.memoizedSerializedSize = -1;
         this.initFields();
         int mutable_bitField0_ = 0;
         UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

         try {
            boolean done = false;

            while(!done) {
               int tag = input.readTag();
               switch (tag) {
                  case 0:
                     done = true;
                     break;
                  case 10:
                     if ((mutable_bitField0_ & 1) != 1) {
                        this.fks_ = new ArrayList();
                        mutable_bitField0_ |= 1;
                     }

                     this.fks_.add(input.readMessage(HbaseMetastoreProto.ForeignKeys.ForeignKey.PARSER, extensionRegistry));
                     break;
                  default:
                     if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                        done = true;
                     }
               }
            }
         } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
         } catch (IOException e) {
            throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
         } finally {
            if ((mutable_bitField0_ & 1) == 1) {
               this.fks_ = Collections.unmodifiableList(this.fks_);
            }

            this.unknownFields = unknownFields.build();
            this.makeExtensionsImmutable();
         }

      }

      public static final Descriptors.Descriptor getDescriptor() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor;
      }

      protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
         return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKeys.class, Builder.class);
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public List getFksList() {
         return this.fks_;
      }

      public List getFksOrBuilderList() {
         return this.fks_;
      }

      public int getFksCount() {
         return this.fks_.size();
      }

      public ForeignKey getFks(int index) {
         return (ForeignKey)this.fks_.get(index);
      }

      public ForeignKeyOrBuilder getFksOrBuilder(int index) {
         return (ForeignKeyOrBuilder)this.fks_.get(index);
      }

      private void initFields() {
         this.fks_ = Collections.emptyList();
      }

      public final boolean isInitialized() {
         byte isInitialized = this.memoizedIsInitialized;
         if (isInitialized != -1) {
            return isInitialized == 1;
         } else {
            for(int i = 0; i < this.getFksCount(); ++i) {
               if (!this.getFks(i).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream output) throws IOException {
         this.getSerializedSize();

         for(int i = 0; i < this.fks_.size(); ++i) {
            output.writeMessage(1, (MessageLite)this.fks_.get(i));
         }

         this.getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
         int size = this.memoizedSerializedSize;
         if (size != -1) {
            return size;
         } else {
            size = 0;

            for(int i = 0; i < this.fks_.size(); ++i) {
               size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.fks_.get(i));
            }

            size += this.getUnknownFields().getSerializedSize();
            this.memoizedSerializedSize = size;
            return size;
         }
      }

      protected Object writeReplace() throws ObjectStreamException {
         return super.writeReplace();
      }

      public static ForeignKeys parseFrom(ByteString data) throws InvalidProtocolBufferException {
         return (ForeignKeys)PARSER.parseFrom(data);
      }

      public static ForeignKeys parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ForeignKeys)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ForeignKeys parseFrom(byte[] data) throws InvalidProtocolBufferException {
         return (ForeignKeys)PARSER.parseFrom(data);
      }

      public static ForeignKeys parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
         return (ForeignKeys)PARSER.parseFrom(data, extensionRegistry);
      }

      public static ForeignKeys parseFrom(InputStream input) throws IOException {
         return (ForeignKeys)PARSER.parseFrom(input);
      }

      public static ForeignKeys parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ForeignKeys)PARSER.parseFrom(input, extensionRegistry);
      }

      public static ForeignKeys parseDelimitedFrom(InputStream input) throws IOException {
         return (ForeignKeys)PARSER.parseDelimitedFrom(input);
      }

      public static ForeignKeys parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ForeignKeys)PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static ForeignKeys parseFrom(CodedInputStream input) throws IOException {
         return (ForeignKeys)PARSER.parseFrom(input);
      }

      public static ForeignKeys parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
         return (ForeignKeys)PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() {
         return HbaseMetastoreProto.ForeignKeys.Builder.create();
      }

      public Builder newBuilderForType() {
         return newBuilder();
      }

      public static Builder newBuilder(ForeignKeys prototype) {
         return newBuilder().mergeFrom(prototype);
      }

      public Builder toBuilder() {
         return newBuilder(this);
      }

      protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
         Builder builder = new Builder(parent);
         return builder;
      }

      static {
         defaultInstance.initFields();
      }

      public static final class ForeignKey extends GeneratedMessage implements ForeignKeyOrBuilder {
         private static final ForeignKey defaultInstance = new ForeignKey(true);
         private final UnknownFieldSet unknownFields;
         public static Parser PARSER = new AbstractParser() {
            public ForeignKey parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return new ForeignKey(input, extensionRegistry);
            }
         };
         private int bitField0_;
         public static final int FK_NAME_FIELD_NUMBER = 1;
         private Object fkName_;
         public static final int REFERENCED_DB_NAME_FIELD_NUMBER = 2;
         private Object referencedDbName_;
         public static final int REFERENCED_TABLE_NAME_FIELD_NUMBER = 3;
         private Object referencedTableName_;
         public static final int REFERENCED_PK_NAME_FIELD_NUMBER = 4;
         private Object referencedPkName_;
         public static final int UPDATE_RULE_FIELD_NUMBER = 5;
         private int updateRule_;
         public static final int DELETE_RULE_FIELD_NUMBER = 6;
         private int deleteRule_;
         public static final int COLS_FIELD_NUMBER = 7;
         private List cols_;
         public static final int ENABLE_CONSTRAINT_FIELD_NUMBER = 8;
         private boolean enableConstraint_;
         public static final int VALIDATE_CONSTRAINT_FIELD_NUMBER = 9;
         private boolean validateConstraint_;
         public static final int RELY_CONSTRAINT_FIELD_NUMBER = 10;
         private boolean relyConstraint_;
         private byte memoizedIsInitialized;
         private int memoizedSerializedSize;
         private static final long serialVersionUID = 0L;

         private ForeignKey(GeneratedMessage.Builder builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
         }

         private ForeignKey(boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
         }

         public static ForeignKey getDefaultInstance() {
            return defaultInstance;
         }

         public ForeignKey getDefaultInstanceForType() {
            return defaultInstance;
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ForeignKey(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.initFields();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

            try {
               boolean done = false;

               while(!done) {
                  int tag = input.readTag();
                  switch (tag) {
                     case 0:
                        done = true;
                        break;
                     case 10:
                        this.bitField0_ |= 1;
                        this.fkName_ = input.readBytes();
                        break;
                     case 18:
                        this.bitField0_ |= 2;
                        this.referencedDbName_ = input.readBytes();
                        break;
                     case 26:
                        this.bitField0_ |= 4;
                        this.referencedTableName_ = input.readBytes();
                        break;
                     case 34:
                        this.bitField0_ |= 8;
                        this.referencedPkName_ = input.readBytes();
                        break;
                     case 40:
                        this.bitField0_ |= 16;
                        this.updateRule_ = input.readInt32();
                        break;
                     case 48:
                        this.bitField0_ |= 32;
                        this.deleteRule_ = input.readInt32();
                        break;
                     case 58:
                        if ((mutable_bitField0_ & 64) != 64) {
                           this.cols_ = new ArrayList();
                           mutable_bitField0_ |= 64;
                        }

                        this.cols_.add(input.readMessage(HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.PARSER, extensionRegistry));
                        break;
                     case 64:
                        this.bitField0_ |= 64;
                        this.enableConstraint_ = input.readBool();
                        break;
                     case 72:
                        this.bitField0_ |= 128;
                        this.validateConstraint_ = input.readBool();
                        break;
                     case 80:
                        this.bitField0_ |= 256;
                        this.relyConstraint_ = input.readBool();
                        break;
                     default:
                        if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                           done = true;
                        }
                  }
               }
            } catch (InvalidProtocolBufferException e) {
               throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
               throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
            } finally {
               if ((mutable_bitField0_ & 64) == 64) {
                  this.cols_ = Collections.unmodifiableList(this.cols_);
               }

               this.unknownFields = unknownFields.build();
               this.makeExtensionsImmutable();
            }

         }

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKey.class, Builder.class);
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public boolean hasFkName() {
            return (this.bitField0_ & 1) == 1;
         }

         public String getFkName() {
            Object ref = this.fkName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.fkName_ = s;
               }

               return s;
            }
         }

         public ByteString getFkNameBytes() {
            Object ref = this.fkName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.fkName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasReferencedDbName() {
            return (this.bitField0_ & 2) == 2;
         }

         public String getReferencedDbName() {
            Object ref = this.referencedDbName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.referencedDbName_ = s;
               }

               return s;
            }
         }

         public ByteString getReferencedDbNameBytes() {
            Object ref = this.referencedDbName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.referencedDbName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasReferencedTableName() {
            return (this.bitField0_ & 4) == 4;
         }

         public String getReferencedTableName() {
            Object ref = this.referencedTableName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.referencedTableName_ = s;
               }

               return s;
            }
         }

         public ByteString getReferencedTableNameBytes() {
            Object ref = this.referencedTableName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.referencedTableName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasReferencedPkName() {
            return (this.bitField0_ & 8) == 8;
         }

         public String getReferencedPkName() {
            Object ref = this.referencedPkName_;
            if (ref instanceof String) {
               return (String)ref;
            } else {
               ByteString bs = (ByteString)ref;
               String s = bs.toStringUtf8();
               if (bs.isValidUtf8()) {
                  this.referencedPkName_ = s;
               }

               return s;
            }
         }

         public ByteString getReferencedPkNameBytes() {
            Object ref = this.referencedPkName_;
            if (ref instanceof String) {
               ByteString b = ByteString.copyFromUtf8((String)ref);
               this.referencedPkName_ = b;
               return b;
            } else {
               return (ByteString)ref;
            }
         }

         public boolean hasUpdateRule() {
            return (this.bitField0_ & 16) == 16;
         }

         public int getUpdateRule() {
            return this.updateRule_;
         }

         public boolean hasDeleteRule() {
            return (this.bitField0_ & 32) == 32;
         }

         public int getDeleteRule() {
            return this.deleteRule_;
         }

         public List getColsList() {
            return this.cols_;
         }

         public List getColsOrBuilderList() {
            return this.cols_;
         }

         public int getColsCount() {
            return this.cols_.size();
         }

         public ForeignKeyColumn getCols(int index) {
            return (ForeignKeyColumn)this.cols_.get(index);
         }

         public ForeignKeyColumnOrBuilder getColsOrBuilder(int index) {
            return (ForeignKeyColumnOrBuilder)this.cols_.get(index);
         }

         public boolean hasEnableConstraint() {
            return (this.bitField0_ & 64) == 64;
         }

         public boolean getEnableConstraint() {
            return this.enableConstraint_;
         }

         public boolean hasValidateConstraint() {
            return (this.bitField0_ & 128) == 128;
         }

         public boolean getValidateConstraint() {
            return this.validateConstraint_;
         }

         public boolean hasRelyConstraint() {
            return (this.bitField0_ & 256) == 256;
         }

         public boolean getRelyConstraint() {
            return this.relyConstraint_;
         }

         private void initFields() {
            this.fkName_ = "";
            this.referencedDbName_ = "";
            this.referencedTableName_ = "";
            this.referencedPkName_ = "";
            this.updateRule_ = 0;
            this.deleteRule_ = 0;
            this.cols_ = Collections.emptyList();
            this.enableConstraint_ = false;
            this.validateConstraint_ = false;
            this.relyConstraint_ = false;
         }

         public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
               return isInitialized == 1;
            } else if (!this.hasFkName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasReferencedDbName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasReferencedTableName()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               for(int i = 0; i < this.getColsCount(); ++i) {
                  if (!this.getCols(i).isInitialized()) {
                     this.memoizedIsInitialized = 0;
                     return false;
                  }
               }

               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 1) == 1) {
               output.writeBytes(1, this.getFkNameBytes());
            }

            if ((this.bitField0_ & 2) == 2) {
               output.writeBytes(2, this.getReferencedDbNameBytes());
            }

            if ((this.bitField0_ & 4) == 4) {
               output.writeBytes(3, this.getReferencedTableNameBytes());
            }

            if ((this.bitField0_ & 8) == 8) {
               output.writeBytes(4, this.getReferencedPkNameBytes());
            }

            if ((this.bitField0_ & 16) == 16) {
               output.writeInt32(5, this.updateRule_);
            }

            if ((this.bitField0_ & 32) == 32) {
               output.writeInt32(6, this.deleteRule_);
            }

            for(int i = 0; i < this.cols_.size(); ++i) {
               output.writeMessage(7, (MessageLite)this.cols_.get(i));
            }

            if ((this.bitField0_ & 64) == 64) {
               output.writeBool(8, this.enableConstraint_);
            }

            if ((this.bitField0_ & 128) == 128) {
               output.writeBool(9, this.validateConstraint_);
            }

            if ((this.bitField0_ & 256) == 256) {
               output.writeBool(10, this.relyConstraint_);
            }

            this.getUnknownFields().writeTo(output);
         }

         public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
               return size;
            } else {
               size = 0;
               if ((this.bitField0_ & 1) == 1) {
                  size += CodedOutputStream.computeBytesSize(1, this.getFkNameBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  size += CodedOutputStream.computeBytesSize(2, this.getReferencedDbNameBytes());
               }

               if ((this.bitField0_ & 4) == 4) {
                  size += CodedOutputStream.computeBytesSize(3, this.getReferencedTableNameBytes());
               }

               if ((this.bitField0_ & 8) == 8) {
                  size += CodedOutputStream.computeBytesSize(4, this.getReferencedPkNameBytes());
               }

               if ((this.bitField0_ & 16) == 16) {
                  size += CodedOutputStream.computeInt32Size(5, this.updateRule_);
               }

               if ((this.bitField0_ & 32) == 32) {
                  size += CodedOutputStream.computeInt32Size(6, this.deleteRule_);
               }

               for(int i = 0; i < this.cols_.size(); ++i) {
                  size += CodedOutputStream.computeMessageSize(7, (MessageLite)this.cols_.get(i));
               }

               if ((this.bitField0_ & 64) == 64) {
                  size += CodedOutputStream.computeBoolSize(8, this.enableConstraint_);
               }

               if ((this.bitField0_ & 128) == 128) {
                  size += CodedOutputStream.computeBoolSize(9, this.validateConstraint_);
               }

               if ((this.bitField0_ & 256) == 256) {
                  size += CodedOutputStream.computeBoolSize(10, this.relyConstraint_);
               }

               size += this.getUnknownFields().getSerializedSize();
               this.memoizedSerializedSize = size;
               return size;
            }
         }

         protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
         }

         public static ForeignKey parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (ForeignKey)PARSER.parseFrom(data);
         }

         public static ForeignKey parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ForeignKey)PARSER.parseFrom(data, extensionRegistry);
         }

         public static ForeignKey parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (ForeignKey)PARSER.parseFrom(data);
         }

         public static ForeignKey parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (ForeignKey)PARSER.parseFrom(data, extensionRegistry);
         }

         public static ForeignKey parseFrom(InputStream input) throws IOException {
            return (ForeignKey)PARSER.parseFrom(input);
         }

         public static ForeignKey parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ForeignKey)PARSER.parseFrom(input, extensionRegistry);
         }

         public static ForeignKey parseDelimitedFrom(InputStream input) throws IOException {
            return (ForeignKey)PARSER.parseDelimitedFrom(input);
         }

         public static ForeignKey parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ForeignKey)PARSER.parseDelimitedFrom(input, extensionRegistry);
         }

         public static ForeignKey parseFrom(CodedInputStream input) throws IOException {
            return (ForeignKey)PARSER.parseFrom(input);
         }

         public static ForeignKey parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return (ForeignKey)PARSER.parseFrom(input, extensionRegistry);
         }

         public static Builder newBuilder() {
            return HbaseMetastoreProto.ForeignKeys.ForeignKey.Builder.create();
         }

         public Builder newBuilderForType() {
            return newBuilder();
         }

         public static Builder newBuilder(ForeignKey prototype) {
            return newBuilder().mergeFrom(prototype);
         }

         public Builder toBuilder() {
            return newBuilder(this);
         }

         protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
         }

         static {
            defaultInstance.initFields();
         }

         public static final class ForeignKeyColumn extends GeneratedMessage implements ForeignKeyColumnOrBuilder {
            private static final ForeignKeyColumn defaultInstance = new ForeignKeyColumn(true);
            private final UnknownFieldSet unknownFields;
            public static Parser PARSER = new AbstractParser() {
               public ForeignKeyColumn parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                  return new ForeignKeyColumn(input, extensionRegistry);
               }
            };
            private int bitField0_;
            public static final int COLUMN_NAME_FIELD_NUMBER = 1;
            private Object columnName_;
            public static final int REFERENCED_COLUMN_NAME_FIELD_NUMBER = 2;
            private Object referencedColumnName_;
            public static final int KEY_SEQ_FIELD_NUMBER = 3;
            private int keySeq_;
            private byte memoizedIsInitialized;
            private int memoizedSerializedSize;
            private static final long serialVersionUID = 0L;

            private ForeignKeyColumn(GeneratedMessage.Builder builder) {
               super(builder);
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = builder.getUnknownFields();
            }

            private ForeignKeyColumn(boolean noInit) {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.unknownFields = UnknownFieldSet.getDefaultInstance();
            }

            public static ForeignKeyColumn getDefaultInstance() {
               return defaultInstance;
            }

            public ForeignKeyColumn getDefaultInstanceForType() {
               return defaultInstance;
            }

            public final UnknownFieldSet getUnknownFields() {
               return this.unknownFields;
            }

            private ForeignKeyColumn(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               this.memoizedIsInitialized = -1;
               this.memoizedSerializedSize = -1;
               this.initFields();
               int mutable_bitField0_ = 0;
               UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();

               try {
                  boolean done = false;

                  while(!done) {
                     int tag = input.readTag();
                     switch (tag) {
                        case 0:
                           done = true;
                           break;
                        case 10:
                           this.bitField0_ |= 1;
                           this.columnName_ = input.readBytes();
                           break;
                        case 18:
                           this.bitField0_ |= 2;
                           this.referencedColumnName_ = input.readBytes();
                           break;
                        case 24:
                           this.bitField0_ |= 4;
                           this.keySeq_ = input.readSInt32();
                           break;
                        default:
                           if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                              done = true;
                           }
                     }
                  }
               } catch (InvalidProtocolBufferException e) {
                  throw e.setUnfinishedMessage(this);
               } catch (IOException e) {
                  throw (new InvalidProtocolBufferException(e.getMessage())).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = unknownFields.build();
                  this.makeExtensionsImmutable();
               }

            }

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKeyColumn.class, Builder.class);
            }

            public Parser getParserForType() {
               return PARSER;
            }

            public boolean hasColumnName() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getColumnName() {
               Object ref = this.columnName_;
               if (ref instanceof String) {
                  return (String)ref;
               } else {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.columnName_ = s;
                  }

                  return s;
               }
            }

            public ByteString getColumnNameBytes() {
               Object ref = this.columnName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.columnName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public boolean hasReferencedColumnName() {
               return (this.bitField0_ & 2) == 2;
            }

            public String getReferencedColumnName() {
               Object ref = this.referencedColumnName_;
               if (ref instanceof String) {
                  return (String)ref;
               } else {
                  ByteString bs = (ByteString)ref;
                  String s = bs.toStringUtf8();
                  if (bs.isValidUtf8()) {
                     this.referencedColumnName_ = s;
                  }

                  return s;
               }
            }

            public ByteString getReferencedColumnNameBytes() {
               Object ref = this.referencedColumnName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.referencedColumnName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public boolean hasKeySeq() {
               return (this.bitField0_ & 4) == 4;
            }

            public int getKeySeq() {
               return this.keySeq_;
            }

            private void initFields() {
               this.columnName_ = "";
               this.referencedColumnName_ = "";
               this.keySeq_ = 0;
            }

            public final boolean isInitialized() {
               byte isInitialized = this.memoizedIsInitialized;
               if (isInitialized != -1) {
                  return isInitialized == 1;
               } else if (!this.hasColumnName()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else if (!this.hasReferencedColumnName()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else if (!this.hasKeySeq()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               } else {
                  this.memoizedIsInitialized = 1;
                  return true;
               }
            }

            public void writeTo(CodedOutputStream output) throws IOException {
               this.getSerializedSize();
               if ((this.bitField0_ & 1) == 1) {
                  output.writeBytes(1, this.getColumnNameBytes());
               }

               if ((this.bitField0_ & 2) == 2) {
                  output.writeBytes(2, this.getReferencedColumnNameBytes());
               }

               if ((this.bitField0_ & 4) == 4) {
                  output.writeSInt32(3, this.keySeq_);
               }

               this.getUnknownFields().writeTo(output);
            }

            public int getSerializedSize() {
               int size = this.memoizedSerializedSize;
               if (size != -1) {
                  return size;
               } else {
                  size = 0;
                  if ((this.bitField0_ & 1) == 1) {
                     size += CodedOutputStream.computeBytesSize(1, this.getColumnNameBytes());
                  }

                  if ((this.bitField0_ & 2) == 2) {
                     size += CodedOutputStream.computeBytesSize(2, this.getReferencedColumnNameBytes());
                  }

                  if ((this.bitField0_ & 4) == 4) {
                     size += CodedOutputStream.computeSInt32Size(3, this.keySeq_);
                  }

                  size += this.getUnknownFields().getSerializedSize();
                  this.memoizedSerializedSize = size;
                  return size;
               }
            }

            protected Object writeReplace() throws ObjectStreamException {
               return super.writeReplace();
            }

            public static ForeignKeyColumn parseFrom(ByteString data) throws InvalidProtocolBufferException {
               return (ForeignKeyColumn)PARSER.parseFrom(data);
            }

            public static ForeignKeyColumn parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (ForeignKeyColumn)PARSER.parseFrom(data, extensionRegistry);
            }

            public static ForeignKeyColumn parseFrom(byte[] data) throws InvalidProtocolBufferException {
               return (ForeignKeyColumn)PARSER.parseFrom(data);
            }

            public static ForeignKeyColumn parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
               return (ForeignKeyColumn)PARSER.parseFrom(data, extensionRegistry);
            }

            public static ForeignKeyColumn parseFrom(InputStream input) throws IOException {
               return (ForeignKeyColumn)PARSER.parseFrom(input);
            }

            public static ForeignKeyColumn parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (ForeignKeyColumn)PARSER.parseFrom(input, extensionRegistry);
            }

            public static ForeignKeyColumn parseDelimitedFrom(InputStream input) throws IOException {
               return (ForeignKeyColumn)PARSER.parseDelimitedFrom(input);
            }

            public static ForeignKeyColumn parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (ForeignKeyColumn)PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static ForeignKeyColumn parseFrom(CodedInputStream input) throws IOException {
               return (ForeignKeyColumn)PARSER.parseFrom(input);
            }

            public static ForeignKeyColumn parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               return (ForeignKeyColumn)PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
               return HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.Builder.create();
            }

            public Builder newBuilderForType() {
               return newBuilder();
            }

            public static Builder newBuilder(ForeignKeyColumn prototype) {
               return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
               return newBuilder(this);
            }

            protected Builder newBuilderForType(GeneratedMessage.BuilderParent parent) {
               Builder builder = new Builder(parent);
               return builder;
            }

            static {
               defaultInstance.initFields();
            }

            public static final class Builder extends GeneratedMessage.Builder implements ForeignKeyColumnOrBuilder {
               private int bitField0_;
               private Object columnName_;
               private Object referencedColumnName_;
               private int keySeq_;

               public static final Descriptors.Descriptor getDescriptor() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor;
               }

               protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKeyColumn.class, Builder.class);
               }

               private Builder() {
                  this.columnName_ = "";
                  this.referencedColumnName_ = "";
                  this.maybeForceBuilderInitialization();
               }

               private Builder(GeneratedMessage.BuilderParent parent) {
                  super(parent);
                  this.columnName_ = "";
                  this.referencedColumnName_ = "";
                  this.maybeForceBuilderInitialization();
               }

               private void maybeForceBuilderInitialization() {
                  if (HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.alwaysUseFieldBuilders) {
                  }

               }

               private static Builder create() {
                  return new Builder();
               }

               public Builder clear() {
                  super.clear();
                  this.columnName_ = "";
                  this.bitField0_ &= -2;
                  this.referencedColumnName_ = "";
                  this.bitField0_ &= -3;
                  this.keySeq_ = 0;
                  this.bitField0_ &= -5;
                  return this;
               }

               public Builder clone() {
                  return create().mergeFrom(this.buildPartial());
               }

               public Descriptors.Descriptor getDescriptorForType() {
                  return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_ForeignKeyColumn_descriptor;
               }

               public ForeignKeyColumn getDefaultInstanceForType() {
                  return HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance();
               }

               public ForeignKeyColumn build() {
                  ForeignKeyColumn result = this.buildPartial();
                  if (!result.isInitialized()) {
                     throw newUninitializedMessageException(result);
                  } else {
                     return result;
                  }
               }

               public ForeignKeyColumn buildPartial() {
                  ForeignKeyColumn result = new ForeignKeyColumn(this);
                  int from_bitField0_ = this.bitField0_;
                  int to_bitField0_ = 0;
                  if ((from_bitField0_ & 1) == 1) {
                     to_bitField0_ |= 1;
                  }

                  result.columnName_ = this.columnName_;
                  if ((from_bitField0_ & 2) == 2) {
                     to_bitField0_ |= 2;
                  }

                  result.referencedColumnName_ = this.referencedColumnName_;
                  if ((from_bitField0_ & 4) == 4) {
                     to_bitField0_ |= 4;
                  }

                  result.keySeq_ = this.keySeq_;
                  result.bitField0_ = to_bitField0_;
                  this.onBuilt();
                  return result;
               }

               public Builder mergeFrom(Message other) {
                  if (other instanceof ForeignKeyColumn) {
                     return this.mergeFrom((ForeignKeyColumn)other);
                  } else {
                     super.mergeFrom(other);
                     return this;
                  }
               }

               public Builder mergeFrom(ForeignKeyColumn other) {
                  if (other == HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance()) {
                     return this;
                  } else {
                     if (other.hasColumnName()) {
                        this.bitField0_ |= 1;
                        this.columnName_ = other.columnName_;
                        this.onChanged();
                     }

                     if (other.hasReferencedColumnName()) {
                        this.bitField0_ |= 2;
                        this.referencedColumnName_ = other.referencedColumnName_;
                        this.onChanged();
                     }

                     if (other.hasKeySeq()) {
                        this.setKeySeq(other.getKeySeq());
                     }

                     this.mergeUnknownFields(other.getUnknownFields());
                     return this;
                  }
               }

               public final boolean isInitialized() {
                  if (!this.hasColumnName()) {
                     return false;
                  } else if (!this.hasReferencedColumnName()) {
                     return false;
                  } else {
                     return this.hasKeySeq();
                  }
               }

               public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                  ForeignKeyColumn parsedMessage = null;

                  try {
                     parsedMessage = (ForeignKeyColumn)HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.PARSER.parsePartialFrom(input, extensionRegistry);
                  } catch (InvalidProtocolBufferException e) {
                     parsedMessage = (ForeignKeyColumn)e.getUnfinishedMessage();
                     throw e;
                  } finally {
                     if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                     }

                  }

                  return this;
               }

               public boolean hasColumnName() {
                  return (this.bitField0_ & 1) == 1;
               }

               public String getColumnName() {
                  Object ref = this.columnName_;
                  if (!(ref instanceof String)) {
                     String s = ((ByteString)ref).toStringUtf8();
                     this.columnName_ = s;
                     return s;
                  } else {
                     return (String)ref;
                  }
               }

               public ByteString getColumnNameBytes() {
                  Object ref = this.columnName_;
                  if (ref instanceof String) {
                     ByteString b = ByteString.copyFromUtf8((String)ref);
                     this.columnName_ = b;
                     return b;
                  } else {
                     return (ByteString)ref;
                  }
               }

               public Builder setColumnName(String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 1;
                     this.columnName_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public Builder clearColumnName() {
                  this.bitField0_ &= -2;
                  this.columnName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance().getColumnName();
                  this.onChanged();
                  return this;
               }

               public Builder setColumnNameBytes(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 1;
                     this.columnName_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public boolean hasReferencedColumnName() {
                  return (this.bitField0_ & 2) == 2;
               }

               public String getReferencedColumnName() {
                  Object ref = this.referencedColumnName_;
                  if (!(ref instanceof String)) {
                     String s = ((ByteString)ref).toStringUtf8();
                     this.referencedColumnName_ = s;
                     return s;
                  } else {
                     return (String)ref;
                  }
               }

               public ByteString getReferencedColumnNameBytes() {
                  Object ref = this.referencedColumnName_;
                  if (ref instanceof String) {
                     ByteString b = ByteString.copyFromUtf8((String)ref);
                     this.referencedColumnName_ = b;
                     return b;
                  } else {
                     return (ByteString)ref;
                  }
               }

               public Builder setReferencedColumnName(String value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 2;
                     this.referencedColumnName_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public Builder clearReferencedColumnName() {
                  this.bitField0_ &= -3;
                  this.referencedColumnName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance().getReferencedColumnName();
                  this.onChanged();
                  return this;
               }

               public Builder setReferencedColumnNameBytes(ByteString value) {
                  if (value == null) {
                     throw new NullPointerException();
                  } else {
                     this.bitField0_ |= 2;
                     this.referencedColumnName_ = value;
                     this.onChanged();
                     return this;
                  }
               }

               public boolean hasKeySeq() {
                  return (this.bitField0_ & 4) == 4;
               }

               public int getKeySeq() {
                  return this.keySeq_;
               }

               public Builder setKeySeq(int value) {
                  this.bitField0_ |= 4;
                  this.keySeq_ = value;
                  this.onChanged();
                  return this;
               }

               public Builder clearKeySeq() {
                  this.bitField0_ &= -5;
                  this.keySeq_ = 0;
                  this.onChanged();
                  return this;
               }
            }
         }

         public static final class Builder extends GeneratedMessage.Builder implements ForeignKeyOrBuilder {
            private int bitField0_;
            private Object fkName_;
            private Object referencedDbName_;
            private Object referencedTableName_;
            private Object referencedPkName_;
            private int updateRule_;
            private int deleteRule_;
            private List cols_;
            private RepeatedFieldBuilder colsBuilder_;
            private boolean enableConstraint_;
            private boolean validateConstraint_;
            private boolean relyConstraint_;

            public static final Descriptors.Descriptor getDescriptor() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor;
            }

            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKey.class, Builder.class);
            }

            private Builder() {
               this.fkName_ = "";
               this.referencedDbName_ = "";
               this.referencedTableName_ = "";
               this.referencedPkName_ = "";
               this.cols_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessage.BuilderParent parent) {
               super(parent);
               this.fkName_ = "";
               this.referencedDbName_ = "";
               this.referencedTableName_ = "";
               this.referencedPkName_ = "";
               this.cols_ = Collections.emptyList();
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (HbaseMetastoreProto.ForeignKeys.ForeignKey.alwaysUseFieldBuilders) {
                  this.getColsFieldBuilder();
               }

            }

            private static Builder create() {
               return new Builder();
            }

            public Builder clear() {
               super.clear();
               this.fkName_ = "";
               this.bitField0_ &= -2;
               this.referencedDbName_ = "";
               this.bitField0_ &= -3;
               this.referencedTableName_ = "";
               this.bitField0_ &= -5;
               this.referencedPkName_ = "";
               this.bitField0_ &= -9;
               this.updateRule_ = 0;
               this.bitField0_ &= -17;
               this.deleteRule_ = 0;
               this.bitField0_ &= -33;
               if (this.colsBuilder_ == null) {
                  this.cols_ = Collections.emptyList();
                  this.bitField0_ &= -65;
               } else {
                  this.colsBuilder_.clear();
               }

               this.enableConstraint_ = false;
               this.bitField0_ &= -129;
               this.validateConstraint_ = false;
               this.bitField0_ &= -257;
               this.relyConstraint_ = false;
               this.bitField0_ &= -513;
               return this;
            }

            public Builder clone() {
               return create().mergeFrom(this.buildPartial());
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_ForeignKey_descriptor;
            }

            public ForeignKey getDefaultInstanceForType() {
               return HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance();
            }

            public ForeignKey build() {
               ForeignKey result = this.buildPartial();
               if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
               } else {
                  return result;
               }
            }

            public ForeignKey buildPartial() {
               ForeignKey result = new ForeignKey(this);
               int from_bitField0_ = this.bitField0_;
               int to_bitField0_ = 0;
               if ((from_bitField0_ & 1) == 1) {
                  to_bitField0_ |= 1;
               }

               result.fkName_ = this.fkName_;
               if ((from_bitField0_ & 2) == 2) {
                  to_bitField0_ |= 2;
               }

               result.referencedDbName_ = this.referencedDbName_;
               if ((from_bitField0_ & 4) == 4) {
                  to_bitField0_ |= 4;
               }

               result.referencedTableName_ = this.referencedTableName_;
               if ((from_bitField0_ & 8) == 8) {
                  to_bitField0_ |= 8;
               }

               result.referencedPkName_ = this.referencedPkName_;
               if ((from_bitField0_ & 16) == 16) {
                  to_bitField0_ |= 16;
               }

               result.updateRule_ = this.updateRule_;
               if ((from_bitField0_ & 32) == 32) {
                  to_bitField0_ |= 32;
               }

               result.deleteRule_ = this.deleteRule_;
               if (this.colsBuilder_ == null) {
                  if ((this.bitField0_ & 64) == 64) {
                     this.cols_ = Collections.unmodifiableList(this.cols_);
                     this.bitField0_ &= -65;
                  }

                  result.cols_ = this.cols_;
               } else {
                  result.cols_ = this.colsBuilder_.build();
               }

               if ((from_bitField0_ & 128) == 128) {
                  to_bitField0_ |= 64;
               }

               result.enableConstraint_ = this.enableConstraint_;
               if ((from_bitField0_ & 256) == 256) {
                  to_bitField0_ |= 128;
               }

               result.validateConstraint_ = this.validateConstraint_;
               if ((from_bitField0_ & 512) == 512) {
                  to_bitField0_ |= 256;
               }

               result.relyConstraint_ = this.relyConstraint_;
               result.bitField0_ = to_bitField0_;
               this.onBuilt();
               return result;
            }

            public Builder mergeFrom(Message other) {
               if (other instanceof ForeignKey) {
                  return this.mergeFrom((ForeignKey)other);
               } else {
                  super.mergeFrom(other);
                  return this;
               }
            }

            public Builder mergeFrom(ForeignKey other) {
               if (other == HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance()) {
                  return this;
               } else {
                  if (other.hasFkName()) {
                     this.bitField0_ |= 1;
                     this.fkName_ = other.fkName_;
                     this.onChanged();
                  }

                  if (other.hasReferencedDbName()) {
                     this.bitField0_ |= 2;
                     this.referencedDbName_ = other.referencedDbName_;
                     this.onChanged();
                  }

                  if (other.hasReferencedTableName()) {
                     this.bitField0_ |= 4;
                     this.referencedTableName_ = other.referencedTableName_;
                     this.onChanged();
                  }

                  if (other.hasReferencedPkName()) {
                     this.bitField0_ |= 8;
                     this.referencedPkName_ = other.referencedPkName_;
                     this.onChanged();
                  }

                  if (other.hasUpdateRule()) {
                     this.setUpdateRule(other.getUpdateRule());
                  }

                  if (other.hasDeleteRule()) {
                     this.setDeleteRule(other.getDeleteRule());
                  }

                  if (this.colsBuilder_ == null) {
                     if (!other.cols_.isEmpty()) {
                        if (this.cols_.isEmpty()) {
                           this.cols_ = other.cols_;
                           this.bitField0_ &= -65;
                        } else {
                           this.ensureColsIsMutable();
                           this.cols_.addAll(other.cols_);
                        }

                        this.onChanged();
                     }
                  } else if (!other.cols_.isEmpty()) {
                     if (this.colsBuilder_.isEmpty()) {
                        this.colsBuilder_.dispose();
                        this.colsBuilder_ = null;
                        this.cols_ = other.cols_;
                        this.bitField0_ &= -65;
                        this.colsBuilder_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.alwaysUseFieldBuilders ? this.getColsFieldBuilder() : null;
                     } else {
                        this.colsBuilder_.addAllMessages(other.cols_);
                     }
                  }

                  if (other.hasEnableConstraint()) {
                     this.setEnableConstraint(other.getEnableConstraint());
                  }

                  if (other.hasValidateConstraint()) {
                     this.setValidateConstraint(other.getValidateConstraint());
                  }

                  if (other.hasRelyConstraint()) {
                     this.setRelyConstraint(other.getRelyConstraint());
                  }

                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasFkName()) {
                  return false;
               } else if (!this.hasReferencedDbName()) {
                  return false;
               } else if (!this.hasReferencedTableName()) {
                  return false;
               } else {
                  for(int i = 0; i < this.getColsCount(); ++i) {
                     if (!this.getCols(i).isInitialized()) {
                        return false;
                     }
                  }

                  return true;
               }
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
               ForeignKey parsedMessage = null;

               try {
                  parsedMessage = (ForeignKey)HbaseMetastoreProto.ForeignKeys.ForeignKey.PARSER.parsePartialFrom(input, extensionRegistry);
               } catch (InvalidProtocolBufferException e) {
                  parsedMessage = (ForeignKey)e.getUnfinishedMessage();
                  throw e;
               } finally {
                  if (parsedMessage != null) {
                     this.mergeFrom(parsedMessage);
                  }

               }

               return this;
            }

            public boolean hasFkName() {
               return (this.bitField0_ & 1) == 1;
            }

            public String getFkName() {
               Object ref = this.fkName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.fkName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getFkNameBytes() {
               Object ref = this.fkName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.fkName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setFkName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.fkName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearFkName() {
               this.bitField0_ &= -2;
               this.fkName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance().getFkName();
               this.onChanged();
               return this;
            }

            public Builder setFkNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.fkName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasReferencedDbName() {
               return (this.bitField0_ & 2) == 2;
            }

            public String getReferencedDbName() {
               Object ref = this.referencedDbName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.referencedDbName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getReferencedDbNameBytes() {
               Object ref = this.referencedDbName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.referencedDbName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setReferencedDbName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.referencedDbName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearReferencedDbName() {
               this.bitField0_ &= -3;
               this.referencedDbName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance().getReferencedDbName();
               this.onChanged();
               return this;
            }

            public Builder setReferencedDbNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.referencedDbName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasReferencedTableName() {
               return (this.bitField0_ & 4) == 4;
            }

            public String getReferencedTableName() {
               Object ref = this.referencedTableName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.referencedTableName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getReferencedTableNameBytes() {
               Object ref = this.referencedTableName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.referencedTableName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setReferencedTableName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.referencedTableName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearReferencedTableName() {
               this.bitField0_ &= -5;
               this.referencedTableName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance().getReferencedTableName();
               this.onChanged();
               return this;
            }

            public Builder setReferencedTableNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.referencedTableName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasReferencedPkName() {
               return (this.bitField0_ & 8) == 8;
            }

            public String getReferencedPkName() {
               Object ref = this.referencedPkName_;
               if (!(ref instanceof String)) {
                  String s = ((ByteString)ref).toStringUtf8();
                  this.referencedPkName_ = s;
                  return s;
               } else {
                  return (String)ref;
               }
            }

            public ByteString getReferencedPkNameBytes() {
               Object ref = this.referencedPkName_;
               if (ref instanceof String) {
                  ByteString b = ByteString.copyFromUtf8((String)ref);
                  this.referencedPkName_ = b;
                  return b;
               } else {
                  return (ByteString)ref;
               }
            }

            public Builder setReferencedPkName(String value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.referencedPkName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public Builder clearReferencedPkName() {
               this.bitField0_ &= -9;
               this.referencedPkName_ = HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance().getReferencedPkName();
               this.onChanged();
               return this;
            }

            public Builder setReferencedPkNameBytes(ByteString value) {
               if (value == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.referencedPkName_ = value;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasUpdateRule() {
               return (this.bitField0_ & 16) == 16;
            }

            public int getUpdateRule() {
               return this.updateRule_;
            }

            public Builder setUpdateRule(int value) {
               this.bitField0_ |= 16;
               this.updateRule_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearUpdateRule() {
               this.bitField0_ &= -17;
               this.updateRule_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasDeleteRule() {
               return (this.bitField0_ & 32) == 32;
            }

            public int getDeleteRule() {
               return this.deleteRule_;
            }

            public Builder setDeleteRule(int value) {
               this.bitField0_ |= 32;
               this.deleteRule_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearDeleteRule() {
               this.bitField0_ &= -33;
               this.deleteRule_ = 0;
               this.onChanged();
               return this;
            }

            private void ensureColsIsMutable() {
               if ((this.bitField0_ & 64) != 64) {
                  this.cols_ = new ArrayList(this.cols_);
                  this.bitField0_ |= 64;
               }

            }

            public List getColsList() {
               return this.colsBuilder_ == null ? Collections.unmodifiableList(this.cols_) : this.colsBuilder_.getMessageList();
            }

            public int getColsCount() {
               return this.colsBuilder_ == null ? this.cols_.size() : this.colsBuilder_.getCount();
            }

            public ForeignKeyColumn getCols(int index) {
               return this.colsBuilder_ == null ? (ForeignKeyColumn)this.cols_.get(index) : (ForeignKeyColumn)this.colsBuilder_.getMessage(index);
            }

            public Builder setCols(int index, ForeignKeyColumn value) {
               if (this.colsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureColsIsMutable();
                  this.cols_.set(index, value);
                  this.onChanged();
               } else {
                  this.colsBuilder_.setMessage(index, value);
               }

               return this;
            }

            public Builder setCols(int index, ForeignKeyColumn.Builder builderForValue) {
               if (this.colsBuilder_ == null) {
                  this.ensureColsIsMutable();
                  this.cols_.set(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.colsBuilder_.setMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addCols(ForeignKeyColumn value) {
               if (this.colsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureColsIsMutable();
                  this.cols_.add(value);
                  this.onChanged();
               } else {
                  this.colsBuilder_.addMessage(value);
               }

               return this;
            }

            public Builder addCols(int index, ForeignKeyColumn value) {
               if (this.colsBuilder_ == null) {
                  if (value == null) {
                     throw new NullPointerException();
                  }

                  this.ensureColsIsMutable();
                  this.cols_.add(index, value);
                  this.onChanged();
               } else {
                  this.colsBuilder_.addMessage(index, value);
               }

               return this;
            }

            public Builder addCols(ForeignKeyColumn.Builder builderForValue) {
               if (this.colsBuilder_ == null) {
                  this.ensureColsIsMutable();
                  this.cols_.add(builderForValue.build());
                  this.onChanged();
               } else {
                  this.colsBuilder_.addMessage(builderForValue.build());
               }

               return this;
            }

            public Builder addCols(int index, ForeignKeyColumn.Builder builderForValue) {
               if (this.colsBuilder_ == null) {
                  this.ensureColsIsMutable();
                  this.cols_.add(index, builderForValue.build());
                  this.onChanged();
               } else {
                  this.colsBuilder_.addMessage(index, builderForValue.build());
               }

               return this;
            }

            public Builder addAllCols(Iterable values) {
               if (this.colsBuilder_ == null) {
                  this.ensureColsIsMutable();
                  com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.cols_);
                  this.onChanged();
               } else {
                  this.colsBuilder_.addAllMessages(values);
               }

               return this;
            }

            public Builder clearCols() {
               if (this.colsBuilder_ == null) {
                  this.cols_ = Collections.emptyList();
                  this.bitField0_ &= -65;
                  this.onChanged();
               } else {
                  this.colsBuilder_.clear();
               }

               return this;
            }

            public Builder removeCols(int index) {
               if (this.colsBuilder_ == null) {
                  this.ensureColsIsMutable();
                  this.cols_.remove(index);
                  this.onChanged();
               } else {
                  this.colsBuilder_.remove(index);
               }

               return this;
            }

            public ForeignKeyColumn.Builder getColsBuilder(int index) {
               return (ForeignKeyColumn.Builder)this.getColsFieldBuilder().getBuilder(index);
            }

            public ForeignKeyColumnOrBuilder getColsOrBuilder(int index) {
               return this.colsBuilder_ == null ? (ForeignKeyColumnOrBuilder)this.cols_.get(index) : (ForeignKeyColumnOrBuilder)this.colsBuilder_.getMessageOrBuilder(index);
            }

            public List getColsOrBuilderList() {
               return this.colsBuilder_ != null ? this.colsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.cols_);
            }

            public ForeignKeyColumn.Builder addColsBuilder() {
               return (ForeignKeyColumn.Builder)this.getColsFieldBuilder().addBuilder(HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance());
            }

            public ForeignKeyColumn.Builder addColsBuilder(int index) {
               return (ForeignKeyColumn.Builder)this.getColsFieldBuilder().addBuilder(index, HbaseMetastoreProto.ForeignKeys.ForeignKey.ForeignKeyColumn.getDefaultInstance());
            }

            public List getColsBuilderList() {
               return this.getColsFieldBuilder().getBuilderList();
            }

            private RepeatedFieldBuilder getColsFieldBuilder() {
               if (this.colsBuilder_ == null) {
                  this.colsBuilder_ = new RepeatedFieldBuilder(this.cols_, (this.bitField0_ & 64) == 64, this.getParentForChildren(), this.isClean());
                  this.cols_ = null;
               }

               return this.colsBuilder_;
            }

            public boolean hasEnableConstraint() {
               return (this.bitField0_ & 128) == 128;
            }

            public boolean getEnableConstraint() {
               return this.enableConstraint_;
            }

            public Builder setEnableConstraint(boolean value) {
               this.bitField0_ |= 128;
               this.enableConstraint_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearEnableConstraint() {
               this.bitField0_ &= -129;
               this.enableConstraint_ = false;
               this.onChanged();
               return this;
            }

            public boolean hasValidateConstraint() {
               return (this.bitField0_ & 256) == 256;
            }

            public boolean getValidateConstraint() {
               return this.validateConstraint_;
            }

            public Builder setValidateConstraint(boolean value) {
               this.bitField0_ |= 256;
               this.validateConstraint_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearValidateConstraint() {
               this.bitField0_ &= -257;
               this.validateConstraint_ = false;
               this.onChanged();
               return this;
            }

            public boolean hasRelyConstraint() {
               return (this.bitField0_ & 512) == 512;
            }

            public boolean getRelyConstraint() {
               return this.relyConstraint_;
            }

            public Builder setRelyConstraint(boolean value) {
               this.bitField0_ |= 512;
               this.relyConstraint_ = value;
               this.onChanged();
               return this;
            }

            public Builder clearRelyConstraint() {
               this.bitField0_ &= -513;
               this.relyConstraint_ = false;
               this.onChanged();
               return this;
            }
         }

         public interface ForeignKeyColumnOrBuilder extends MessageOrBuilder {
            boolean hasColumnName();

            String getColumnName();

            ByteString getColumnNameBytes();

            boolean hasReferencedColumnName();

            String getReferencedColumnName();

            ByteString getReferencedColumnNameBytes();

            boolean hasKeySeq();

            int getKeySeq();
         }
      }

      public static final class Builder extends GeneratedMessage.Builder implements ForeignKeysOrBuilder {
         private int bitField0_;
         private List fks_;
         private RepeatedFieldBuilder fksBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor;
         }

         protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_fieldAccessorTable.ensureFieldAccessorsInitialized(ForeignKeys.class, Builder.class);
         }

         private Builder() {
            this.fks_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessage.BuilderParent parent) {
            super(parent);
            this.fks_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (HbaseMetastoreProto.ForeignKeys.alwaysUseFieldBuilders) {
               this.getFksFieldBuilder();
            }

         }

         private static Builder create() {
            return new Builder();
         }

         public Builder clear() {
            super.clear();
            if (this.fksBuilder_ == null) {
               this.fks_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.fksBuilder_.clear();
            }

            return this;
         }

         public Builder clone() {
            return create().mergeFrom(this.buildPartial());
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return HbaseMetastoreProto.internal_static_org_apache_hadoop_hive_metastore_hbase_ForeignKeys_descriptor;
         }

         public ForeignKeys getDefaultInstanceForType() {
            return HbaseMetastoreProto.ForeignKeys.getDefaultInstance();
         }

         public ForeignKeys build() {
            ForeignKeys result = this.buildPartial();
            if (!result.isInitialized()) {
               throw newUninitializedMessageException(result);
            } else {
               return result;
            }
         }

         public ForeignKeys buildPartial() {
            ForeignKeys result = new ForeignKeys(this);
            int from_bitField0_ = this.bitField0_;
            if (this.fksBuilder_ == null) {
               if ((this.bitField0_ & 1) == 1) {
                  this.fks_ = Collections.unmodifiableList(this.fks_);
                  this.bitField0_ &= -2;
               }

               result.fks_ = this.fks_;
            } else {
               result.fks_ = this.fksBuilder_.build();
            }

            this.onBuilt();
            return result;
         }

         public Builder mergeFrom(Message other) {
            if (other instanceof ForeignKeys) {
               return this.mergeFrom((ForeignKeys)other);
            } else {
               super.mergeFrom(other);
               return this;
            }
         }

         public Builder mergeFrom(ForeignKeys other) {
            if (other == HbaseMetastoreProto.ForeignKeys.getDefaultInstance()) {
               return this;
            } else {
               if (this.fksBuilder_ == null) {
                  if (!other.fks_.isEmpty()) {
                     if (this.fks_.isEmpty()) {
                        this.fks_ = other.fks_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureFksIsMutable();
                        this.fks_.addAll(other.fks_);
                     }

                     this.onChanged();
                  }
               } else if (!other.fks_.isEmpty()) {
                  if (this.fksBuilder_.isEmpty()) {
                     this.fksBuilder_.dispose();
                     this.fksBuilder_ = null;
                     this.fks_ = other.fks_;
                     this.bitField0_ &= -2;
                     this.fksBuilder_ = HbaseMetastoreProto.ForeignKeys.alwaysUseFieldBuilders ? this.getFksFieldBuilder() : null;
                  } else {
                     this.fksBuilder_.addAllMessages(other.fks_);
                  }
               }

               this.mergeUnknownFields(other.getUnknownFields());
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int i = 0; i < this.getFksCount(); ++i) {
               if (!this.getFks(i).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            ForeignKeys parsedMessage = null;

            try {
               parsedMessage = (ForeignKeys)HbaseMetastoreProto.ForeignKeys.PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (InvalidProtocolBufferException e) {
               parsedMessage = (ForeignKeys)e.getUnfinishedMessage();
               throw e;
            } finally {
               if (parsedMessage != null) {
                  this.mergeFrom(parsedMessage);
               }

            }

            return this;
         }

         private void ensureFksIsMutable() {
            if ((this.bitField0_ & 1) != 1) {
               this.fks_ = new ArrayList(this.fks_);
               this.bitField0_ |= 1;
            }

         }

         public List getFksList() {
            return this.fksBuilder_ == null ? Collections.unmodifiableList(this.fks_) : this.fksBuilder_.getMessageList();
         }

         public int getFksCount() {
            return this.fksBuilder_ == null ? this.fks_.size() : this.fksBuilder_.getCount();
         }

         public ForeignKey getFks(int index) {
            return this.fksBuilder_ == null ? (ForeignKey)this.fks_.get(index) : (ForeignKey)this.fksBuilder_.getMessage(index);
         }

         public Builder setFks(int index, ForeignKey value) {
            if (this.fksBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFksIsMutable();
               this.fks_.set(index, value);
               this.onChanged();
            } else {
               this.fksBuilder_.setMessage(index, value);
            }

            return this;
         }

         public Builder setFks(int index, ForeignKey.Builder builderForValue) {
            if (this.fksBuilder_ == null) {
               this.ensureFksIsMutable();
               this.fks_.set(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fksBuilder_.setMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addFks(ForeignKey value) {
            if (this.fksBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFksIsMutable();
               this.fks_.add(value);
               this.onChanged();
            } else {
               this.fksBuilder_.addMessage(value);
            }

            return this;
         }

         public Builder addFks(int index, ForeignKey value) {
            if (this.fksBuilder_ == null) {
               if (value == null) {
                  throw new NullPointerException();
               }

               this.ensureFksIsMutable();
               this.fks_.add(index, value);
               this.onChanged();
            } else {
               this.fksBuilder_.addMessage(index, value);
            }

            return this;
         }

         public Builder addFks(ForeignKey.Builder builderForValue) {
            if (this.fksBuilder_ == null) {
               this.ensureFksIsMutable();
               this.fks_.add(builderForValue.build());
               this.onChanged();
            } else {
               this.fksBuilder_.addMessage(builderForValue.build());
            }

            return this;
         }

         public Builder addFks(int index, ForeignKey.Builder builderForValue) {
            if (this.fksBuilder_ == null) {
               this.ensureFksIsMutable();
               this.fks_.add(index, builderForValue.build());
               this.onChanged();
            } else {
               this.fksBuilder_.addMessage(index, builderForValue.build());
            }

            return this;
         }

         public Builder addAllFks(Iterable values) {
            if (this.fksBuilder_ == null) {
               this.ensureFksIsMutable();
               com.google.protobuf.GeneratedMessage.Builder.addAll(values, this.fks_);
               this.onChanged();
            } else {
               this.fksBuilder_.addAllMessages(values);
            }

            return this;
         }

         public Builder clearFks() {
            if (this.fksBuilder_ == null) {
               this.fks_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.fksBuilder_.clear();
            }

            return this;
         }

         public Builder removeFks(int index) {
            if (this.fksBuilder_ == null) {
               this.ensureFksIsMutable();
               this.fks_.remove(index);
               this.onChanged();
            } else {
               this.fksBuilder_.remove(index);
            }

            return this;
         }

         public ForeignKey.Builder getFksBuilder(int index) {
            return (ForeignKey.Builder)this.getFksFieldBuilder().getBuilder(index);
         }

         public ForeignKeyOrBuilder getFksOrBuilder(int index) {
            return this.fksBuilder_ == null ? (ForeignKeyOrBuilder)this.fks_.get(index) : (ForeignKeyOrBuilder)this.fksBuilder_.getMessageOrBuilder(index);
         }

         public List getFksOrBuilderList() {
            return this.fksBuilder_ != null ? this.fksBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.fks_);
         }

         public ForeignKey.Builder addFksBuilder() {
            return (ForeignKey.Builder)this.getFksFieldBuilder().addBuilder(HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance());
         }

         public ForeignKey.Builder addFksBuilder(int index) {
            return (ForeignKey.Builder)this.getFksFieldBuilder().addBuilder(index, HbaseMetastoreProto.ForeignKeys.ForeignKey.getDefaultInstance());
         }

         public List getFksBuilderList() {
            return this.getFksFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilder getFksFieldBuilder() {
            if (this.fksBuilder_ == null) {
               this.fksBuilder_ = new RepeatedFieldBuilder(this.fks_, (this.bitField0_ & 1) == 1, this.getParentForChildren(), this.isClean());
               this.fks_ = null;
            }

            return this.fksBuilder_;
         }
      }

      public interface ForeignKeyOrBuilder extends MessageOrBuilder {
         boolean hasFkName();

         String getFkName();

         ByteString getFkNameBytes();

         boolean hasReferencedDbName();

         String getReferencedDbName();

         ByteString getReferencedDbNameBytes();

         boolean hasReferencedTableName();

         String getReferencedTableName();

         ByteString getReferencedTableNameBytes();

         boolean hasReferencedPkName();

         String getReferencedPkName();

         ByteString getReferencedPkNameBytes();

         boolean hasUpdateRule();

         int getUpdateRule();

         boolean hasDeleteRule();

         int getDeleteRule();

         List getColsList();

         ForeignKey.ForeignKeyColumn getCols(int var1);

         int getColsCount();

         List getColsOrBuilderList();

         ForeignKey.ForeignKeyColumnOrBuilder getColsOrBuilder(int var1);

         boolean hasEnableConstraint();

         boolean getEnableConstraint();

         boolean hasValidateConstraint();

         boolean getValidateConstraint();

         boolean hasRelyConstraint();

         boolean getRelyConstraint();
      }
   }

   public interface AggrStatsBloomFilterOrBuilder extends MessageOrBuilder {
      boolean hasDbName();

      ByteString getDbName();

      boolean hasTableName();

      ByteString getTableName();

      boolean hasBloomFilter();

      AggrStatsBloomFilter.BloomFilter getBloomFilter();

      AggrStatsBloomFilter.BloomFilterOrBuilder getBloomFilterOrBuilder();

      boolean hasAggregatedAt();

      long getAggregatedAt();
   }

   public interface AggrStatsInvalidatorFilterOrBuilder extends MessageOrBuilder {
      List getToInvalidateList();

      AggrStatsInvalidatorFilter.Entry getToInvalidate(int var1);

      int getToInvalidateCount();

      List getToInvalidateOrBuilderList();

      AggrStatsInvalidatorFilter.EntryOrBuilder getToInvalidateOrBuilder(int var1);

      boolean hasRunEvery();

      long getRunEvery();

      boolean hasMaxCacheEntryLife();

      long getMaxCacheEntryLife();
   }

   public interface AggrStatsOrBuilder extends MessageOrBuilder {
      boolean hasPartsFound();

      long getPartsFound();

      List getColStatsList();

      ColumnStats getColStats(int var1);

      int getColStatsCount();

      List getColStatsOrBuilderList();

      ColumnStatsOrBuilder getColStatsOrBuilder(int var1);
   }

   public interface ColumnStatsOrBuilder extends MessageOrBuilder {
      boolean hasLastAnalyzed();

      long getLastAnalyzed();

      boolean hasColumnType();

      String getColumnType();

      ByteString getColumnTypeBytes();

      boolean hasNumNulls();

      long getNumNulls();

      boolean hasNumDistinctValues();

      long getNumDistinctValues();

      boolean hasBoolStats();

      ColumnStats.BooleanStats getBoolStats();

      ColumnStats.BooleanStatsOrBuilder getBoolStatsOrBuilder();

      boolean hasLongStats();

      ColumnStats.LongStats getLongStats();

      ColumnStats.LongStatsOrBuilder getLongStatsOrBuilder();

      boolean hasDoubleStats();

      ColumnStats.DoubleStats getDoubleStats();

      ColumnStats.DoubleStatsOrBuilder getDoubleStatsOrBuilder();

      boolean hasStringStats();

      ColumnStats.StringStats getStringStats();

      ColumnStats.StringStatsOrBuilder getStringStatsOrBuilder();

      boolean hasBinaryStats();

      ColumnStats.StringStats getBinaryStats();

      ColumnStats.StringStatsOrBuilder getBinaryStatsOrBuilder();

      boolean hasDecimalStats();

      ColumnStats.DecimalStats getDecimalStats();

      ColumnStats.DecimalStatsOrBuilder getDecimalStatsOrBuilder();

      boolean hasColumnName();

      String getColumnName();

      ByteString getColumnNameBytes();

      boolean hasBitVectors();

      String getBitVectors();

      ByteString getBitVectorsBytes();
   }

   public interface DatabaseOrBuilder extends MessageOrBuilder {
      boolean hasDescription();

      String getDescription();

      ByteString getDescriptionBytes();

      boolean hasUri();

      String getUri();

      ByteString getUriBytes();

      boolean hasParameters();

      Parameters getParameters();

      ParametersOrBuilder getParametersOrBuilder();

      boolean hasPrivileges();

      PrincipalPrivilegeSet getPrivileges();

      PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder();

      boolean hasOwnerName();

      String getOwnerName();

      ByteString getOwnerNameBytes();

      boolean hasOwnerType();

      PrincipalType getOwnerType();
   }

   public interface DelegationTokenOrBuilder extends MessageOrBuilder {
      boolean hasTokenStr();

      String getTokenStr();

      ByteString getTokenStrBytes();
   }

   public interface FieldSchemaOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasType();

      String getType();

      ByteString getTypeBytes();

      boolean hasComment();

      String getComment();

      ByteString getCommentBytes();
   }

   public interface ForeignKeysOrBuilder extends MessageOrBuilder {
      List getFksList();

      ForeignKeys.ForeignKey getFks(int var1);

      int getFksCount();

      List getFksOrBuilderList();

      ForeignKeys.ForeignKeyOrBuilder getFksOrBuilder(int var1);
   }

   public interface FunctionOrBuilder extends MessageOrBuilder {
      boolean hasClassName();

      String getClassName();

      ByteString getClassNameBytes();

      boolean hasOwnerName();

      String getOwnerName();

      ByteString getOwnerNameBytes();

      boolean hasOwnerType();

      PrincipalType getOwnerType();

      boolean hasCreateTime();

      long getCreateTime();

      boolean hasFunctionType();

      Function.FunctionType getFunctionType();

      List getResourceUrisList();

      Function.ResourceUri getResourceUris(int var1);

      int getResourceUrisCount();

      List getResourceUrisOrBuilderList();

      Function.ResourceUriOrBuilder getResourceUrisOrBuilder(int var1);
   }

   public interface IndexOrBuilder extends MessageOrBuilder {
      boolean hasIndexHandlerClass();

      String getIndexHandlerClass();

      ByteString getIndexHandlerClassBytes();

      boolean hasDbName();

      String getDbName();

      ByteString getDbNameBytes();

      boolean hasOrigTableName();

      String getOrigTableName();

      ByteString getOrigTableNameBytes();

      boolean hasLocation();

      String getLocation();

      ByteString getLocationBytes();

      boolean hasSdParameters();

      Parameters getSdParameters();

      ParametersOrBuilder getSdParametersOrBuilder();

      boolean hasCreateTime();

      int getCreateTime();

      boolean hasLastAccessTime();

      int getLastAccessTime();

      boolean hasIndexTableName();

      String getIndexTableName();

      ByteString getIndexTableNameBytes();

      boolean hasSdHash();

      ByteString getSdHash();

      boolean hasParameters();

      Parameters getParameters();

      ParametersOrBuilder getParametersOrBuilder();

      boolean hasDeferredRebuild();

      boolean getDeferredRebuild();
   }

   public interface MasterKeyOrBuilder extends MessageOrBuilder {
      boolean hasMasterKey();

      String getMasterKey();

      ByteString getMasterKeyBytes();
   }

   public interface ParameterEntryOrBuilder extends MessageOrBuilder {
      boolean hasKey();

      String getKey();

      ByteString getKeyBytes();

      boolean hasValue();

      String getValue();

      ByteString getValueBytes();
   }

   public interface ParametersOrBuilder extends MessageOrBuilder {
      List getParameterList();

      ParameterEntry getParameter(int var1);

      int getParameterCount();

      List getParameterOrBuilderList();

      ParameterEntryOrBuilder getParameterOrBuilder(int var1);
   }

   public interface PartitionKeyComparatorOrBuilder extends MessageOrBuilder {
      boolean hasNames();

      String getNames();

      ByteString getNamesBytes();

      boolean hasTypes();

      String getTypes();

      ByteString getTypesBytes();

      List getOpList();

      PartitionKeyComparator.Operator getOp(int var1);

      int getOpCount();

      List getOpOrBuilderList();

      PartitionKeyComparator.OperatorOrBuilder getOpOrBuilder(int var1);

      List getRangeList();

      PartitionKeyComparator.Range getRange(int var1);

      int getRangeCount();

      List getRangeOrBuilderList();

      PartitionKeyComparator.RangeOrBuilder getRangeOrBuilder(int var1);
   }

   public interface PartitionOrBuilder extends MessageOrBuilder {
      boolean hasCreateTime();

      long getCreateTime();

      boolean hasLastAccessTime();

      long getLastAccessTime();

      boolean hasLocation();

      String getLocation();

      ByteString getLocationBytes();

      boolean hasSdParameters();

      Parameters getSdParameters();

      ParametersOrBuilder getSdParametersOrBuilder();

      boolean hasSdHash();

      ByteString getSdHash();

      boolean hasParameters();

      Parameters getParameters();

      ParametersOrBuilder getParametersOrBuilder();
   }

   public interface PrimaryKeyOrBuilder extends MessageOrBuilder {
      boolean hasPkName();

      String getPkName();

      ByteString getPkNameBytes();

      List getColsList();

      PrimaryKey.PrimaryKeyColumn getCols(int var1);

      int getColsCount();

      List getColsOrBuilderList();

      PrimaryKey.PrimaryKeyColumnOrBuilder getColsOrBuilder(int var1);

      boolean hasEnableConstraint();

      boolean getEnableConstraint();

      boolean hasValidateConstraint();

      boolean getValidateConstraint();

      boolean hasRelyConstraint();

      boolean getRelyConstraint();
   }

   public interface PrincipalPrivilegeSetEntryOrBuilder extends MessageOrBuilder {
      boolean hasPrincipalName();

      String getPrincipalName();

      ByteString getPrincipalNameBytes();

      List getPrivilegesList();

      PrivilegeGrantInfo getPrivileges(int var1);

      int getPrivilegesCount();

      List getPrivilegesOrBuilderList();

      PrivilegeGrantInfoOrBuilder getPrivilegesOrBuilder(int var1);
   }

   public interface PrincipalPrivilegeSetOrBuilder extends MessageOrBuilder {
      List getUsersList();

      PrincipalPrivilegeSetEntry getUsers(int var1);

      int getUsersCount();

      List getUsersOrBuilderList();

      PrincipalPrivilegeSetEntryOrBuilder getUsersOrBuilder(int var1);

      List getRolesList();

      PrincipalPrivilegeSetEntry getRoles(int var1);

      int getRolesCount();

      List getRolesOrBuilderList();

      PrincipalPrivilegeSetEntryOrBuilder getRolesOrBuilder(int var1);
   }

   public interface PrivilegeGrantInfoOrBuilder extends MessageOrBuilder {
      boolean hasPrivilege();

      String getPrivilege();

      ByteString getPrivilegeBytes();

      boolean hasCreateTime();

      long getCreateTime();

      boolean hasGrantor();

      String getGrantor();

      ByteString getGrantorBytes();

      boolean hasGrantorType();

      PrincipalType getGrantorType();

      boolean hasGrantOption();

      boolean getGrantOption();
   }

   public interface RoleGrantInfoListOrBuilder extends MessageOrBuilder {
      List getGrantInfoList();

      RoleGrantInfo getGrantInfo(int var1);

      int getGrantInfoCount();

      List getGrantInfoOrBuilderList();

      RoleGrantInfoOrBuilder getGrantInfoOrBuilder(int var1);
   }

   public interface RoleGrantInfoOrBuilder extends MessageOrBuilder {
      boolean hasPrincipalName();

      String getPrincipalName();

      ByteString getPrincipalNameBytes();

      boolean hasPrincipalType();

      PrincipalType getPrincipalType();

      boolean hasAddTime();

      long getAddTime();

      boolean hasGrantor();

      String getGrantor();

      ByteString getGrantorBytes();

      boolean hasGrantorType();

      PrincipalType getGrantorType();

      boolean hasGrantOption();

      boolean getGrantOption();
   }

   public interface RoleListOrBuilder extends MessageOrBuilder {
      List getRoleList();

      int getRoleCount();

      String getRole(int var1);

      ByteString getRoleBytes(int var1);
   }

   public interface RoleOrBuilder extends MessageOrBuilder {
      boolean hasCreateTime();

      long getCreateTime();

      boolean hasOwnerName();

      String getOwnerName();

      ByteString getOwnerNameBytes();
   }

   public interface StorageDescriptorOrBuilder extends MessageOrBuilder {
      List getColsList();

      FieldSchema getCols(int var1);

      int getColsCount();

      List getColsOrBuilderList();

      FieldSchemaOrBuilder getColsOrBuilder(int var1);

      boolean hasInputFormat();

      String getInputFormat();

      ByteString getInputFormatBytes();

      boolean hasOutputFormat();

      String getOutputFormat();

      ByteString getOutputFormatBytes();

      boolean hasIsCompressed();

      boolean getIsCompressed();

      boolean hasNumBuckets();

      int getNumBuckets();

      boolean hasSerdeInfo();

      StorageDescriptor.SerDeInfo getSerdeInfo();

      StorageDescriptor.SerDeInfoOrBuilder getSerdeInfoOrBuilder();

      List getBucketColsList();

      int getBucketColsCount();

      String getBucketCols(int var1);

      ByteString getBucketColsBytes(int var1);

      List getSortColsList();

      StorageDescriptor.Order getSortCols(int var1);

      int getSortColsCount();

      List getSortColsOrBuilderList();

      StorageDescriptor.OrderOrBuilder getSortColsOrBuilder(int var1);

      boolean hasSkewedInfo();

      StorageDescriptor.SkewedInfo getSkewedInfo();

      StorageDescriptor.SkewedInfoOrBuilder getSkewedInfoOrBuilder();

      boolean hasStoredAsSubDirectories();

      boolean getStoredAsSubDirectories();
   }

   public interface TableOrBuilder extends MessageOrBuilder {
      boolean hasOwner();

      String getOwner();

      ByteString getOwnerBytes();

      boolean hasCreateTime();

      long getCreateTime();

      boolean hasLastAccessTime();

      long getLastAccessTime();

      boolean hasRetention();

      long getRetention();

      boolean hasLocation();

      String getLocation();

      ByteString getLocationBytes();

      boolean hasSdParameters();

      Parameters getSdParameters();

      ParametersOrBuilder getSdParametersOrBuilder();

      boolean hasSdHash();

      ByteString getSdHash();

      List getPartitionKeysList();

      FieldSchema getPartitionKeys(int var1);

      int getPartitionKeysCount();

      List getPartitionKeysOrBuilderList();

      FieldSchemaOrBuilder getPartitionKeysOrBuilder(int var1);

      boolean hasParameters();

      Parameters getParameters();

      ParametersOrBuilder getParametersOrBuilder();

      boolean hasViewOriginalText();

      String getViewOriginalText();

      ByteString getViewOriginalTextBytes();

      boolean hasViewExpandedText();

      String getViewExpandedText();

      ByteString getViewExpandedTextBytes();

      boolean hasTableType();

      String getTableType();

      ByteString getTableTypeBytes();

      boolean hasPrivileges();

      PrincipalPrivilegeSet getPrivileges();

      PrincipalPrivilegeSetOrBuilder getPrivilegesOrBuilder();

      boolean hasIsTemporary();

      boolean getIsTemporary();

      boolean hasIsRewriteEnabled();

      boolean getIsRewriteEnabled();
   }
}
