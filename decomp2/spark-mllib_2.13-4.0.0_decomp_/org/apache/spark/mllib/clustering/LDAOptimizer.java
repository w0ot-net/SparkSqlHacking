package org.apache.spark.mllib.clustering;

import org.apache.spark.rdd.RDD;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u000513q\u0001B\u0003\u0011\u0002G\u0005\u0001\u0003\u0003\u0004\u0018\u0001\u0019\u0005Q\u0001\u0007\u0005\u0007i\u00011\t!B\u001b\t\rY\u0002a\u0011A\u00038\u00051aE)Q(qi&l\u0017N_3s\u0015\t1q!\u0001\u0006dYV\u001cH/\u001a:j]\u001eT!\u0001C\u0005\u0002\u000b5dG.\u001b2\u000b\u0005)Y\u0011!B:qCJ\\'B\u0001\u0007\u000e\u0003\u0019\t\u0007/Y2iK*\ta\"A\u0002pe\u001e\u001c\u0001a\u0005\u0002\u0001#A\u0011!#F\u0007\u0002')\tA#A\u0003tG\u0006d\u0017-\u0003\u0002\u0017'\t1\u0011I\\=SK\u001a\f!\"\u001b8ji&\fG.\u001b>f)\rI2d\f\t\u00035\u0001i\u0011!\u0002\u0005\u00069\u0005\u0001\r!H\u0001\u0005I>\u001c7\u000fE\u0002\u001fC\rj\u0011a\b\u0006\u0003A%\t1A\u001d3e\u0013\t\u0011sDA\u0002S\t\u0012\u0003BA\u0005\u0013'S%\u0011Qe\u0005\u0002\u0007)V\u0004H.\u001a\u001a\u0011\u0005I9\u0013B\u0001\u0015\u0014\u0005\u0011auN\\4\u0011\u0005)jS\"A\u0016\u000b\u00051:\u0011A\u00027j]\u0006dw-\u0003\u0002/W\t1a+Z2u_JDQ\u0001M\u0001A\u0002E\n1\u0001\u001c3b!\tQ\"'\u0003\u00024\u000b\t\u0019A\nR!\u0002\t9,\u0007\u0010\u001e\u000b\u00023\u0005Yq-\u001a;M\t\u0006ku\u000eZ3m)\tA4\b\u0005\u0002\u001bs%\u0011!(\u0002\u0002\t\u0019\u0012\u000bUj\u001c3fY\")Ah\u0001a\u0001{\u0005q\u0011\u000e^3sCRLwN\u001c+j[\u0016\u001c\bc\u0001\n?\u0001&\u0011qh\u0005\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0003%\u0005K!AQ\n\u0003\r\u0011{WO\u00197fQ\r\u0001AI\u0013\t\u0003\u000b\"k\u0011A\u0012\u0006\u0003\u000f&\t!\"\u00198o_R\fG/[8o\u0013\tIeIA\u0003TS:\u001cW-I\u0001L\u0003\u0015\td\u0006\u000e\u00181\u0001"
)
public interface LDAOptimizer {
   LDAOptimizer initialize(final RDD docs, final LDA lda);

   LDAOptimizer next();

   LDAModel getLDAModel(final double[] iterationTimes);
}
