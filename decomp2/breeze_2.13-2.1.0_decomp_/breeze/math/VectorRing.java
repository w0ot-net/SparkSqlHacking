package breeze.math;

import breeze.generic.UFunc;
import scala.reflect.ScalaSignature;

@ScalaSignature(
   bytes = "\u0006\u0005q2qa\u0001\u0003\u0011\u0002G\u0005\u0011\u0002C\u0003$\u0001\u0019\rA\u0005C\u00035\u0001\u0019\rQG\u0001\u0006WK\u000e$xN\u001d*j]\u001eT!!\u0002\u0004\u0002\t5\fG\u000f\u001b\u0006\u0002\u000f\u00051!M]3fu\u0016\u001c\u0001!F\u0002\u000b/\u0005\u001a2\u0001A\u0006\u0012!\taq\"D\u0001\u000e\u0015\u0005q\u0011!B:dC2\f\u0017B\u0001\t\u000e\u0005\u0019\te.\u001f*fMB!!cE\u000b!\u001b\u0005!\u0011B\u0001\u000b\u0005\u0005IIeN\\3s!J|G-^2u\u001b>$W\u000f\\3\u0011\u0005Y9B\u0002\u0001\u0003\u00061\u0001\u0011\r!\u0007\u0002\u0002-F\u0011!$\b\t\u0003\u0019mI!\u0001H\u0007\u0003\u000f9{G\u000f[5oOB\u0011ABH\u0005\u0003?5\u00111!\u00118z!\t1\u0012\u0005B\u0003#\u0001\t\u0007\u0011DA\u0001T\u0003\u0015iW\u000f\u001c,W+\u0005)\u0003#\u0002\u0014/+U)bBA\u0014-\u001b\u0005A#BA\u0015+\u0003%y\u0007/\u001a:bi>\u00148O\u0003\u0002,\r\u00051A.\u001b8bY\u001eL!!\f\u0015\u0002\u0017=\u0003X*\u001e7TG\u0006d\u0017M]\u0005\u0003_A\u0012Q!S7qYJJ!!\r\u001a\u0003\u000bU3UO\\2\u000b\u0005M2\u0011aB4f]\u0016\u0014\u0018nY\u0001\u0004]\u0016<W#\u0001\u001c\u0011\t]RT#\u0006\b\u0003OaJ!!\u000f\u0015\u0002\u000b=\u0003h*Z4\n\u0005m\u0002$\u0001B%na2\u0004"
)
public interface VectorRing extends InnerProductModule {
   UFunc.UImpl2 mulVV();

   UFunc.UImpl neg();
}
